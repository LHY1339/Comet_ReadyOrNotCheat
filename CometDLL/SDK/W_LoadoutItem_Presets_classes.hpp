#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_LoadoutItem_Presets

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_LoadoutItem_Presets.W_LoadoutItem_Presets_C
// 0x0060 (0x0348 - 0x02E8)
class UW_LoadoutItem_Presets_C final : public UBaseWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UW_LoadoutItem_Preset_C*                LoadoutItem_Preset_1;                              // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LoadoutItem_Preset_C*                LoadoutItem_Preset_2;                              // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LoadoutItem_Preset_C*                LoadoutItem_Preset_3;                              // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LoadoutItem_Preset_C*                LoadoutItem_Preset_4;                              // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LoadoutItem_Preset_C*                LoadoutItem_Preset_Default;                        // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           LoadoutItem_Presets_Container;                     // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LoadoutItem_Preset_C*                LoadoutItem_WeaponTable;                           // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         SelectedRow;                                       // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAnyKeyDown;                                       // 0x032C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLoaded;                                           // 0x032D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32E[0x2];                                      // 0x032E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 LastSetItemClass;                                  // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutItem_Preset_C*                LastSelectedPreset;                                // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutCustomizationMenu_C*          Owner;                                             // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void Click();
	void Construct();
	void DeselectAllPresetsExcept(class UW_LoadoutItem_Preset_C* Loadout_Item_Preset);
	void Enter();
	void Escape();
	void ExecuteUbergraph_W_LoadoutItem_Presets(int32 EntryPoint);
	void Exit();
	void Hover();
	void InitializeWidget();
	void LoadPresets__ItemClass_(const class UClass*& ItemClass);
	void NextRow();
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	struct FEventReply OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void OnLoadoutItemPresetButtonClicked(class UW_LoadoutItem_Preset_C* LoadoutItemPresetWidget);
	void OnLoadoutItemPresetButtonHovered(class UW_LoadoutItem_Preset_C* LoadoutItemPresetWidget);
	void PreviousRow();
	void Select(int32 Index_0);
	void StartRenamingPreset();
	void StopRenamingPreset();
	void Unhover();
	void UnhoverAllPresetsExcept(class UW_LoadoutItem_Preset_C* Loadout_Item_Preset);

	void CanRenamePreset(bool* Return_Value) const;
	void ConflictsWithOtherPresets(class UW_LoadoutItem_Preset_C* Loadout_Item_Preset, const class FText& InText, bool* Return_Value) const;
	void FindSelectedPreset(const class UClass*& ItemClass, int32* Return_Value, class UW_LoadoutItem_Preset_C** Loadout_Item_Preset) const;
	void GetSelectedPresetWidget(class UW_LoadoutItem_Preset_C** Return_Value) const;
	void IsRenamingPreset(bool* Return_Value) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_LoadoutItem_Presets_C">();
	}
	static class UW_LoadoutItem_Presets_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_LoadoutItem_Presets_C>();
	}
};
static_assert(alignof(UW_LoadoutItem_Presets_C) == 0x000008, "Wrong alignment on UW_LoadoutItem_Presets_C");
static_assert(sizeof(UW_LoadoutItem_Presets_C) == 0x000348, "Wrong size on UW_LoadoutItem_Presets_C");
static_assert(offsetof(UW_LoadoutItem_Presets_C, UberGraphFrame) == 0x0002E8, "Member 'UW_LoadoutItem_Presets_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_LoadoutItem_Presets_C, LoadoutItem_Preset_1) == 0x0002F0, "Member 'UW_LoadoutItem_Presets_C::LoadoutItem_Preset_1' has a wrong offset!");
static_assert(offsetof(UW_LoadoutItem_Presets_C, LoadoutItem_Preset_2) == 0x0002F8, "Member 'UW_LoadoutItem_Presets_C::LoadoutItem_Preset_2' has a wrong offset!");
static_assert(offsetof(UW_LoadoutItem_Presets_C, LoadoutItem_Preset_3) == 0x000300, "Member 'UW_LoadoutItem_Presets_C::LoadoutItem_Preset_3' has a wrong offset!");
static_assert(offsetof(UW_LoadoutItem_Presets_C, LoadoutItem_Preset_4) == 0x000308, "Member 'UW_LoadoutItem_Presets_C::LoadoutItem_Preset_4' has a wrong offset!");
static_assert(offsetof(UW_LoadoutItem_Presets_C, LoadoutItem_Preset_Default) == 0x000310, "Member 'UW_LoadoutItem_Presets_C::LoadoutItem_Preset_Default' has a wrong offset!");
static_assert(offsetof(UW_LoadoutItem_Presets_C, LoadoutItem_Presets_Container) == 0x000318, "Member 'UW_LoadoutItem_Presets_C::LoadoutItem_Presets_Container' has a wrong offset!");
static_assert(offsetof(UW_LoadoutItem_Presets_C, LoadoutItem_WeaponTable) == 0x000320, "Member 'UW_LoadoutItem_Presets_C::LoadoutItem_WeaponTable' has a wrong offset!");
static_assert(offsetof(UW_LoadoutItem_Presets_C, SelectedRow) == 0x000328, "Member 'UW_LoadoutItem_Presets_C::SelectedRow' has a wrong offset!");
static_assert(offsetof(UW_LoadoutItem_Presets_C, bAnyKeyDown) == 0x00032C, "Member 'UW_LoadoutItem_Presets_C::bAnyKeyDown' has a wrong offset!");
static_assert(offsetof(UW_LoadoutItem_Presets_C, bLoaded) == 0x00032D, "Member 'UW_LoadoutItem_Presets_C::bLoaded' has a wrong offset!");
static_assert(offsetof(UW_LoadoutItem_Presets_C, LastSetItemClass) == 0x000330, "Member 'UW_LoadoutItem_Presets_C::LastSetItemClass' has a wrong offset!");
static_assert(offsetof(UW_LoadoutItem_Presets_C, LastSelectedPreset) == 0x000338, "Member 'UW_LoadoutItem_Presets_C::LastSelectedPreset' has a wrong offset!");
static_assert(offsetof(UW_LoadoutItem_Presets_C, Owner) == 0x000340, "Member 'UW_LoadoutItem_Presets_C::Owner' has a wrong offset!");

}

