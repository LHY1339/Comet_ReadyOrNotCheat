#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Device_Tablet

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Device_Tablet.Device_Tablet_C
// 0x0020 (0x0C40 - 0x0C20)
class ADevice_Tablet_C final : public ATablet
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0C20(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFMODAudioComponent*                    VibrationComponent;                                // 0x0C28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    SpeakerComponent;                                  // 0x0C30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       ScreenWidget;                                      // 0x0C38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Device_Tablet(int32 EntryPoint);
	void HolsterScreen();
	void PlayNotificationEvent();
	void PlaySoundEvent(class UFMODEvent* Event);
	void PlayVibrationEvent();
	void ReceiveBeginPlay();
	void SleepScreen();
	void WakeScreen();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Device_Tablet_C">();
	}
	static class ADevice_Tablet_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADevice_Tablet_C>();
	}
};
static_assert(alignof(ADevice_Tablet_C) == 0x000010, "Wrong alignment on ADevice_Tablet_C");
static_assert(sizeof(ADevice_Tablet_C) == 0x000C40, "Wrong size on ADevice_Tablet_C");
static_assert(offsetof(ADevice_Tablet_C, UberGraphFrame) == 0x000C20, "Member 'ADevice_Tablet_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ADevice_Tablet_C, VibrationComponent) == 0x000C28, "Member 'ADevice_Tablet_C::VibrationComponent' has a wrong offset!");
static_assert(offsetof(ADevice_Tablet_C, SpeakerComponent) == 0x000C30, "Member 'ADevice_Tablet_C::SpeakerComponent' has a wrong offset!");
static_assert(offsetof(ADevice_Tablet_C, ScreenWidget) == 0x000C38, "Member 'ADevice_Tablet_C::ScreenWidget' has a wrong offset!");

}

