#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Briefing_TImeline

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "E_Briefing_Audio_PlayStates_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function W_Briefing_TImeline.W_Briefing_TImeline_C.AudioPlay
// 0x0008 (0x0008 - 0x0000)
struct W_Briefing_TImeline_C_AudioPlay final
{
public:
	double                                        Start;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Briefing_TImeline_C_AudioPlay) == 0x000008, "Wrong alignment on W_Briefing_TImeline_C_AudioPlay");
static_assert(sizeof(W_Briefing_TImeline_C_AudioPlay) == 0x000008, "Wrong size on W_Briefing_TImeline_C_AudioPlay");
static_assert(offsetof(W_Briefing_TImeline_C_AudioPlay, Start) == 0x000000, "Member 'W_Briefing_TImeline_C_AudioPlay::Start' has a wrong offset!");

// Function W_Briefing_TImeline.W_Briefing_TImeline_C.BndEvt__W_Briefing_Timeline_TrackWave_K2Node_ComponentBoundEvent_1_TimelineEventEnded__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Briefing_TImeline_C_BndEvt__W_Briefing_Timeline_TrackWave_K2Node_ComponentBoundEvent_1_TimelineEventEnded__DelegateSignature final
{
public:
	double                                        EventID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Briefing_TImeline_C_BndEvt__W_Briefing_Timeline_TrackWave_K2Node_ComponentBoundEvent_1_TimelineEventEnded__DelegateSignature) == 0x000008, "Wrong alignment on W_Briefing_TImeline_C_BndEvt__W_Briefing_Timeline_TrackWave_K2Node_ComponentBoundEvent_1_TimelineEventEnded__DelegateSignature");
static_assert(sizeof(W_Briefing_TImeline_C_BndEvt__W_Briefing_Timeline_TrackWave_K2Node_ComponentBoundEvent_1_TimelineEventEnded__DelegateSignature) == 0x000008, "Wrong size on W_Briefing_TImeline_C_BndEvt__W_Briefing_Timeline_TrackWave_K2Node_ComponentBoundEvent_1_TimelineEventEnded__DelegateSignature");
static_assert(offsetof(W_Briefing_TImeline_C_BndEvt__W_Briefing_Timeline_TrackWave_K2Node_ComponentBoundEvent_1_TimelineEventEnded__DelegateSignature, EventID) == 0x000000, "Member 'W_Briefing_TImeline_C_BndEvt__W_Briefing_Timeline_TrackWave_K2Node_ComponentBoundEvent_1_TimelineEventEnded__DelegateSignature::EventID' has a wrong offset!");

// Function W_Briefing_TImeline.W_Briefing_TImeline_C.ExecuteUbergraph_W_Briefing_TImeline
// 0x01D0 (0x01D0 - 0x0000)
struct W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTimelineEvent>                 K2Node_CustomEvent_Events;                         // 0x0028(0x0010)(ConstParm, ReferenceParm)
	class USoundWave*                             K2Node_CustomEvent_AudioWaveAsset;                 // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimelineEvent                         CallFunc_Array_Get_Item;                           // 0x0040(0x0050)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Briefing_Timeline_Entry_C*           CallFunc_Create_ReturnValue;                       // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USoundWave*                             CallFunc_GetTimelineEventTestData_Audio_Asset;     // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTimelineEvent>                 CallFunc_GetTimelineEventTestData_Events;          // 0x00B0(0x0010)(ReferenceParm)
	TMap<double, struct FTimelineEvent>           CallFunc_GetTimelineEventTestData_EventEntries;    // 0x00C0(0x0050)()
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0110(0x0020)(NoDestructor)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_EventID;                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimelineEvent                         CallFunc_Map_Find_Value;                           // 0x0158(0x0050)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Add_Key_ImplicitCast;                 // 0x01C8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline) == 0x000008, "Wrong alignment on W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline");
static_assert(sizeof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline) == 0x0001D0, "Wrong size on W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, EntryPoint) == 0x000000, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, CallFunc_MakeVector2D_ReturnValue) == 0x000008, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, Temp_int_Array_Index_Variable) == 0x000018, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, K2Node_Event_IsDesignTime) == 0x000024, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, K2Node_CustomEvent_Events) == 0x000028, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::K2Node_CustomEvent_Events' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, K2Node_CustomEvent_AudioWaveAsset) == 0x000038, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::K2Node_CustomEvent_AudioWaveAsset' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, CallFunc_Array_Get_Item) == 0x000040, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, CallFunc_Create_ReturnValue) == 0x000098, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, CallFunc_AddChildToCanvas_ReturnValue) == 0x0000A0, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, CallFunc_GetTimelineEventTestData_Audio_Asset) == 0x0000A8, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::CallFunc_GetTimelineEventTestData_Audio_Asset' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, CallFunc_GetTimelineEventTestData_Events) == 0x0000B0, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::CallFunc_GetTimelineEventTestData_Events' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, CallFunc_GetTimelineEventTestData_EventEntries) == 0x0000C0, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::CallFunc_GetTimelineEventTestData_EventEntries' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, K2Node_MakeStruct_Anchors) == 0x000110, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, CallFunc_GetDesiredSize_ReturnValue) == 0x000130, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, K2Node_ComponentBoundEvent_EventID) == 0x000140, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::K2Node_ComponentBoundEvent_EventID' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, CallFunc_BreakVector2D_X) == 0x000148, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, CallFunc_BreakVector2D_Y) == 0x000150, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, CallFunc_Map_Find_Value) == 0x000158, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, CallFunc_Map_Find_ReturnValue) == 0x0001A8, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001B0, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, CallFunc_MakeVector2D_ReturnValue_1) == 0x0001B8, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline, CallFunc_Map_Add_Key_ImplicitCast) == 0x0001C8, "Member 'W_Briefing_TImeline_C_ExecuteUbergraph_W_Briefing_TImeline::CallFunc_Map_Add_Key_ImplicitCast' has a wrong offset!");

// Function W_Briefing_TImeline.W_Briefing_TImeline_C.Initialize
// 0x0018 (0x0018 - 0x0000)
struct W_Briefing_TImeline_C_Initialize final
{
public:
	TArray<struct FTimelineEvent>                 Events;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class USoundWave*                             AudioWaveAsset;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Briefing_TImeline_C_Initialize) == 0x000008, "Wrong alignment on W_Briefing_TImeline_C_Initialize");
static_assert(sizeof(W_Briefing_TImeline_C_Initialize) == 0x000018, "Wrong size on W_Briefing_TImeline_C_Initialize");
static_assert(offsetof(W_Briefing_TImeline_C_Initialize, Events) == 0x000000, "Member 'W_Briefing_TImeline_C_Initialize::Events' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_Initialize, AudioWaveAsset) == 0x000010, "Member 'W_Briefing_TImeline_C_Initialize::AudioWaveAsset' has a wrong offset!");

// Function W_Briefing_TImeline.W_Briefing_TImeline_C.Playing
// 0x0008 (0x0008 - 0x0000)
struct W_Briefing_TImeline_C_Playing final
{
public:
	double                                        CurrentPlayTime;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Briefing_TImeline_C_Playing) == 0x000008, "Wrong alignment on W_Briefing_TImeline_C_Playing");
static_assert(sizeof(W_Briefing_TImeline_C_Playing) == 0x000008, "Wrong size on W_Briefing_TImeline_C_Playing");
static_assert(offsetof(W_Briefing_TImeline_C_Playing, CurrentPlayTime) == 0x000000, "Member 'W_Briefing_TImeline_C_Playing::CurrentPlayTime' has a wrong offset!");

// Function W_Briefing_TImeline.W_Briefing_TImeline_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_Briefing_TImeline_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Briefing_TImeline_C_PreConstruct) == 0x000001, "Wrong alignment on W_Briefing_TImeline_C_PreConstruct");
static_assert(sizeof(W_Briefing_TImeline_C_PreConstruct) == 0x000001, "Wrong size on W_Briefing_TImeline_C_PreConstruct");
static_assert(offsetof(W_Briefing_TImeline_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_Briefing_TImeline_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_Briefing_TImeline.W_Briefing_TImeline_C.SetPlayState
// 0x0002 (0x0002 - 0x0000)
struct W_Briefing_TImeline_C_SetPlayState final
{
public:
	E_Briefing_Audio_PlayStates                   AudioPlayState;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Briefing_TImeline_C_SetPlayState) == 0x000001, "Wrong alignment on W_Briefing_TImeline_C_SetPlayState");
static_assert(sizeof(W_Briefing_TImeline_C_SetPlayState) == 0x000002, "Wrong size on W_Briefing_TImeline_C_SetPlayState");
static_assert(offsetof(W_Briefing_TImeline_C_SetPlayState, AudioPlayState) == 0x000000, "Member 'W_Briefing_TImeline_C_SetPlayState::AudioPlayState' has a wrong offset!");
static_assert(offsetof(W_Briefing_TImeline_C_SetPlayState, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'W_Briefing_TImeline_C_SetPlayState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

