#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPW_SMM_UI

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "BPS_SMM_SaveQueue_structs.hpp"
#include "BPS_SMM_NotificationQueue_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "AdvancedSessions_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BPW_SMM_UI.BPW_SMM_UI_C
// 0x0318 (0x05D8 - 0x02C0)
class UBPW_SMM_UI_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       NotificationSlideOut;                              // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       NotificationSlideIn;                               // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBPW_SMM_Page_Settings_C*               BPW_SMM_Page_Settings;                             // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPW_SMM_Tab_C*                         BPW_TabName_Settings;                              // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Background;                                 // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Close;                                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Console_Execute;                            // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Main;                                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Notification;                               // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          EditableText_NotificationTitle;                    // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       EditableTextBox_Console;                           // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Console;                             // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox;                                   // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMultiLineEditableText*                 MultiLineEditableText_NotifyBody;                  // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_TopButtons;                              // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_WindowTabs;                              // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Main;                                      // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_MainWindow;                         // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 ScanPath;                                          // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FTopLevelAssetPath                     ClassPathName;                                     // 0x0368(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UPDA_SMM_MenuData_C*>            MenuData;                                          // 0x0378(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UBPW_SMM_Tab_C*                         SelectedTabWidget;                                 // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UBPW_SMM_Tab_C*>                 WidgetTabs;                                        // 0x0390(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class FName                                   SelectedTabKey;                                    // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MenuActive;                                        // 0x03A8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class USMM_SaveGame_Base_C*> SaveGameConfigs;                                // 0x03B0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FString, struct FBPS_SMM_SaveQueue> asyncRetrieveQueue;                               // 0x0400(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FString, struct FBPS_SMM_SaveQueue> asyncSavingQueue;                                 // 0x0450(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USMM_SaveGame_Config_SMM_C*             SaveConfig;                                        // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         ConsoleNavigation;                                 // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         LogHistory;                                        // 0x04B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 LogLastMessage;                                    // 0x04C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<TScriptInterface<class IBPI_SMM_Mod_C>> SMM_UIs;                                          // 0x04D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<TScriptInterface<class IBPI_SMM_Mod_C>> SMM_Config_UIs;                                   // 0x04E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class UUserWidget*, int32>               WidgetTopButtons;                                  // 0x04F0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FInputActionKeyMapping                 LastActionKeyMapping;                              // 0x0540(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FInputActionKeyMapping                 LastActionKeyMapping_Portal;                       // 0x0568(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UObject*>                        AsyncObjects;                                      // 0x0590(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FBPS_SMM_NotificationQueue>     NotificationQueue;                                 // 0x05A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        NotificationDuration;                              // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SBL_Code_C>       SBLCode;                                           // 0x05B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FString                                 gamenameoverride;                                  // 0x05C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void AddToArray(TArray<TScriptInterface<class IBPI_SMM_Mod_C>>& Source, const TScriptInterface<class IBPI_SMM_Mod_C>& Element, TArray<TScriptInterface<class IBPI_SMM_Mod_C>>* NewArray);
	void AsyncInitWidgets();
	void AsyncRetrieveSG(TScriptInterface<class IBPI_SMM_Mod_C> SMM_Mod, const class FString& ModName, const class FString& SaveSlot, TSoftClassPtr<class UClass> Class_0);
	void AsyncSave(TScriptInterface<class IBPI_SMM_Mod_C> SMM_Mod, const class FString& ModName, const class FString& SlotName);
	void AsyncSaveRetrieveCallback(class USMM_SaveGame_Base_C* SMM_SaveGame_Config, const class FString& Key);
	void AsyncSaveSG(TScriptInterface<class IBPI_SMM_Mod_C> SMM_Mod, class USMM_SaveGame_Base_C* SMM_SaveGame);
	void AsyncSaveSG_by_Name(TScriptInterface<class IBPI_SMM_Mod_C> SMM_Mod, const class FString& ModName, const class FString& SlotName);
	void AsyncSaveWriteCallback(class USMM_SaveGame_Base_C* InputPin);
	void BlockingRetrieveSG(const class FString& ModName, const class FString& SaveSlot, TSoftClassPtr<class UClass> Class_0, class USMM_SaveGame_Base_C** SMM_SaveGame);
	void BlockingSaveSG(const class FString& ModName, const class FString& SaveSlot, class USMM_SaveGame_Config_SMM_C* SMM_SaveGame);
	void BndEvt__BPW_SMM_UI_BPW_TabName_Settings_K2Node_ComponentBoundEvent_0_TabSelected__DelegateSignature(class UBPW_SMM_Tab_C* TabWidget);
	void BndEvt__BPW_SMM_UI_Button_Background_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__BPW_SMM_UI_Button_Close_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__BPW_SMM_UI_Button_Console_Run_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__BPW_SMM_UI_Button_Notification_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__BPW_SMM_UI_EditableTextBox_Console_K2Node_ComponentBoundEvent_3_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void CanOpenMenu(bool* Continue);
	void Close_UI();
	void Completed_73AB5104476BED7E735984886D31D9F5(class USaveGame* SaveGame, bool bSuccess);
	void Completed_Event(bool Success, class USaveGame* SaveGame, const class FString& ModName, const class FString& SlotName, TSoftClassPtr<class UClass> Class_0, class USMM_AsyncLoadSave_C* Object);
	void Construct();
	void CreateAsyncLoad(class USMM_AsyncLoadSave_C** Object);
	void CreateNewSaveObject(TSoftClassPtr<class UClass> Class_0, const class FString& ModName, const class FString& SlotName);
	class UWidget* DoCustomNavigation_Console(EUINavigation Navigation_0);
	class UWidget* DoCustomNavigation_ToActivePage(EUINavigation Navigation_0);
	class UWidget* DoCustomNavigation_ToTabs(EUINavigation Navigation_0);
	void DoLog(const class FString& Input, const class FString& Source);
	void DoNotification(double Duration, const class FText& Title, const class FText& Body);
	void EndNotification();
	void ExecuteUbergraph_BPW_SMM_UI(int32 EntryPoint);
	void Get_SMM_Data_Assets(TArray<class UPDA_SMM_MenuData_C*>* DataAssets);
	void GetConfigTabs(class UUserWidget* SettingTab, TMap<class FName, class UUserWidget*>* ConfigTabs);
	void GetLastLogMessage(class FString* LastLogMessage);
	void GetLogHistory(TArray<class FString>* LogHistory_0);
	void GetSelectedConfigTab(class UUserWidget* SettingTab, class UUserWidget** SelectedTab, class FName* Key);
	void GetSelectedSettingTab(class UUserWidget** SelectedTab, class FName* Key);
	void GetSelectedTab(class UUserWidget** SelectedTab, class FName* Key);
	void GetSettingTabs(TMap<class FName, class UUserWidget*>* SettingTabs);
	void GetTabs(TMap<class FName, class UUserWidget*>* Tabs);
	void InitHide();
	void InpActEvt_SimpleModMenu_Toggle_Gamepad_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_SimpleModMenu_Toggle_Gamepad_K2Node_InputActionEvent_2(const struct FKey& Key);
	void InpActEvt_SimpleModMenu_Toggle_HUD_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_SimpleModMenu_Toggle_K2Node_InputActionEvent_3(const struct FKey& Key);
	void InvalidateCache();
	void LogUpdated();
	void MainMenuButton(class UCommonButtonBase* Button);
	void ModMenuPostInit(const TScriptInterface<class IBPI_SMM_UI_C> SMM_UI);
	void NextMenuData();
	void NextTopButton();
	void NextWindow();
	void OnAnimationFinished(const class UWidgetAnimation* Animation);
	void OnConfigChanged();
	void OnFailure_B36FF89D4798B669E88555BF53C4C17F();
	void OnLoaded_B4760A6A4E9C01FCE1419DBDC46594B7(TSubclassOf<class UObject> Loaded);
	void OnLoaded_B950143F4CDA0ABA4162A8B711DE9607(TSubclassOf<class UObject> Loaded);
	void OnRep_MenuActive();
	void OnRetrievedSG(const class FString& ModName, const class FString& SlotName, class USMM_SaveGame_Base_C* SMM_SaveGame_Config);
	void OnSavedSG(const class FString& ModName, const class FString& SlotName, class USMM_SaveGame_Base_C* SMM_SaveGame);
	void OnSuccess_B36FF89D4798B669E88555BF53C4C17F();
	void Open_UI();
	void PageClosed();
	void PageOpened();
	void Place_Main_Menu_Button();
	void PostInit();
	void PreConstruct(bool IsDesignTime);
	void RegisterConfigPage(TScriptInterface<class IBPI_SMM_Mod_C> SMM_Mod);
	void RegisterPage(TScriptInterface<class IBPI_SMM_Mod_C> SMM_Mod);
	void ScanForUIData();
	void SelectConfigTab(class UUserWidget* ConfigTab, class UUserWidget* SettingTab);
	void SelectConfigTabByKey(class FName TabKey, class UUserWidget* SettingTab);
	void SelectedMapLoop();
	void SelectSettingTab(class UUserWidget* SettingTab);
	void SelectSettingTabByKey(class FName TabKey);
	void SelectTab(class UUserWidget* Tab);
	void SelectTabByKey(class FName TabKey);
	void SendTabButton(class UButton* Button);
	void SetNavigationFocus(class UWidget** Widget);
	void SMM_SelectedMap();
	void SortAndAddTabs();
	void SortAndAddTopButtons();
	void StartNotification();
	void TabSelected(class UBPW_SMM_Tab_C* TabWidget);
	void UpdateAllTabsVisual();
	void WidgetCreated_Event(class UBPW_SMM_Tab_C* Tab);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPW_SMM_UI_C">();
	}
	static class UBPW_SMM_UI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPW_SMM_UI_C>();
	}
};
static_assert(alignof(UBPW_SMM_UI_C) == 0x000008, "Wrong alignment on UBPW_SMM_UI_C");
static_assert(sizeof(UBPW_SMM_UI_C) == 0x0005D8, "Wrong size on UBPW_SMM_UI_C");
static_assert(offsetof(UBPW_SMM_UI_C, UberGraphFrame) == 0x0002C0, "Member 'UBPW_SMM_UI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, NotificationSlideOut) == 0x0002C8, "Member 'UBPW_SMM_UI_C::NotificationSlideOut' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, NotificationSlideIn) == 0x0002D0, "Member 'UBPW_SMM_UI_C::NotificationSlideIn' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, BPW_SMM_Page_Settings) == 0x0002D8, "Member 'UBPW_SMM_UI_C::BPW_SMM_Page_Settings' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, BPW_TabName_Settings) == 0x0002E0, "Member 'UBPW_SMM_UI_C::BPW_TabName_Settings' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, Button_Background) == 0x0002E8, "Member 'UBPW_SMM_UI_C::Button_Background' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, Button_Close) == 0x0002F0, "Member 'UBPW_SMM_UI_C::Button_Close' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, Button_Console_Execute) == 0x0002F8, "Member 'UBPW_SMM_UI_C::Button_Console_Execute' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, Button_Main) == 0x000300, "Member 'UBPW_SMM_UI_C::Button_Main' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, Button_Notification) == 0x000308, "Member 'UBPW_SMM_UI_C::Button_Notification' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, EditableText_NotificationTitle) == 0x000310, "Member 'UBPW_SMM_UI_C::EditableText_NotificationTitle' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, EditableTextBox_Console) == 0x000318, "Member 'UBPW_SMM_UI_C::EditableTextBox_Console' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, HorizontalBox_Console) == 0x000320, "Member 'UBPW_SMM_UI_C::HorizontalBox_Console' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, InvalidationBox) == 0x000328, "Member 'UBPW_SMM_UI_C::InvalidationBox' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, MultiLineEditableText_NotifyBody) == 0x000330, "Member 'UBPW_SMM_UI_C::MultiLineEditableText_NotifyBody' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, ScrollBox_TopButtons) == 0x000338, "Member 'UBPW_SMM_UI_C::ScrollBox_TopButtons' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, ScrollBox_WindowTabs) == 0x000340, "Member 'UBPW_SMM_UI_C::ScrollBox_WindowTabs' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, SizeBox_Main) == 0x000348, "Member 'UBPW_SMM_UI_C::SizeBox_Main' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, WidgetSwitcher_MainWindow) == 0x000350, "Member 'UBPW_SMM_UI_C::WidgetSwitcher_MainWindow' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, ScanPath) == 0x000358, "Member 'UBPW_SMM_UI_C::ScanPath' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, ClassPathName) == 0x000368, "Member 'UBPW_SMM_UI_C::ClassPathName' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, MenuData) == 0x000378, "Member 'UBPW_SMM_UI_C::MenuData' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, SelectedTabWidget) == 0x000388, "Member 'UBPW_SMM_UI_C::SelectedTabWidget' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, WidgetTabs) == 0x000390, "Member 'UBPW_SMM_UI_C::WidgetTabs' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, SelectedTabKey) == 0x0003A0, "Member 'UBPW_SMM_UI_C::SelectedTabKey' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, MenuActive) == 0x0003A8, "Member 'UBPW_SMM_UI_C::MenuActive' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, SaveGameConfigs) == 0x0003B0, "Member 'UBPW_SMM_UI_C::SaveGameConfigs' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, asyncRetrieveQueue) == 0x000400, "Member 'UBPW_SMM_UI_C::asyncRetrieveQueue' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, asyncSavingQueue) == 0x000450, "Member 'UBPW_SMM_UI_C::asyncSavingQueue' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, SaveConfig) == 0x0004A0, "Member 'UBPW_SMM_UI_C::SaveConfig' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, ConsoleNavigation) == 0x0004A8, "Member 'UBPW_SMM_UI_C::ConsoleNavigation' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, LogHistory) == 0x0004B0, "Member 'UBPW_SMM_UI_C::LogHistory' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, LogLastMessage) == 0x0004C0, "Member 'UBPW_SMM_UI_C::LogLastMessage' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, SMM_UIs) == 0x0004D0, "Member 'UBPW_SMM_UI_C::SMM_UIs' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, SMM_Config_UIs) == 0x0004E0, "Member 'UBPW_SMM_UI_C::SMM_Config_UIs' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, WidgetTopButtons) == 0x0004F0, "Member 'UBPW_SMM_UI_C::WidgetTopButtons' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, LastActionKeyMapping) == 0x000540, "Member 'UBPW_SMM_UI_C::LastActionKeyMapping' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, LastActionKeyMapping_Portal) == 0x000568, "Member 'UBPW_SMM_UI_C::LastActionKeyMapping_Portal' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, AsyncObjects) == 0x000590, "Member 'UBPW_SMM_UI_C::AsyncObjects' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, NotificationQueue) == 0x0005A0, "Member 'UBPW_SMM_UI_C::NotificationQueue' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, NotificationDuration) == 0x0005B0, "Member 'UBPW_SMM_UI_C::NotificationDuration' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, SBLCode) == 0x0005B8, "Member 'UBPW_SMM_UI_C::SBLCode' has a wrong offset!");
static_assert(offsetof(UBPW_SMM_UI_C, gamenameoverride) == 0x0005C8, "Member 'UBPW_SMM_UI_C::gamenameoverride' has a wrong offset!");

}

