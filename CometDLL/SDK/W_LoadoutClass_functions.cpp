#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_LoadoutClass

#include "Basic.hpp"

#include "W_LoadoutClass_classes.hpp"
#include "W_LoadoutClass_parameters.hpp"


namespace SDK
{

// Function W_LoadoutClass.W_LoadoutClass_C.BndEvt__Button_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature
// (BlueprintEvent)

void UW_LoadoutClass_C::BndEvt__Button_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "BndEvt__Button_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.BndEvt__Button_K2Node_ComponentBoundEvent_2_OnReleased__DelegateSignature
// (BlueprintEvent)

void UW_LoadoutClass_C::BndEvt__Button_K2Node_ComponentBoundEvent_2_OnReleased__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "BndEvt__Button_K2Node_ComponentBoundEvent_2_OnReleased__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.BndEvt__Button_K2Node_ComponentBoundEvent_3_OnHovered__DelegateSignature
// (BlueprintEvent)

void UW_LoadoutClass_C::BndEvt__Button_K2Node_ComponentBoundEvent_3_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "BndEvt__Button_K2Node_ComponentBoundEvent_3_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.BndEvt__W_StandardButton_1_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UW_StandardButton_C*              CallingButton                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_LoadoutClass_C::BndEvt__W_StandardButton_1_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(class UW_StandardButton_C* CallingButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "BndEvt__W_StandardButton_1_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");

	Params::W_LoadoutClass_C_BndEvt__W_StandardButton_1_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature Parms{};

	Parms.CallingButton = CallingButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_LoadoutClass.W_LoadoutClass_C.CollapseChildren
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bResetPreviewAnim                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_LoadoutClass_C::CollapseChildren(bool bResetPreviewAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "CollapseChildren");

	Params::W_LoadoutClass_C_CollapseChildren Parms{};

	Parms.bResetPreviewAnim = bResetPreviewAnim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_LoadoutClass.W_LoadoutClass_C.CreateLoadoutItemWidget
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      LoadoutItemName                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// EItemClass                              ItemClass                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           ItemObjectClass                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsTactical                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TacticalSlot                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsMultipleTacticalSlots                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MaxTacticalSlots                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   StartingTacticalSlot                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_LoadoutClass_C::CreateLoadoutItemWidget(const class FText& LoadoutItemName, EItemClass ItemClass, class UClass* ItemObjectClass, bool bIsTactical, int32 TacticalSlot, bool bIsMultipleTacticalSlots, int32 MaxTacticalSlots, int32 StartingTacticalSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "CreateLoadoutItemWidget");

	Params::W_LoadoutClass_C_CreateLoadoutItemWidget Parms{};

	Parms.LoadoutItemName = std::move(LoadoutItemName);
	Parms.ItemClass = ItemClass;
	Parms.ItemObjectClass = ItemObjectClass;
	Parms.bIsTactical = bIsTactical;
	Parms.TacticalSlot = TacticalSlot;
	Parms.bIsMultipleTacticalSlots = bIsMultipleTacticalSlots;
	Parms.MaxTacticalSlots = MaxTacticalSlots;
	Parms.StartingTacticalSlot = StartingTacticalSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_LoadoutClass.W_LoadoutClass_C.DeselectAllExcept
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_LoadoutItem_C*                 InLoadoutItemWidget                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_LoadoutClass_C::DeselectAllExcept(class UW_LoadoutItem_C* InLoadoutItemWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "DeselectAllExcept");

	Params::W_LoadoutClass_C_DeselectAllExcept Parms{};

	Parms.InLoadoutItemWidget = InLoadoutItemWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_LoadoutClass.W_LoadoutClass_C.EnterPresetsMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UW_LoadoutClass_C::EnterPresetsMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "EnterPresetsMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.Escape
// (Public, BlueprintCallable, BlueprintEvent)

void UW_LoadoutClass_C::Escape()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "Escape");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.ExecuteUbergraph_W_LoadoutClass
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_LoadoutClass_C::ExecuteUbergraph_W_LoadoutClass(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "ExecuteUbergraph_W_LoadoutClass");

	Params::W_LoadoutClass_C_ExecuteUbergraph_W_LoadoutClass Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_LoadoutClass.W_LoadoutClass_C.ExitPresetsMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UW_LoadoutClass_C::ExitPresetsMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "ExitPresetsMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.ExpandChildren
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_LoadoutClass_C::ExpandChildren()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "ExpandChildren");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.Get_SelectedItemInfo_Container_Visibility
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UW_LoadoutClass_C::Get_SelectedItemInfo_Container_Visibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "Get_SelectedItemInfo_Container_Visibility");

	Params::W_LoadoutClass_C_Get_SelectedItemInfo_Container_Visibility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_LoadoutClass.W_LoadoutClass_C.HideSelectedItemInfo
// (Public, BlueprintCallable, BlueprintEvent)

void UW_LoadoutClass_C::HideSelectedItemInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "HideSelectedItemInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.HoverLoadoutItem
// (Private, BlueprintCallable, BlueprintEvent)

void UW_LoadoutClass_C::HoverLoadoutItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "HoverLoadoutItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.HoverUIElement
// (Public, BlueprintCallable, BlueprintEvent)

void UW_LoadoutClass_C::HoverUIElement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "HoverUIElement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.InitializeLoadoutItems
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_LoadoutClass_C::InitializeLoadoutItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "InitializeLoadoutItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.NextColumn
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_LoadoutClass_C::NextColumn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "NextColumn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.NextRow
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_LoadoutClass_C::NextRow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "NextRow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FKeyEvent&                 InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_LoadoutClass_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "OnKeyDown");

	Params::W_LoadoutClass_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_LoadoutClass.W_LoadoutClass_C.OnKeyUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FKeyEvent&                 InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_LoadoutClass_C::OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "OnKeyUp");

	Params::W_LoadoutClass_C_OnKeyUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_LoadoutClass.W_LoadoutClass_C.OnLoadoutItemButtonHovered
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_LoadoutItem_C*                 LoadoutItem                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_LoadoutClass_C::OnLoadoutItemButtonHovered(class UW_LoadoutItem_C* LoadoutItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "OnLoadoutItemButtonHovered");

	Params::W_LoadoutClass_C_OnLoadoutItemButtonHovered Parms{};

	Parms.LoadoutItem = LoadoutItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_LoadoutClass.W_LoadoutClass_C.OnLoadoutItemButtonUnhovered
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_LoadoutItem_C*                 LoadoutItem                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_LoadoutClass_C::OnLoadoutItemButtonUnhovered(class UW_LoadoutItem_C* LoadoutItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "OnLoadoutItemButtonUnhovered");

	Params::W_LoadoutClass_C_OnLoadoutItemButtonUnhovered Parms{};

	Parms.LoadoutItem = LoadoutItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_LoadoutClass.W_LoadoutClass_C.OnLoadoutItemClicked
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_LoadoutItem_C*                 LoadoutItemWidget                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_LoadoutClass_C::OnLoadoutItemClicked(class UW_LoadoutItem_C* LoadoutItemWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "OnLoadoutItemClicked");

	Params::W_LoadoutClass_C_OnLoadoutItemClicked Parms{};

	Parms.LoadoutItemWidget = LoadoutItemWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_LoadoutClass.W_LoadoutClass_C.OnLoadoutLoaded
// (BlueprintCallable, BlueprintEvent)

void UW_LoadoutClass_C::OnLoadoutLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "OnLoadoutLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.OnMouseMove
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_LoadoutClass_C::OnMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "OnMouseMove");

	Params::W_LoadoutClass_C_OnMouseMove Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_LoadoutClass.W_LoadoutClass_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_LoadoutClass_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "PreConstruct");

	Params::W_LoadoutClass_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_LoadoutClass.W_LoadoutClass_C.PreviousColumn
// (Public, BlueprintCallable, BlueprintEvent)

void UW_LoadoutClass_C::PreviousColumn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "PreviousColumn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.PreviousRow
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_LoadoutClass_C::PreviousRow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "PreviousRow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.RemoveAllChildren
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_LoadoutClass_C::RemoveAllChildren()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "RemoveAllChildren");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.SelectActiveLoadout
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_LoadoutClass_C::SelectActiveLoadout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "SelectActiveLoadout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.SelectLoadoutItem
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_LoadoutClass_C::SelectLoadoutItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "SelectLoadoutItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.SelectUIElement
// (Public, BlueprintCallable, BlueprintEvent)

void UW_LoadoutClass_C::SelectUIElement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "SelectUIElement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.ShowSelectedItemInfo
// (Public, BlueprintCallable, BlueprintEvent)

void UW_LoadoutClass_C::ShowSelectedItemInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "ShowSelectedItemInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.SimulateClick
// (Public, BlueprintCallable, BlueprintEvent)

void UW_LoadoutClass_C::SimulateClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "SimulateClick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.SimulateHover
// (Public, BlueprintCallable, BlueprintEvent)

void UW_LoadoutClass_C::SimulateHover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "SimulateHover");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.SimulateUnhover
// (Public, BlueprintCallable, BlueprintEvent)

void UW_LoadoutClass_C::SimulateUnhover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "SimulateUnhover");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.UnhoverLoadoutItem
// (Private, BlueprintCallable, BlueprintEvent)

void UW_LoadoutClass_C::UnhoverLoadoutItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "UnhoverLoadoutItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.UnhoverUIElement
// (Public, BlueprintCallable, BlueprintEvent)

void UW_LoadoutClass_C::UnhoverUIElement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "UnhoverUIElement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.UnselectLoadoutItem
// (Public, BlueprintCallable, BlueprintEvent)

void UW_LoadoutClass_C::UnselectLoadoutItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "UnselectLoadoutItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.UnselectUIElement
// (Public, BlueprintCallable, BlueprintEvent)

void UW_LoadoutClass_C::UnselectUIElement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "UnselectUIElement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_LoadoutClass.W_LoadoutClass_C.UpdateItemNameText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      InText                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)

void UW_LoadoutClass_C::UpdateItemNameText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "UpdateItemNameText");

	Params::W_LoadoutClass_C_UpdateItemNameText Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_LoadoutClass.W_LoadoutClass_C.CanExit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool*                                   Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_LoadoutClass_C::CanExit(bool* Return_Value) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "CanExit");

	Params::W_LoadoutClass_C_CanExit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function W_LoadoutClass.W_LoadoutClass_C.GetAllGrenadeClasses
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<class UClass*>*                  Return_Value                                           (Parm, OutParm)

void UW_LoadoutClass_C::GetAllGrenadeClasses(TArray<class UClass*>* Return_Value) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "GetAllGrenadeClasses");

	Params::W_LoadoutClass_C_GetAllGrenadeClasses Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = std::move(Parms.Return_Value);
}


// Function W_LoadoutClass.W_LoadoutClass_C.GetAllTacticalDeviceClassesExpectGrenades
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<class UClass*>*                  Return_Value                                           (Parm, OutParm)

void UW_LoadoutClass_C::GetAllTacticalDeviceClassesExpectGrenades(TArray<class UClass*>* Return_Value) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "GetAllTacticalDeviceClassesExpectGrenades");

	Params::W_LoadoutClass_C_GetAllTacticalDeviceClassesExpectGrenades Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = std::move(Parms.Return_Value);
}


// Function W_LoadoutClass.W_LoadoutClass_C.GetAllUncollapsedLoadoutItemWidgets
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<class UW_LoadoutItem_C*>*        Return_Value                                           (Parm, OutParm, ContainsInstancedReference)

void UW_LoadoutClass_C::GetAllUncollapsedLoadoutItemWidgets(TArray<class UW_LoadoutItem_C*>* Return_Value) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "GetAllUncollapsedLoadoutItemWidgets");

	Params::W_LoadoutClass_C_GetAllUncollapsedLoadoutItemWidgets Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = std::move(Parms.Return_Value);
}


// Function W_LoadoutClass.W_LoadoutClass_C.GetCurrentMenuDirectory
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText*                            Return_Value                                           (Parm, OutParm)

void UW_LoadoutClass_C::GetCurrentMenuDirectory(class FText* Return_Value) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_LoadoutClass_C", "GetCurrentMenuDirectory");

	Params::W_LoadoutClass_C_GetCurrentMenuDirectory Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = std::move(Parms.Return_Value);
}

}

