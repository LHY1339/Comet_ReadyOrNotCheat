#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_WorldMap_Gamepad

#include "Basic.hpp"

#include "W_WorldMap_Gamepad_classes.hpp"
#include "W_WorldMap_Gamepad_parameters.hpp"


namespace SDK
{

// Function W_WorldMap_Gamepad.W_WorldMap_Gamepad_C.BndEvt__W_WorldMap_AcceptMissionPanel_K2Node_ComponentBoundEvent_2_HandleBackPress__DelegateSignature
// (BlueprintEvent)

void UW_WorldMap_Gamepad_C::BndEvt__W_WorldMap_AcceptMissionPanel_K2Node_ComponentBoundEvent_2_HandleBackPress__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_Gamepad_C", "BndEvt__W_WorldMap_AcceptMissionPanel_K2Node_ComponentBoundEvent_2_HandleBackPress__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_WorldMap_Gamepad.W_WorldMap_Gamepad_C.BndEvt__W_WorldMap_BoxPanel_K2Node_ComponentBoundEvent_4_HandleBackPress__DelegateSignature
// (BlueprintEvent)

void UW_WorldMap_Gamepad_C::BndEvt__W_WorldMap_BoxPanel_K2Node_ComponentBoundEvent_4_HandleBackPress__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_Gamepad_C", "BndEvt__W_WorldMap_BoxPanel_K2Node_ComponentBoundEvent_4_HandleBackPress__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_WorldMap_Gamepad.W_WorldMap_Gamepad_C.BndEvt__W_WorldMap_btn_AcceptMission_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UW_Button_C*                      Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_WorldMap_Gamepad_C::BndEvt__W_WorldMap_btn_AcceptMission_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature(class UW_Button_C* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_Gamepad_C", "BndEvt__W_WorldMap_btn_AcceptMission_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");

	Params::W_WorldMap_Gamepad_C_BndEvt__W_WorldMap_btn_AcceptMission_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_WorldMap_Gamepad.W_WorldMap_Gamepad_C.BndEvt__W_WorldMap_btn_Close_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UW_Button_C*                      Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_WorldMap_Gamepad_C::BndEvt__W_WorldMap_btn_Close_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature(class UW_Button_C* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_Gamepad_C", "BndEvt__W_WorldMap_btn_Close_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");

	Params::W_WorldMap_Gamepad_C_BndEvt__W_WorldMap_btn_Close_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_WorldMap_Gamepad.W_WorldMap_Gamepad_C.BndEvt__W_WorldMap_Gamepad_ScrollBox_MissionSelectBoxes_K2Node_ComponentBoundEvent_5_OnUserScrolledEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// float                                   CurrentOffset                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_WorldMap_Gamepad_C::BndEvt__W_WorldMap_Gamepad_ScrollBox_MissionSelectBoxes_K2Node_ComponentBoundEvent_5_OnUserScrolledEvent__DelegateSignature(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_Gamepad_C", "BndEvt__W_WorldMap_Gamepad_ScrollBox_MissionSelectBoxes_K2Node_ComponentBoundEvent_5_OnUserScrolledEvent__DelegateSignature");

	Params::W_WorldMap_Gamepad_C_BndEvt__W_WorldMap_Gamepad_ScrollBox_MissionSelectBoxes_K2Node_ComponentBoundEvent_5_OnUserScrolledEvent__DelegateSignature Parms{};

	Parms.CurrentOffset = CurrentOffset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_WorldMap_Gamepad.W_WorldMap_Gamepad_C.BndEvt__W_WorldMap_MissionTypePanel_K2Node_ComponentBoundEvent_3_HandleBackPress__DelegateSignature
// (BlueprintEvent)

void UW_WorldMap_Gamepad_C::BndEvt__W_WorldMap_MissionTypePanel_K2Node_ComponentBoundEvent_3_HandleBackPress__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_Gamepad_C", "BndEvt__W_WorldMap_MissionTypePanel_K2Node_ComponentBoundEvent_3_HandleBackPress__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_WorldMap_Gamepad.W_WorldMap_Gamepad_C.BP_OnHandleBackAction
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UW_WorldMap_Gamepad_C::BP_OnHandleBackAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_Gamepad_C", "BP_OnHandleBackAction");

	Params::W_WorldMap_Gamepad_C_BP_OnHandleBackAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_WorldMap_Gamepad.W_WorldMap_Gamepad_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_WorldMap_Gamepad_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_Gamepad_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_WorldMap_Gamepad.W_WorldMap_Gamepad_C.ExecuteUbergraph_W_WorldMap_Gamepad
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_WorldMap_Gamepad_C::ExecuteUbergraph_W_WorldMap_Gamepad(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_Gamepad_C", "ExecuteUbergraph_W_WorldMap_Gamepad");

	Params::W_WorldMap_Gamepad_C_ExecuteUbergraph_W_WorldMap_Gamepad Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_WorldMap_Gamepad.W_WorldMap_Gamepad_C.GoBack
// (Public, BlueprintCallable, BlueprintEvent)

void UW_WorldMap_Gamepad_C::GoBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_Gamepad_C", "GoBack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_WorldMap_Gamepad.W_WorldMap_Gamepad_C.On_MapBlurClickable_MouseButtonDown_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_WorldMap_Gamepad_C::On_MapBlurClickable_MouseButtonDown_0(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_Gamepad_C", "On_MapBlurClickable_MouseButtonDown_0");

	Params::W_WorldMap_Gamepad_C_On_MapBlurClickable_MouseButtonDown_0 Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_WorldMap_Gamepad.W_WorldMap_Gamepad_C.OnDragDetected
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             PointerEvent                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UDragDropOperation**              Operation                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UW_WorldMap_Gamepad_C::OnDragDetected(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation** Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_Gamepad_C", "OnDragDetected");

	Params::W_WorldMap_Gamepad_C_OnDragDetected Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.PointerEvent = std::move(PointerEvent);

	UObject::ProcessEvent(Func, &Parms);

	if (Operation != nullptr)
		*Operation = Parms.Operation;
}


// Function W_WorldMap_Gamepad.W_WorldMap_Gamepad_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FKeyEvent&                 InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_WorldMap_Gamepad_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_Gamepad_C", "OnKeyDown");

	Params::W_WorldMap_Gamepad_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_WorldMap_Gamepad.W_WorldMap_Gamepad_C.OnMouseMove
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_WorldMap_Gamepad_C::OnMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_Gamepad_C", "OnMouseMove");

	Params::W_WorldMap_Gamepad_C_OnMouseMove Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_WorldMap_Gamepad.W_WorldMap_Gamepad_C.OnSetMissionButtonClicked_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_WorldMap_MissionSelect_C*      BtnClicked                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_WorldMap_Gamepad_C::OnSetMissionButtonClicked_Event_0(class UW_WorldMap_MissionSelect_C* BtnClicked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_Gamepad_C", "OnSetMissionButtonClicked_Event_0");

	Params::W_WorldMap_Gamepad_C_OnSetMissionButtonClicked_Event_0 Parms{};

	Parms.BtnClicked = BtnClicked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_WorldMap_Gamepad.W_WorldMap_Gamepad_C.PinClicked
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             MissionName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_WorldMap_Gamepad_C::PinClicked(class FName MissionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_Gamepad_C", "PinClicked");

	Params::W_WorldMap_Gamepad_C_PinClicked Parms{};

	Parms.MissionName = MissionName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_WorldMap_Gamepad.W_WorldMap_Gamepad_C.PinHovered
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             MissionName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_WorldMap_Gamepad_C::PinHovered(class FName MissionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_Gamepad_C", "PinHovered");

	Params::W_WorldMap_Gamepad_C_PinHovered Parms{};

	Parms.MissionName = MissionName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_WorldMap_Gamepad.W_WorldMap_Gamepad_C.PinUnhovered
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             MissionName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_WorldMap_Gamepad_C::PinUnhovered(class FName MissionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_Gamepad_C", "PinUnhovered");

	Params::W_WorldMap_Gamepad_C_PinUnhovered Parms{};

	Parms.MissionName = MissionName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_WorldMap_Gamepad.W_WorldMap_Gamepad_C.SetSelectedMission
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SelectedMission                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_WorldMap_Gamepad_C::SetSelectedMission(class FName SelectedMission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_Gamepad_C", "SetSelectedMission");

	Params::W_WorldMap_Gamepad_C_SetSelectedMission Parms{};

	Parms.SelectedMission = SelectedMission;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_WorldMap_Gamepad.W_WorldMap_Gamepad_C.SetSelectedMode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SelectedMode_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_WorldMap_Gamepad_C::SetSelectedMode(class FName SelectedMode_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_Gamepad_C", "SetSelectedMode");

	Params::W_WorldMap_Gamepad_C_SetSelectedMode Parms{};

	Parms.SelectedMode_0 = SelectedMode_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_WorldMap_Gamepad.W_WorldMap_Gamepad_C.ShowToolTip
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FLevelDataLookupTable&     MissionDetails                                         (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_WorldMap_Gamepad_C::ShowToolTip(const struct FLevelDataLookupTable& MissionDetails)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_Gamepad_C", "ShowToolTip");

	Params::W_WorldMap_Gamepad_C_ShowToolTip Parms{};

	Parms.MissionDetails = std::move(MissionDetails);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_WorldMap_Gamepad.W_WorldMap_Gamepad_C.Update Scrollbar
// (Public, BlueprintCallable, BlueprintEvent)

void UW_WorldMap_Gamepad_C::Update_Scrollbar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_Gamepad_C", "Update Scrollbar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_WorldMap_Gamepad.W_WorldMap_Gamepad_C.UpdateAfterMissionSelected
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_WorldMap_Gamepad_C::UpdateAfterMissionSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_Gamepad_C", "UpdateAfterMissionSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_WorldMap_Gamepad.W_WorldMap_Gamepad_C.BP_GetDesiredFocusTarget
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UW_WorldMap_Gamepad_C::BP_GetDesiredFocusTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_Gamepad_C", "BP_GetDesiredFocusTarget");

	Params::W_WorldMap_Gamepad_C_BP_GetDesiredFocusTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

