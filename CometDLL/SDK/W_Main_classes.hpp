#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Main

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Main.W_Main_C
// 0x0230 (0x04F0 - 0x02C0)
class UW_Main_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                Button_Background;                                 // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ConsoleBackground;                                 // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          ConsoleText;                                       // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                EnableDebugCamera;                                 // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Execute;                                           // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                NoUpperButton;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Pause;                                             // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PauseButtonText;                                   // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                PointLightButton;                                  // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 QuickActionsBackground;                            // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UExpandableArea*                        QuickActionsE;                                     // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                ResetLeanButton;                                   // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UExpandableArea*                        Settings;                                          // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SettingTextBackground;                             // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Settings_C*                          W_Settings;                                        // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          isHUDVisible;                                      // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          inDebug;                                           // 0x0341(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342[0x6];                                      // 0x0342(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AQuantumActor_C*                        QuantumActorReference;                             // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class APawn*                                  PawnRef;                                           // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AP_DebugPawn_C*                         DebugPawnRef;                                      // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MainPawnLoc;                                       // 0x0360(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               MainPawnRot;                                       // 0x0378(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FSlateBrush                            Slate_Brush;                                       // 0x0390(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          useNormalPause;                                    // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isMouseOverFocusEnabled;                           // 0x0461(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_462[0x6];                                      // 0x0462(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 testString;                                        // 0x0468(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TMap<struct FKey, class UTexture*>            KeyToTextureMap;                                   // 0x0478(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         Alphabet;                                          // 0x04C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 Name_0;                                            // 0x04D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class UEditableText*                          Console_Text;                                      // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void ActionMappingContainsKey(const struct FKeyEvent& Input, const class FName InActionName, bool* hasKey);
	void BndEvt__QuantumWidget_enabledebugcamea_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__QuantumWidget_Execute_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__QuantumWidget_pause_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__QuantumWidget_PointLightButton_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__QuantumWidget_ResetLeanButton_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_Main_Button_Background_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_Main_NoUpperButton_K2Node_ComponentBoundEvent_6_OnButtonClickedEvent__DelegateSignature();
	void Construct();
	void Create_Camera();
	void Destruct();
	void Enter_Camera();
	void ExecuteUbergraph_W_Main(int32 EntryPoint);
	void Exit_Camera();
	ESlateVisibility Get_Button_Background_Visibility();
	struct FSlateBrush Get_QuickActionsBackground_Brush_0();
	struct FSlateBrush Get_SettingTextBackground_Brush_0();
	class FText Get_xPos_Text_0();
	class FText Get_yPOs_Text_0();
	class FText Get_zPos_Text_0();
	void Hide1P();
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OpenCloseMenu();
	void QuickSwapCamera();
	void SetPlayerLock();
	void SetVisualState(class UWidget* Widget);
	void Show1P();
	void TakeScreenshot();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void TogglePause();

	void Get_Images_from_Mappings(const struct FInputChord& Key, TArray<class UTexture*>* Images) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Main_C">();
	}
	static class UW_Main_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Main_C>();
	}
};
static_assert(alignof(UW_Main_C) == 0x000010, "Wrong alignment on UW_Main_C");
static_assert(sizeof(UW_Main_C) == 0x0004F0, "Wrong size on UW_Main_C");
static_assert(offsetof(UW_Main_C, UberGraphFrame) == 0x0002C0, "Member 'UW_Main_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Main_C, Button_Background) == 0x0002C8, "Member 'UW_Main_C::Button_Background' has a wrong offset!");
static_assert(offsetof(UW_Main_C, ConsoleBackground) == 0x0002D0, "Member 'UW_Main_C::ConsoleBackground' has a wrong offset!");
static_assert(offsetof(UW_Main_C, ConsoleText) == 0x0002D8, "Member 'UW_Main_C::ConsoleText' has a wrong offset!");
static_assert(offsetof(UW_Main_C, EnableDebugCamera) == 0x0002E0, "Member 'UW_Main_C::EnableDebugCamera' has a wrong offset!");
static_assert(offsetof(UW_Main_C, Execute) == 0x0002E8, "Member 'UW_Main_C::Execute' has a wrong offset!");
static_assert(offsetof(UW_Main_C, NoUpperButton) == 0x0002F0, "Member 'UW_Main_C::NoUpperButton' has a wrong offset!");
static_assert(offsetof(UW_Main_C, Pause) == 0x0002F8, "Member 'UW_Main_C::Pause' has a wrong offset!");
static_assert(offsetof(UW_Main_C, PauseButtonText) == 0x000300, "Member 'UW_Main_C::PauseButtonText' has a wrong offset!");
static_assert(offsetof(UW_Main_C, PointLightButton) == 0x000308, "Member 'UW_Main_C::PointLightButton' has a wrong offset!");
static_assert(offsetof(UW_Main_C, QuickActionsBackground) == 0x000310, "Member 'UW_Main_C::QuickActionsBackground' has a wrong offset!");
static_assert(offsetof(UW_Main_C, QuickActionsE) == 0x000318, "Member 'UW_Main_C::QuickActionsE' has a wrong offset!");
static_assert(offsetof(UW_Main_C, ResetLeanButton) == 0x000320, "Member 'UW_Main_C::ResetLeanButton' has a wrong offset!");
static_assert(offsetof(UW_Main_C, Settings) == 0x000328, "Member 'UW_Main_C::Settings' has a wrong offset!");
static_assert(offsetof(UW_Main_C, SettingTextBackground) == 0x000330, "Member 'UW_Main_C::SettingTextBackground' has a wrong offset!");
static_assert(offsetof(UW_Main_C, W_Settings) == 0x000338, "Member 'UW_Main_C::W_Settings' has a wrong offset!");
static_assert(offsetof(UW_Main_C, isHUDVisible) == 0x000340, "Member 'UW_Main_C::isHUDVisible' has a wrong offset!");
static_assert(offsetof(UW_Main_C, inDebug) == 0x000341, "Member 'UW_Main_C::inDebug' has a wrong offset!");
static_assert(offsetof(UW_Main_C, QuantumActorReference) == 0x000348, "Member 'UW_Main_C::QuantumActorReference' has a wrong offset!");
static_assert(offsetof(UW_Main_C, PawnRef) == 0x000350, "Member 'UW_Main_C::PawnRef' has a wrong offset!");
static_assert(offsetof(UW_Main_C, DebugPawnRef) == 0x000358, "Member 'UW_Main_C::DebugPawnRef' has a wrong offset!");
static_assert(offsetof(UW_Main_C, MainPawnLoc) == 0x000360, "Member 'UW_Main_C::MainPawnLoc' has a wrong offset!");
static_assert(offsetof(UW_Main_C, MainPawnRot) == 0x000378, "Member 'UW_Main_C::MainPawnRot' has a wrong offset!");
static_assert(offsetof(UW_Main_C, Slate_Brush) == 0x000390, "Member 'UW_Main_C::Slate_Brush' has a wrong offset!");
static_assert(offsetof(UW_Main_C, useNormalPause) == 0x000460, "Member 'UW_Main_C::useNormalPause' has a wrong offset!");
static_assert(offsetof(UW_Main_C, isMouseOverFocusEnabled) == 0x000461, "Member 'UW_Main_C::isMouseOverFocusEnabled' has a wrong offset!");
static_assert(offsetof(UW_Main_C, testString) == 0x000468, "Member 'UW_Main_C::testString' has a wrong offset!");
static_assert(offsetof(UW_Main_C, KeyToTextureMap) == 0x000478, "Member 'UW_Main_C::KeyToTextureMap' has a wrong offset!");
static_assert(offsetof(UW_Main_C, Alphabet) == 0x0004C8, "Member 'UW_Main_C::Alphabet' has a wrong offset!");
static_assert(offsetof(UW_Main_C, Name_0) == 0x0004D8, "Member 'UW_Main_C::Name_0' has a wrong offset!");
static_assert(offsetof(UW_Main_C, Console_Text) == 0x0004E8, "Member 'UW_Main_C::Console_Text' has a wrong offset!");

}

