#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_SBL_Mod

#include "Basic.hpp"

#include "BPI_SBL_Mod_classes.hpp"
#include "BPI_SBL_Mod_parameters.hpp"


namespace SDK
{

// Function BPI_SBL_Mod.BPI_SBL_Mod_C.ModDataActiveChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_SBL_Mod_C::ModDataActiveChanged(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SBL_Mod_C", "ModDataActiveChanged");

	Params::BPI_SBL_Mod_C_ModDataActiveChanged Parms{};

	Parms.IsActive = IsActive;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_SBL_Mod.BPI_SBL_Mod_C.ModInit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_SBL_Code_C> SimpleModLoader                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_SBL_Mod_C::ModInit(TScriptInterface<class IBPI_SBL_Code_C> SimpleModLoader)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SBL_Mod_C", "ModInit");

	Params::BPI_SBL_Mod_C_ModInit Parms{};

	Parms.SimpleModLoader = SimpleModLoader;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

