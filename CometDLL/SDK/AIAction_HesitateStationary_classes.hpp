#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIAction_HesitateStationary

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AIAction_HesitateStationary.AIAction_HesitateStationary_C
// 0x0048 (0x00A0 - 0x0058)
class UAIAction_HesitateStationary_C final : public UAIAction
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0058(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FVector                                HesitateMoveLocation;                              // 0x0060(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastSeenSwatLocation;                              // 0x0078(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TimerHandle;                                       // 0x0090(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseOtherVoiceLine;                                // 0x0098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BeginAction_Blueprint();
	void EndAction_Blueprint();
	void ExecuteUbergraph_AIAction_HesitateStationary(int32 EntryPoint);
	void GetHesitationVoiceOver(bool bUseAlternate, class FString* NewParam);
	void InitAction_Blueprint(class ACyberneticController* Controller);
	void PlayHesitationVO();
	void Tick_Blueprint(float DeltaTime);

	class FName GetMoveStyleOverride() const;
	bool ShouldPerformAction() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AIAction_HesitateStationary_C">();
	}
	static class UAIAction_HesitateStationary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAIAction_HesitateStationary_C>();
	}
};
static_assert(alignof(UAIAction_HesitateStationary_C) == 0x000008, "Wrong alignment on UAIAction_HesitateStationary_C");
static_assert(sizeof(UAIAction_HesitateStationary_C) == 0x0000A0, "Wrong size on UAIAction_HesitateStationary_C");
static_assert(offsetof(UAIAction_HesitateStationary_C, UberGraphFrame) == 0x000058, "Member 'UAIAction_HesitateStationary_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAIAction_HesitateStationary_C, HesitateMoveLocation) == 0x000060, "Member 'UAIAction_HesitateStationary_C::HesitateMoveLocation' has a wrong offset!");
static_assert(offsetof(UAIAction_HesitateStationary_C, LastSeenSwatLocation) == 0x000078, "Member 'UAIAction_HesitateStationary_C::LastSeenSwatLocation' has a wrong offset!");
static_assert(offsetof(UAIAction_HesitateStationary_C, TimerHandle) == 0x000090, "Member 'UAIAction_HesitateStationary_C::TimerHandle' has a wrong offset!");
static_assert(offsetof(UAIAction_HesitateStationary_C, bUseOtherVoiceLine) == 0x000098, "Member 'UAIAction_HesitateStationary_C::bUseOtherVoiceLine' has a wrong offset!");

}

