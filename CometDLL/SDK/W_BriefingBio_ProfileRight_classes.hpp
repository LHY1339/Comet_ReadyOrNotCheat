#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_BriefingBio_ProfileRight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_BriefingBio_ProfileRight.W_BriefingBio_ProfileRight_C
// 0x0060 (0x0320 - 0x02C0)
class UW_BriefingBio_ProfileRight_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             BioDescription;                                    // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             BioText;                                           // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ProfilePicture;                                    // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ProfilePicture_1;                                  // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Bio;                                               // 0x02E8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   Description;                                       // 0x0300(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UTexture2D*                             ProfileImage;                                      // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_BriefingBio_ProfileRight(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_BriefingBio_ProfileRight_C">();
	}
	static class UW_BriefingBio_ProfileRight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_BriefingBio_ProfileRight_C>();
	}
};
static_assert(alignof(UW_BriefingBio_ProfileRight_C) == 0x000008, "Wrong alignment on UW_BriefingBio_ProfileRight_C");
static_assert(sizeof(UW_BriefingBio_ProfileRight_C) == 0x000320, "Wrong size on UW_BriefingBio_ProfileRight_C");
static_assert(offsetof(UW_BriefingBio_ProfileRight_C, UberGraphFrame) == 0x0002C0, "Member 'UW_BriefingBio_ProfileRight_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_BriefingBio_ProfileRight_C, BioDescription) == 0x0002C8, "Member 'UW_BriefingBio_ProfileRight_C::BioDescription' has a wrong offset!");
static_assert(offsetof(UW_BriefingBio_ProfileRight_C, BioText) == 0x0002D0, "Member 'UW_BriefingBio_ProfileRight_C::BioText' has a wrong offset!");
static_assert(offsetof(UW_BriefingBio_ProfileRight_C, ProfilePicture) == 0x0002D8, "Member 'UW_BriefingBio_ProfileRight_C::ProfilePicture' has a wrong offset!");
static_assert(offsetof(UW_BriefingBio_ProfileRight_C, ProfilePicture_1) == 0x0002E0, "Member 'UW_BriefingBio_ProfileRight_C::ProfilePicture_1' has a wrong offset!");
static_assert(offsetof(UW_BriefingBio_ProfileRight_C, Bio) == 0x0002E8, "Member 'UW_BriefingBio_ProfileRight_C::Bio' has a wrong offset!");
static_assert(offsetof(UW_BriefingBio_ProfileRight_C, Description) == 0x000300, "Member 'UW_BriefingBio_ProfileRight_C::Description' has a wrong offset!");
static_assert(offsetof(UW_BriefingBio_ProfileRight_C, ProfileImage) == 0x000318, "Member 'UW_BriefingBio_ProfileRight_C::ProfileImage' has a wrong offset!");

}

