#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Loadout_MunitionCountSlot

#include "Basic.hpp"

#include "W_Loadout_MunitionCountSlot_classes.hpp"
#include "W_Loadout_MunitionCountSlot_parameters.hpp"


namespace SDK
{

// Function W_Loadout_MunitionCountSlot.W_Loadout_MunitionCountSlot_C.BackPage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Handled                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Loadout_MunitionCountSlot_C::BackPage(bool* Handled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loadout_MunitionCountSlot_C", "BackPage");

	Params::W_Loadout_MunitionCountSlot_C_BackPage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Handled != nullptr)
		*Handled = Parms.Handled;
}


// Function W_Loadout_MunitionCountSlot.W_Loadout_MunitionCountSlot_C.BndEvt__W_Loadout_ArmorSlot_btn_decrease_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UW_Button_C*                      Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Loadout_MunitionCountSlot_C::BndEvt__W_Loadout_ArmorSlot_btn_decrease_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature(class UW_Button_C* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loadout_MunitionCountSlot_C", "BndEvt__W_Loadout_ArmorSlot_btn_decrease_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");

	Params::W_Loadout_MunitionCountSlot_C_BndEvt__W_Loadout_ArmorSlot_btn_decrease_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Loadout_MunitionCountSlot.W_Loadout_MunitionCountSlot_C.BndEvt__W_Loadout_ArmorSlot_btn_increase_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UW_Button_C*                      Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Loadout_MunitionCountSlot_C::BndEvt__W_Loadout_ArmorSlot_btn_increase_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature(class UW_Button_C* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loadout_MunitionCountSlot_C", "BndEvt__W_Loadout_ArmorSlot_btn_increase_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");

	Params::W_Loadout_MunitionCountSlot_C_BndEvt__W_Loadout_ArmorSlot_btn_increase_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Loadout_MunitionCountSlot.W_Loadout_MunitionCountSlot_C.BndEvt__W_Loadout_ArmorSlot_SpinBox_SlotCount_K2Node_ComponentBoundEvent_3_OnSpinBoxValueCommittedEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// float                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Loadout_MunitionCountSlot_C::BndEvt__W_Loadout_ArmorSlot_SpinBox_SlotCount_K2Node_ComponentBoundEvent_3_OnSpinBoxValueCommittedEvent__DelegateSignature(float InValue, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loadout_MunitionCountSlot_C", "BndEvt__W_Loadout_ArmorSlot_SpinBox_SlotCount_K2Node_ComponentBoundEvent_3_OnSpinBoxValueCommittedEvent__DelegateSignature");

	Params::W_Loadout_MunitionCountSlot_C_BndEvt__W_Loadout_ArmorSlot_SpinBox_SlotCount_K2Node_ComponentBoundEvent_3_OnSpinBoxValueCommittedEvent__DelegateSignature Parms{};

	Parms.InValue = InValue;
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Loadout_MunitionCountSlot.W_Loadout_MunitionCountSlot_C.ChangePage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             PageName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Loadout_MunitionCountSlot_C::ChangePage(class FName PageName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loadout_MunitionCountSlot_C", "ChangePage");

	Params::W_Loadout_MunitionCountSlot_C_ChangePage Parms{};

	Parms.PageName = PageName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Loadout_MunitionCountSlot.W_Loadout_MunitionCountSlot_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_Loadout_MunitionCountSlot_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loadout_MunitionCountSlot_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Loadout_MunitionCountSlot.W_Loadout_MunitionCountSlot_C.ExecuteUbergraph_W_Loadout_MunitionCountSlot
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Loadout_MunitionCountSlot_C::ExecuteUbergraph_W_Loadout_MunitionCountSlot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loadout_MunitionCountSlot_C", "ExecuteUbergraph_W_Loadout_MunitionCountSlot");

	Params::W_Loadout_MunitionCountSlot_C_ExecuteUbergraph_W_Loadout_MunitionCountSlot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Loadout_MunitionCountSlot.W_Loadout_MunitionCountSlot_C.HeaderSubpageNavigation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             OptionNameID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Loadout_MunitionCountSlot_C::HeaderSubpageNavigation(class FName OptionNameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loadout_MunitionCountSlot_C", "HeaderSubpageNavigation");

	Params::W_Loadout_MunitionCountSlot_C_HeaderSubpageNavigation Parms{};

	Parms.OptionNameID = OptionNameID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Loadout_MunitionCountSlot.W_Loadout_MunitionCountSlot_C.Hide
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Collapse                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Loadout_MunitionCountSlot_C::Hide(double Delay, bool Collapse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loadout_MunitionCountSlot_C", "Hide");

	Params::W_Loadout_MunitionCountSlot_C_Hide Parms{};

	Parms.Delay = Delay;
	Parms.Collapse = Collapse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Loadout_MunitionCountSlot.W_Loadout_MunitionCountSlot_C.IncrementSlotCount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Increment                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Loadout_MunitionCountSlot_C::IncrementSlotCount(int32 Increment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loadout_MunitionCountSlot_C", "IncrementSlotCount");

	Params::W_Loadout_MunitionCountSlot_C_IncrementSlotCount Parms{};

	Parms.Increment = Increment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Loadout_MunitionCountSlot.W_Loadout_MunitionCountSlot_C.Initialize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrentSlotCount                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AvailableSlots_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MinSlots_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MaxSlots_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Loadout_MunitionCountSlot_C::Initialize(int32 CurrentSlotCount, int32 AvailableSlots_0, int32 MinSlots_0, int32 MaxSlots_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loadout_MunitionCountSlot_C", "Initialize");

	Params::W_Loadout_MunitionCountSlot_C_Initialize Parms{};

	Parms.CurrentSlotCount = CurrentSlotCount;
	Parms.AvailableSlots_0 = AvailableSlots_0;
	Parms.MinSlots_0 = MinSlots_0;
	Parms.MaxSlots_0 = MaxSlots_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Loadout_MunitionCountSlot.W_Loadout_MunitionCountSlot_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Loadout_MunitionCountSlot_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loadout_MunitionCountSlot_C", "PreConstruct");

	Params::W_Loadout_MunitionCountSlot_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Loadout_MunitionCountSlot.W_Loadout_MunitionCountSlot_C.Reveal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Loadout_MunitionCountSlot_C::Reveal(double Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loadout_MunitionCountSlot_C", "Reveal");

	Params::W_Loadout_MunitionCountSlot_C_Reveal Parms{};

	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Loadout_MunitionCountSlot.W_Loadout_MunitionCountSlot_C.SetAvailableSlots
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AvailableSlots_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Loadout_MunitionCountSlot_C::SetAvailableSlots(int32 AvailableSlots_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loadout_MunitionCountSlot_C", "SetAvailableSlots");

	Params::W_Loadout_MunitionCountSlot_C_SetAvailableSlots Parms{};

	Parms.AvailableSlots_0 = AvailableSlots_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Loadout_MunitionCountSlot.W_Loadout_MunitionCountSlot_C.SetInfo
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Loadout_MunitionCountSlot_C::SetInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loadout_MunitionCountSlot_C", "SetInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Loadout_MunitionCountSlot.W_Loadout_MunitionCountSlot_C.SetInputMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsGamepad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Loadout_MunitionCountSlot_C::SetInputMode(bool IsGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loadout_MunitionCountSlot_C", "SetInputMode");

	Params::W_Loadout_MunitionCountSlot_C_SetInputMode Parms{};

	Parms.IsGamepad = IsGamepad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Loadout_MunitionCountSlot.W_Loadout_MunitionCountSlot_C.SetLoadoutWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_Loadout_C*                     LoadoutWidget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Loadout_MunitionCountSlot_C::SetLoadoutWidget(class UW_Loadout_C* LoadoutWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loadout_MunitionCountSlot_C", "SetLoadoutWidget");

	Params::W_Loadout_MunitionCountSlot_C_SetLoadoutWidget Parms{};

	Parms.LoadoutWidget = LoadoutWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Loadout_MunitionCountSlot.W_Loadout_MunitionCountSlot_C.SetMaxSlots
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MaxSlotCount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Loadout_MunitionCountSlot_C::SetMaxSlots(int32 MaxSlotCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loadout_MunitionCountSlot_C", "SetMaxSlots");

	Params::W_Loadout_MunitionCountSlot_C_SetMaxSlots Parms{};

	Parms.MaxSlotCount = MaxSlotCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Loadout_MunitionCountSlot.W_Loadout_MunitionCountSlot_C.SetSlotCount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewCount                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Loadout_MunitionCountSlot_C::SetSlotCount(int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loadout_MunitionCountSlot_C", "SetSlotCount");

	Params::W_Loadout_MunitionCountSlot_C_SetSlotCount Parms{};

	Parms.NewCount = NewCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Loadout_MunitionCountSlot.W_Loadout_MunitionCountSlot_C.UpdateActiveLoadout
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FSavedLoadout&             ActiveLoadout                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_Loadout_MunitionCountSlot_C::UpdateActiveLoadout(const struct FSavedLoadout& ActiveLoadout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loadout_MunitionCountSlot_C", "UpdateActiveLoadout");

	Params::W_Loadout_MunitionCountSlot_C_UpdateActiveLoadout Parms{};

	Parms.ActiveLoadout = std::move(ActiveLoadout);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Loadout_MunitionCountSlot.W_Loadout_MunitionCountSlot_C.UpdateCurrentItemMap
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TMap<EItemCategory, class UClass*>&ItemCategory                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_Loadout_MunitionCountSlot_C::UpdateCurrentItemMap(const TMap<EItemCategory, class UClass*>& ItemCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loadout_MunitionCountSlot_C", "UpdateCurrentItemMap");

	Params::W_Loadout_MunitionCountSlot_C_UpdateCurrentItemMap Parms{};

	Parms.ItemCategory = std::move(ItemCategory);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Loadout_MunitionCountSlot.W_Loadout_MunitionCountSlot_C.UpdateCurrentSlot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_LoadoutSlot_C*                 CurrentSlot                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Loadout_MunitionCountSlot_C::UpdateCurrentSlot(class UW_LoadoutSlot_C* CurrentSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loadout_MunitionCountSlot_C", "UpdateCurrentSlot");

	Params::W_Loadout_MunitionCountSlot_C_UpdateCurrentSlot Parms{};

	Parms.CurrentSlot = CurrentSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Loadout_MunitionCountSlot.W_Loadout_MunitionCountSlot_C.GetFocusTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UWidget**                         Focus                                                  (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Loadout_MunitionCountSlot_C::GetFocusTarget(class UWidget** Focus) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loadout_MunitionCountSlot_C", "GetFocusTarget");

	Params::W_Loadout_MunitionCountSlot_C_GetFocusTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Focus != nullptr)
		*Focus = Parms.Focus;
}

}

