#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Loadout_ItemList

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "LoadoutCategory_structs.hpp"
#include "W_SubMenu_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Loadout_ItemList.W_Loadout_ItemList_C
// 0x0650 (0x0A98 - 0x0448)
class UW_Loadout_ItemList_C final : public UW_SubMenu_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_W_Loadout_ItemList_C;               // 0x0448(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       animReveal;                                        // 0x0450(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_SubNav;                                         // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_Fade;                                          // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_Fade_1;                                        // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ItemScrollBox;                                     // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_0;                                     // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_Header;                                        // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_Pagination;                                    // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Content;                                        // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<struct LoadoutCategory::FLoadoutCategory> Gear_Category_Classes;                          // 0x0498(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          IsQuartermaster;                                   // 0x04A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UW_Button_C*, EItemType>           SubnavGearButtons;                                 // 0x04B0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	EItemCategory                                 LoadoutCategory;                                   // 0x0500(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_501[0x7];                                      // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UClass* ItemData)> OnLoadoutItemClicked;                     // 0x0508(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	EItemCategory                                 Loadout_Slot;                                      // 0x0518(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_519[0x7];                                      // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UW_Button_C*, EWeaponAttachmentType> SubnavAttachmentButtons;                         // 0x0520(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UDataTable*                             ItemDataTable;                                     // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EItemType                                     SelectedItemType;                                  // 0x0578(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_579[0x7];                                      // 0x0579(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UClass* ItemData)> OnLoadoutItemDoubleClicked;               // 0x0580(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<struct LoadoutCategory::FLoadoutCategory> DemoGearClasses;                                // 0x0590(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Is_Design_Time;                                    // 0x05A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UW_LoadoutSlot_C*, EItemType>      Items;                                             // 0x05A8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UW_Button_C*                            CurrentActiveSubnav;                               // 0x05F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FSavedLoadout                          ActiveLoadout;                                     // 0x0600(0x02E8)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UW_LoadoutSlot_C*                       CurrentlyEquipped;                                 // 0x08E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Open;                                              // 0x08F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponAttachmentType                         SelectedAttachmentSlot;                            // 0x08F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F2[0x6];                                      // 0x08F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 AttachingWeaponData;                               // 0x08F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        FirstItemOffset;                                   // 0x0900(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                ListItemPadding;                                   // 0x0908(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TMulticastInlineDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> OnLoadoutItemHovered;     // 0x0918(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> OnLoadoutItemUnhovered;   // 0x0928(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UClass* AttachingWeapon, class UClass* AttachmentData)> OnAttachmentItemClicked; // 0x0938(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UW_LoadoutSlot_Attachment_C* TriggeringAttachment)> OnAttachmentItemHovered; // 0x0948(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMap<class UW_LoadoutSlot_Attachment_C*, EWeaponAttachmentType> Attachments;                     // 0x0958(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          IsPrimary;                                         // 0x09A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Quartermaster;                                     // 0x09A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9AA[0x2];                                      // 0x09AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                ContentMargins;                                    // 0x09AC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DemoAttachmentList;                                // 0x09BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BD[0x3];                                      // 0x09BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_LoadoutSlot_Attachment_C*            EquippedAttachment;                                // 0x09C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       EquippedItem;                                      // 0x09C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        ScrollToViewPadding;                               // 0x09D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScrollPageSize;                                    // 0x09D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScrollPageCount;                                   // 0x09DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentScrollTarget;                               // 0x09E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentScrollPage;                                 // 0x09E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentOffset;                                     // 0x09E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUserScrollInput;                                 // 0x09F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F1[0x7];                                      // 0x09F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        VisibleItems;                                      // 0x09F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UClass*>                         ExcludedItems;                                     // 0x0A08(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   ExcludedAmmoType;                                  // 0x0A18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UW_LoadoutSlot_Attachment_C* TriggeringAttachment)> OnAttachmentUnhovered; // 0x0A20(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class FName AmmoType, class UClass* Weapon)> OnAmmoItemClicked;    // 0x0A30(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class FName AmmoType)> OnAmmoItemHovered;                          // 0x0A40(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class FName AmmoType)> OnAmmoItemDoubleClicked;                    // 0x0A50(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsAmmunition;                                      // 0x0A60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsArmourMaterial;                                  // 0x0A61(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A62[0x6];                                      // 0x0A62(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UArmourMaterial* ArmourMaterial)> OnArmourMaterialClicked;   // 0x0A68(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UArmourMaterial* ArmourMaterial)> OnArmourMaterialDoubleClicked; // 0x0A78(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UArmourMaterial* ArmourMaterial)> OnArmourMaterialHovered;   // 0x0A88(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void AmmoItemClicked(class UW_LoadoutSlot_C* TrigeringItem);
	void AmmoItemDoubleClicked(class UW_LoadoutSlot_C* TrigeringItem);
	void AmmoItemHovered(class UW_LoadoutSlot_C* TrigeringItem);
	void AmmoItemUnhovered(class UW_LoadoutSlot_C* TriggeringItem);
	void ArmourMaterialClicked(class UW_LoadoutSlot_C* TrigeringItem);
	void ArmourMaterialDoubleClicked(class UW_LoadoutSlot_C* TrigeringItem);
	void ArmourMaterialHovered(class UW_LoadoutSlot_C* TrigeringItem);
	void ArmourMaterialUnhovered(class UW_LoadoutSlot_C* TriggeringItem);
	void AttachmentItemClicked(class UW_LoadoutSlot_Attachment_C* TriggeringAttachment);
	void AttachmentItemHovered(class UW_LoadoutSlot_Attachment_C* TriggeringAttachment);
	void AttachmentItemUnhovered(class UW_LoadoutSlot_Attachment_C* TriggeringAttachment);
	void BackPage(bool* Handled);
	void BndEvt__W_Loadout_ItemList_ItemScrollBox_K2Node_ComponentBoundEvent_0_OnUserScrolledEvent__DelegateSignature(float CurrentOffset_0);
	void ChangePage(class FName PageName);
	void Construct();
	void CreateAmmoLoadoutWidgetItem(class FName AmmoType, class UClass* Weapon, class UScrollBoxSlot** AsScroll_Box_Slot, class UW_LoadoutSlot_C** LoadoutSlotWidget);
	void CreateArmourMaterialLoadoutWidgetItem(class UArmourMaterial* ArmourMaterial, class UScrollBoxSlot** AsScroll_Box_Slot, class UW_LoadoutSlot_C** LoadoutSlotWidget);
	void CreateLoadoutWidgetItem(class UClass* ItemData, class UScrollBoxSlot** AsScroll_Box_Slot, class UW_LoadoutSlot_C** LoadoutSlotWidget);
	void ExecuteUbergraph_W_Loadout_ItemList(int32 EntryPoint);
	void GetItemArrayBySlot();
	void HeaderSubpageNavigation(class FName OptionNameID);
	void Hide(double Delay, bool Collapse);
	void HideList();
	void InitializeAmmoList(class FName ExcludedAmmoType_0, class UClass* Weapon);
	void InitializeArmourMaterialList();
	void InitializeAttachmentList(class UClass* ItemData, EWeaponAttachmentType AttachmentType);
	void InitializeDeployableList(const EItemCategory LoadoutSlot, const TArray<struct LoadoutCategory::FLoadoutCategory>& GearCategoryClasses, const TArray<class UClass*>& ExcludedItems_0);
	void InitializeLoadoutList(const EItemCategory LoadoutSlot, const TArray<struct LoadoutCategory::FLoadoutCategory>& GearCategoryClasses);
	void LoadoutItemClicked(class UW_LoadoutSlot_C* TrigeringItem);
	void LoadoutItemDoubleClicked(class UW_LoadoutSlot_C* TrigeringItem);
	void LoadoutItemHovered(class UW_LoadoutSlot_C* TriggeringSlot);
	void LoadoutItemUnhovered(class UW_LoadoutSlot_C* TriggeringSlot);
	void OpenList();
	void PopulateAmmo(TArray<class FName>& AmmoTypes, class UClass* Weapon);
	void PopulateArmourMaterials();
	void PopulateAttachments(TArray<class UClass*>& Attachments_0);
	void PopulateItems(TArray<struct LoadoutCategory::FLoadoutCategory>& GearCategoryClasses);
	void PopulateSubnav();
	void PreConstruct(bool IsDesignTime);
	void RefreshEquipped(const struct FSavedLoadout& ActiveLoadout_0, bool RefreshAttachments);
	void RefreshEquippedAmmo();
	void RefreshEquippedArmourMaterial();
	void RefreshEquippedAttachments();
	void RefreshEquippedItems();
	void Reveal(double Delay);
	void ScrollOpenedToEquipped();
	void ScrollToEquipped();
	void ScrollToNextItem();
	void ScrollToNextPage();
	void ScrollToPage(int32 Page);
	void ScrollToPreviousItem();
	void ScrollToPreviousPage();
	void ScrollToTargetIndex(int32 ItemIndex);
	void SetInputMode(bool IsGamepad);
	void SetListItemPadding(bool IsFirstItem, class UScrollBoxSlot* ScrollBoxSlotItem);
	void SetLoadoutWidget(class UW_Loadout_C* LoadoutWidget);
	void SetupScrollPagination();
	void SortItems();
	void SubnavButtonClicked(class UW_Button_C* TriggeringButton);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateActiveLoadout(const struct FSavedLoadout& ActiveLoadout_0);
	void UpdateCurrentItemMap(const TMap<EItemCategory, class UClass*>& ItemCategory);
	void UpdateCurrentSlot(class UW_LoadoutSlot_C* CurrentSlot);
	void UpdateScrollPage();

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Loadout_ItemList_C">();
	}
	static class UW_Loadout_ItemList_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Loadout_ItemList_C>();
	}
};
static_assert(alignof(UW_Loadout_ItemList_C) == 0x000008, "Wrong alignment on UW_Loadout_ItemList_C");
static_assert(sizeof(UW_Loadout_ItemList_C) == 0x000A98, "Wrong size on UW_Loadout_ItemList_C");
static_assert(offsetof(UW_Loadout_ItemList_C, UberGraphFrame_W_Loadout_ItemList_C) == 0x000448, "Member 'UW_Loadout_ItemList_C::UberGraphFrame_W_Loadout_ItemList_C' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, animReveal) == 0x000450, "Member 'UW_Loadout_ItemList_C::animReveal' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, HB_SubNav) == 0x000458, "Member 'UW_Loadout_ItemList_C::HB_SubNav' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, img_Fade) == 0x000460, "Member 'UW_Loadout_ItemList_C::img_Fade' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, img_Fade_1) == 0x000468, "Member 'UW_Loadout_ItemList_C::img_Fade_1' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, ItemScrollBox) == 0x000470, "Member 'UW_Loadout_ItemList_C::ItemScrollBox' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, RetainerBox_0) == 0x000478, "Member 'UW_Loadout_ItemList_C::RetainerBox_0' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, txt_Header) == 0x000480, "Member 'UW_Loadout_ItemList_C::txt_Header' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, txt_Pagination) == 0x000488, "Member 'UW_Loadout_ItemList_C::txt_Pagination' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, VB_Content) == 0x000490, "Member 'UW_Loadout_ItemList_C::VB_Content' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, Gear_Category_Classes) == 0x000498, "Member 'UW_Loadout_ItemList_C::Gear_Category_Classes' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, IsQuartermaster) == 0x0004A8, "Member 'UW_Loadout_ItemList_C::IsQuartermaster' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, SubnavGearButtons) == 0x0004B0, "Member 'UW_Loadout_ItemList_C::SubnavGearButtons' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, LoadoutCategory) == 0x000500, "Member 'UW_Loadout_ItemList_C::LoadoutCategory' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, OnLoadoutItemClicked) == 0x000508, "Member 'UW_Loadout_ItemList_C::OnLoadoutItemClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, Loadout_Slot) == 0x000518, "Member 'UW_Loadout_ItemList_C::Loadout_Slot' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, SubnavAttachmentButtons) == 0x000520, "Member 'UW_Loadout_ItemList_C::SubnavAttachmentButtons' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, ItemDataTable) == 0x000570, "Member 'UW_Loadout_ItemList_C::ItemDataTable' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, SelectedItemType) == 0x000578, "Member 'UW_Loadout_ItemList_C::SelectedItemType' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, OnLoadoutItemDoubleClicked) == 0x000580, "Member 'UW_Loadout_ItemList_C::OnLoadoutItemDoubleClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, DemoGearClasses) == 0x000590, "Member 'UW_Loadout_ItemList_C::DemoGearClasses' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, Is_Design_Time) == 0x0005A0, "Member 'UW_Loadout_ItemList_C::Is_Design_Time' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, Items) == 0x0005A8, "Member 'UW_Loadout_ItemList_C::Items' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, CurrentActiveSubnav) == 0x0005F8, "Member 'UW_Loadout_ItemList_C::CurrentActiveSubnav' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, ActiveLoadout) == 0x000600, "Member 'UW_Loadout_ItemList_C::ActiveLoadout' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, CurrentlyEquipped) == 0x0008E8, "Member 'UW_Loadout_ItemList_C::CurrentlyEquipped' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, Open) == 0x0008F0, "Member 'UW_Loadout_ItemList_C::Open' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, SelectedAttachmentSlot) == 0x0008F1, "Member 'UW_Loadout_ItemList_C::SelectedAttachmentSlot' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, AttachingWeaponData) == 0x0008F8, "Member 'UW_Loadout_ItemList_C::AttachingWeaponData' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, FirstItemOffset) == 0x000900, "Member 'UW_Loadout_ItemList_C::FirstItemOffset' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, ListItemPadding) == 0x000908, "Member 'UW_Loadout_ItemList_C::ListItemPadding' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, OnLoadoutItemHovered) == 0x000918, "Member 'UW_Loadout_ItemList_C::OnLoadoutItemHovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, OnLoadoutItemUnhovered) == 0x000928, "Member 'UW_Loadout_ItemList_C::OnLoadoutItemUnhovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, OnAttachmentItemClicked) == 0x000938, "Member 'UW_Loadout_ItemList_C::OnAttachmentItemClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, OnAttachmentItemHovered) == 0x000948, "Member 'UW_Loadout_ItemList_C::OnAttachmentItemHovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, Attachments) == 0x000958, "Member 'UW_Loadout_ItemList_C::Attachments' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, IsPrimary) == 0x0009A8, "Member 'UW_Loadout_ItemList_C::IsPrimary' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, Quartermaster) == 0x0009A9, "Member 'UW_Loadout_ItemList_C::Quartermaster' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, ContentMargins) == 0x0009AC, "Member 'UW_Loadout_ItemList_C::ContentMargins' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, DemoAttachmentList) == 0x0009BC, "Member 'UW_Loadout_ItemList_C::DemoAttachmentList' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, EquippedAttachment) == 0x0009C0, "Member 'UW_Loadout_ItemList_C::EquippedAttachment' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, EquippedItem) == 0x0009C8, "Member 'UW_Loadout_ItemList_C::EquippedItem' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, ScrollToViewPadding) == 0x0009D0, "Member 'UW_Loadout_ItemList_C::ScrollToViewPadding' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, ScrollPageSize) == 0x0009D8, "Member 'UW_Loadout_ItemList_C::ScrollPageSize' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, ScrollPageCount) == 0x0009DC, "Member 'UW_Loadout_ItemList_C::ScrollPageCount' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, CurrentScrollTarget) == 0x0009E0, "Member 'UW_Loadout_ItemList_C::CurrentScrollTarget' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, CurrentScrollPage) == 0x0009E4, "Member 'UW_Loadout_ItemList_C::CurrentScrollPage' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, CurrentOffset) == 0x0009E8, "Member 'UW_Loadout_ItemList_C::CurrentOffset' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, IsUserScrollInput) == 0x0009F0, "Member 'UW_Loadout_ItemList_C::IsUserScrollInput' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, VisibleItems) == 0x0009F8, "Member 'UW_Loadout_ItemList_C::VisibleItems' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, ExcludedItems) == 0x000A08, "Member 'UW_Loadout_ItemList_C::ExcludedItems' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, ExcludedAmmoType) == 0x000A18, "Member 'UW_Loadout_ItemList_C::ExcludedAmmoType' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, OnAttachmentUnhovered) == 0x000A20, "Member 'UW_Loadout_ItemList_C::OnAttachmentUnhovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, OnAmmoItemClicked) == 0x000A30, "Member 'UW_Loadout_ItemList_C::OnAmmoItemClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, OnAmmoItemHovered) == 0x000A40, "Member 'UW_Loadout_ItemList_C::OnAmmoItemHovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, OnAmmoItemDoubleClicked) == 0x000A50, "Member 'UW_Loadout_ItemList_C::OnAmmoItemDoubleClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, IsAmmunition) == 0x000A60, "Member 'UW_Loadout_ItemList_C::IsAmmunition' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, IsArmourMaterial) == 0x000A61, "Member 'UW_Loadout_ItemList_C::IsArmourMaterial' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, OnArmourMaterialClicked) == 0x000A68, "Member 'UW_Loadout_ItemList_C::OnArmourMaterialClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, OnArmourMaterialDoubleClicked) == 0x000A78, "Member 'UW_Loadout_ItemList_C::OnArmourMaterialDoubleClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_C, OnArmourMaterialHovered) == 0x000A88, "Member 'UW_Loadout_ItemList_C::OnArmourMaterialHovered' has a wrong offset!");

}

