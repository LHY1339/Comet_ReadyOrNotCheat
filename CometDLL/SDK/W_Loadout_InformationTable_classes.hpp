#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Loadout_InformationTable

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "ReadyOrNot_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Loadout_InformationTable.W_Loadout_InformationTable_C
// 0x0788 (0x0A48 - 0x02C0)
class UW_Loadout_InformationTable_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       animRefresh;                                       // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       animHide;                                          // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       animReveal;                                        // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 div_Formation_Bot_1;                               // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_Icon;                                          // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ItemInfoPanelWidget;                               // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMenuAnchor*                            ItemListAnchor;                                    // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBox_Icon;                                     // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                SelectedMissionPanel_1;                            // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Icon;                                      // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_Category;                                      // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_Class;                                         // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_Description;                                   // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_ItemName;                                      // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Loadout_Overview_C*                  W_Loadout_Overview;                                // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UClass* ItemToModify)> OnModifyWeaponButtonClicked;          // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Hidden;                                            // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ItemName;                                          // 0x0360(0x0018)(Edit, BlueprintVisible)
	class FText                                   ItemCategory;                                      // 0x0378(0x0018)(Edit, BlueprintVisible)
	class FText                                   ItemDescription;                                   // 0x0390(0x0018)(Edit, BlueprintVisible)
	class UClass*                                 ItemClass;                                         // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EItemCategory                                 LoadoutSlot;                                       // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   WeaponClassText;                                   // 0x03B8(0x0018)(Edit, BlueprintVisible)
	EItemClass                                    WeaponClass;                                       // 0x03D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnInfoPanelRemoved;                                // 0x03D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          InfoHidden;                                        // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnCancelRefresh;                                   // 0x03F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FSavedLoadout                          ActiveLoadout;                                     // 0x0400(0x02E8)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UW_LoadoutInfo_AttachmentList_C*        AttachmentList;                                    // 0x06E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Restricted;                                        // 0x06F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F1[0x7];                                      // 0x06F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(EWeaponAttachmentType Slot, class UClass* AttachmentData)> OnInfoPanelAttachmentClicked; // 0x06F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FName                                   AmmoType;                                          // 0x0708(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             ItemIcon;                                          // 0x0710(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UArmourMaterial*                        ArmourMaterial;                                    // 0x0718(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Attachment;                                        // 0x0720(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EWeaponAttachmentType                         AttachmentType;                                    // 0x0728(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_729[0x7];                                      // 0x0729(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             ScopeReticle;                                      // 0x0730(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutInfo_EffectsList_C*           EffectsList;                                       // 0x0738(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(EWeaponAttachmentType Slot)> OnInfoPanelRemoveAttachmentClicked;   // 0x0740(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FLoadoutPreset                         Loadout_Preset;                                    // 0x0750(0x02F0)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UW_Loadout_Overview_C*                  LoadoutPresetPreview;                              // 0x0A40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void AttachmentItemClicked(class UW_LoadoutInfo_AttachmentListEntry_C* AttachmentListItem);
	void BackPage(bool* Handled);
	void ChangePage(class FName PageName);
	void Construct();
	void ExecuteUbergraph_W_Loadout_InformationTable(int32 EntryPoint);
	void GetWeaponClassText(class FText* WeaponClass_0);
	void HeaderSubpageNavigation(class FName OptionNameID);
	void Hide(double Delay, bool Collapse);
	void InitializePanel(const struct FSavedLoadout& ActiveLoadout_0);
	void ModifyWeaponClicked(class UClass* ItemToModify);
	void Play_Refresh_Anim();
	void PreConstruct(bool IsDesignTime);
	void QuickHide();
	void RefreshPanelAmmoInfo(class FName AmmoType_0, class UClass* WeaponData);
	void RefreshPanelArmourMaterial(class UArmourMaterial* ArmourMaterial_0);
	void RefreshPanelAttachment(class UClass* Attachment_0, class UClass* AttachingWeapon);
	void RefreshPanelItemInfo(const struct FSavedLoadout& ActiveLoadout_0, class UClass* ItemClass_0, EItemCategory LoadoutSlot_0, bool Restricted_0);
	void RefreshPanelLoadoutPreset(const struct FLoadoutPreset& LoadoutPreset);
	void RemoveAttachmentItemClicked(class UW_LoadoutInfo_AttachmentListEntry_C* AttachmentListItem);
	void Reveal(double Delay);
	void SetAttachmentEffects(TArray<struct FST_ItemEffects>* Effects);
	void SetInputMode(bool IsGamepad);
	void SetLoadoutWidget(class UW_Loadout_C* LoadoutWidget);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateActiveLoadout(const struct FSavedLoadout& ActiveLoadout_0);
	void UpdateAmmoInfo();
	void UpdateArmourMaterialInfo();
	void UpdateAttachmentInfo();
	void UpdateCurrentItemMap(const TMap<EItemCategory, class UClass*>& ItemCategory_0);
	void UpdateCurrentSlot(class UW_LoadoutSlot_C* CurrentSlot);
	void UpdateItemInfo();
	void UpdateLoadoutPresetInfo();

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Loadout_InformationTable_C">();
	}
	static class UW_Loadout_InformationTable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Loadout_InformationTable_C>();
	}
};
static_assert(alignof(UW_Loadout_InformationTable_C) == 0x000008, "Wrong alignment on UW_Loadout_InformationTable_C");
static_assert(sizeof(UW_Loadout_InformationTable_C) == 0x000A48, "Wrong size on UW_Loadout_InformationTable_C");
static_assert(offsetof(UW_Loadout_InformationTable_C, UberGraphFrame) == 0x0002C0, "Member 'UW_Loadout_InformationTable_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, animRefresh) == 0x0002C8, "Member 'UW_Loadout_InformationTable_C::animRefresh' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, animHide) == 0x0002D0, "Member 'UW_Loadout_InformationTable_C::animHide' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, animReveal) == 0x0002D8, "Member 'UW_Loadout_InformationTable_C::animReveal' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, div_Formation_Bot_1) == 0x0002E0, "Member 'UW_Loadout_InformationTable_C::div_Formation_Bot_1' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, img_Icon) == 0x0002E8, "Member 'UW_Loadout_InformationTable_C::img_Icon' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, ItemInfoPanelWidget) == 0x0002F0, "Member 'UW_Loadout_InformationTable_C::ItemInfoPanelWidget' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, ItemListAnchor) == 0x0002F8, "Member 'UW_Loadout_InformationTable_C::ItemListAnchor' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, ScaleBox_Icon) == 0x000300, "Member 'UW_Loadout_InformationTable_C::ScaleBox_Icon' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, SelectedMissionPanel_1) == 0x000308, "Member 'UW_Loadout_InformationTable_C::SelectedMissionPanel_1' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, SizeBox) == 0x000310, "Member 'UW_Loadout_InformationTable_C::SizeBox' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, SizeBox_Icon) == 0x000318, "Member 'UW_Loadout_InformationTable_C::SizeBox_Icon' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, txt_Category) == 0x000320, "Member 'UW_Loadout_InformationTable_C::txt_Category' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, txt_Class) == 0x000328, "Member 'UW_Loadout_InformationTable_C::txt_Class' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, txt_Description) == 0x000330, "Member 'UW_Loadout_InformationTable_C::txt_Description' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, txt_ItemName) == 0x000338, "Member 'UW_Loadout_InformationTable_C::txt_ItemName' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, W_Loadout_Overview) == 0x000340, "Member 'UW_Loadout_InformationTable_C::W_Loadout_Overview' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, OnModifyWeaponButtonClicked) == 0x000348, "Member 'UW_Loadout_InformationTable_C::OnModifyWeaponButtonClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, Hidden) == 0x000358, "Member 'UW_Loadout_InformationTable_C::Hidden' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, ItemName) == 0x000360, "Member 'UW_Loadout_InformationTable_C::ItemName' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, ItemCategory) == 0x000378, "Member 'UW_Loadout_InformationTable_C::ItemCategory' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, ItemDescription) == 0x000390, "Member 'UW_Loadout_InformationTable_C::ItemDescription' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, ItemClass) == 0x0003A8, "Member 'UW_Loadout_InformationTable_C::ItemClass' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, LoadoutSlot) == 0x0003B0, "Member 'UW_Loadout_InformationTable_C::LoadoutSlot' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, WeaponClassText) == 0x0003B8, "Member 'UW_Loadout_InformationTable_C::WeaponClassText' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, WeaponClass) == 0x0003D0, "Member 'UW_Loadout_InformationTable_C::WeaponClass' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, OnInfoPanelRemoved) == 0x0003D8, "Member 'UW_Loadout_InformationTable_C::OnInfoPanelRemoved' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, InfoHidden) == 0x0003E8, "Member 'UW_Loadout_InformationTable_C::InfoHidden' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, OnCancelRefresh) == 0x0003F0, "Member 'UW_Loadout_InformationTable_C::OnCancelRefresh' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, ActiveLoadout) == 0x000400, "Member 'UW_Loadout_InformationTable_C::ActiveLoadout' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, AttachmentList) == 0x0006E8, "Member 'UW_Loadout_InformationTable_C::AttachmentList' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, Restricted) == 0x0006F0, "Member 'UW_Loadout_InformationTable_C::Restricted' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, OnInfoPanelAttachmentClicked) == 0x0006F8, "Member 'UW_Loadout_InformationTable_C::OnInfoPanelAttachmentClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, AmmoType) == 0x000708, "Member 'UW_Loadout_InformationTable_C::AmmoType' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, ItemIcon) == 0x000710, "Member 'UW_Loadout_InformationTable_C::ItemIcon' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, ArmourMaterial) == 0x000718, "Member 'UW_Loadout_InformationTable_C::ArmourMaterial' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, Attachment) == 0x000720, "Member 'UW_Loadout_InformationTable_C::Attachment' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, AttachmentType) == 0x000728, "Member 'UW_Loadout_InformationTable_C::AttachmentType' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, ScopeReticle) == 0x000730, "Member 'UW_Loadout_InformationTable_C::ScopeReticle' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, EffectsList) == 0x000738, "Member 'UW_Loadout_InformationTable_C::EffectsList' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, OnInfoPanelRemoveAttachmentClicked) == 0x000740, "Member 'UW_Loadout_InformationTable_C::OnInfoPanelRemoveAttachmentClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, Loadout_Preset) == 0x000750, "Member 'UW_Loadout_InformationTable_C::Loadout_Preset' has a wrong offset!");
static_assert(offsetof(UW_Loadout_InformationTable_C, LoadoutPresetPreview) == 0x000A40, "Member 'UW_Loadout_InformationTable_C::LoadoutPresetPreview' has a wrong offset!");

}

