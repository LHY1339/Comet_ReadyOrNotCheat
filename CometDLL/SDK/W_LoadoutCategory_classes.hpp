#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_LoadoutCategory

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "LoadoutScrollBehaviour_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "LoadoutCategory_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_LoadoutCategory.W_LoadoutCategory_C
// 0x01B0 (0x0498 - 0x02E8)
class UW_LoadoutCategory_C final : public UBaseWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_ButtonPressed;                                // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_StandardButton_C*                    Button;                                            // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               CategoryExpander_Overlay;                          // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           MainContainer;                                     // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               SelectedItemInfo_Container;                        // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_CategoryName;                                  // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_ItemName;                                      // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   LoadoutCategoryName;                               // 0x0328(0x0018)(Edit, BlueprintVisible)
	class FText                                   ItemName;                                          // 0x0340(0x0018)(Edit, BlueprintVisible)
	TArray<class UW_LoadoutClass_C*>              LoadoutClassWidgets;                               // 0x0358(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class FText                                   ToolTip;                                           // 0x0368(0x0018)(Edit, BlueprintVisible)
	EItemCategory                                 LoadoutCategory;                                   // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	ELoadoutScrollBehaviour                       ScrollBehaviour;                                   // 0x0381(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EVerticalAlignment                            ItemInfoCardAlignment;                             // 0x0382(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_383[0x1];                                      // 0x0383(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                ItemInfoCardPadding;                               // 0x0384(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct LoadoutCategory::FLoadoutCategory> GearCategoryClasses;                            // 0x0398(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	TArray<class UW_LoadoutItem_C*>               LoadoutItemWidgets;                                // 0x03A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UBaseWidget*>                    LoadoutWidgets;                                    // 0x03B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UW_LoadoutItem_C*                       SelectedLoadoutItem;                               // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutClass_C*                      LastSelectedLoadoutClass;                          // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutCustomizationMenu_C*          Owner;                                             // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SelectedItemClass;                                 // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bCollapsed;                                        // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             ItemSelectedSound;                                 // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bRequiresQuartermaster;                            // 0x03F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bAllowPresets;                                     // 0x03F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bOnlyAllowOneSelection;                            // 0x03FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB[0x5];                                      // 0x03FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UW_LoadoutCategory_C* LoadoutCategory)> OnButtonClicked;     // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UW_LoadoutCategory_C* LoadoutCategory)> OnButtonHovered;     // 0x0410(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UW_LoadoutCategory_C* LoadoutCategory)> OnButtonUnhovered;   // 0x0420(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(EItemClass ItemClass, class UClass* ItemObjectClass, bool bIsTactical, int32 TacticalSlot, bool bIsMultipleTacticalSlots, int32 MaxTacticalSlots, int32 Starting_Tactical_Slot, class UW_LoadoutItem_C* Loadout_Item_Widget)> OnLoadoutItemButtonClicked; // 0x0430(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bApplyLoadoutOnConstruct;                          // 0x0440(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bChangeCameraView;                                 // 0x0441(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_442[0x2];                                      // 0x0442(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CameraTag;                                         // 0x0444(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PreviewAnimation;                                  // 0x0450(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bChildSelected;                                    // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInMenuBounds;                                     // 0x0461(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHovered;                                          // 0x0462(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAnyKeyDown;                                       // 0x0463(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedRow;                                       // 0x0464(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedColumn;                                    // 0x0468(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DirectoryName;                                     // 0x0470(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        ExpandCollapseDelayTimeRemaining;                  // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPremissionPlanning*                    PreMissionPlanningWidget;                          // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(class UW_StandardButton_C* CallingButton);
	void BndEvt__Button_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature();
	void BndEvt__Button_K2Node_ComponentBoundEvent_2_OnReleased__DelegateSignature();
	void BndEvt__Button_K2Node_ComponentBoundEvent_3_OnHovered__DelegateSignature();
	void BndEvt__Button_K2Node_ComponentBoundEvent_4_OnUnhovered__DelegateSignature();
	void Can_Interact_Pre_Mission_Planning(bool* CanInteract);
	void CollapseAllChildrenExcept(class UW_LoadoutClass_C* InLoadoutClassWidget);
	void CollapseChildren(bool bResetPreviewAnim);
	void CreateLoadoutItem(const struct LoadoutCategory::FLoadoutCategory& InLoadoutCategory);
	void CreateLoadoutItemWidget(const class FText& LoadoutItemName, EItemClass ItemClass, class UClass* ItemObjectClass, bool bIsTactical, int32 TacticalSlot, bool bIsMultipleTacticalSlots, int32 MaxTacticalSlots, int32 StartingTacticalSlot);
	void DeselectAllChildrenExcept(class UW_LoadoutItem_C* InLoadoutItemWidget);
	void EnterPresetsMenu();
	void Escape();
	void ExecuteUbergraph_W_LoadoutCategory(int32 EntryPoint);
	void ExitPresetsMenu();
	void ExpandChildren();
	ESlateVisibility Get_SelectedItemInfo_Container_Visibility();
	void HoverLoadoutClass();
	void HoverLoadoutPreset();
	void HoverUIElement();
	void NextColumn();
	void NextRow();
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	struct FEventReply OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void OnLoadoutClassButtonHovered(class UW_LoadoutClass_C* LoadoutClass);
	void OnLoadoutClassClicked(class UW_LoadoutClass_C* LoadoutClassWidget);
	void OnLoadoutItemButtonHovered(class UW_LoadoutItem_C* LoadoutItem);
	void OnLoadoutItemButtonUnhovered(class UW_LoadoutItem_C* LoadoutItem);
	void OnLoadoutItemClicked(class UW_LoadoutItem_C* LoadoutItemWidget);
	void OnLoadoutLoaded();
	struct FEventReply OnMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void PreConstruct(bool IsDesignTime);
	void PreviousColumn();
	void PreviousRow();
	void RemoveAllLoadoutClassWidgets();
	void SelectLoadoutClass();
	void SelectLoadoutPreset();
	void SelectUIElement();
	void SimulateClick();
	void SimulateHover();
	void SimulateUnhover();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UnhoverLoadoutClass();
	void UnhoverLoadoutPreset();
	void UnhoverUIElement();
	void UnselectLoadoutClass();
	void UnselectLoadoutPreset();
	void UnselectUIElement();
	void UpdateSelectedItemName(const class FText& InItemName);

	void CanExit(bool* Return_Value) const;
	void GetAllUncollapsedLoadoutWidgets(TArray<class UBaseWidget*>* Return_Value) const;
	void GetCurrentMenuDirectory(class FText* Return_Value) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_LoadoutCategory_C">();
	}
	static class UW_LoadoutCategory_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_LoadoutCategory_C>();
	}
};
static_assert(alignof(UW_LoadoutCategory_C) == 0x000008, "Wrong alignment on UW_LoadoutCategory_C");
static_assert(sizeof(UW_LoadoutCategory_C) == 0x000498, "Wrong size on UW_LoadoutCategory_C");
static_assert(offsetof(UW_LoadoutCategory_C, UberGraphFrame) == 0x0002E8, "Member 'UW_LoadoutCategory_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, Anim_ButtonPressed) == 0x0002F0, "Member 'UW_LoadoutCategory_C::Anim_ButtonPressed' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, Button) == 0x0002F8, "Member 'UW_LoadoutCategory_C::Button' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, CategoryExpander_Overlay) == 0x000300, "Member 'UW_LoadoutCategory_C::CategoryExpander_Overlay' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, MainContainer) == 0x000308, "Member 'UW_LoadoutCategory_C::MainContainer' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, SelectedItemInfo_Container) == 0x000310, "Member 'UW_LoadoutCategory_C::SelectedItemInfo_Container' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, txt_CategoryName) == 0x000318, "Member 'UW_LoadoutCategory_C::txt_CategoryName' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, txt_ItemName) == 0x000320, "Member 'UW_LoadoutCategory_C::txt_ItemName' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, LoadoutCategoryName) == 0x000328, "Member 'UW_LoadoutCategory_C::LoadoutCategoryName' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, ItemName) == 0x000340, "Member 'UW_LoadoutCategory_C::ItemName' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, LoadoutClassWidgets) == 0x000358, "Member 'UW_LoadoutCategory_C::LoadoutClassWidgets' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, ToolTip) == 0x000368, "Member 'UW_LoadoutCategory_C::ToolTip' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, LoadoutCategory) == 0x000380, "Member 'UW_LoadoutCategory_C::LoadoutCategory' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, ScrollBehaviour) == 0x000381, "Member 'UW_LoadoutCategory_C::ScrollBehaviour' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, ItemInfoCardAlignment) == 0x000382, "Member 'UW_LoadoutCategory_C::ItemInfoCardAlignment' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, ItemInfoCardPadding) == 0x000384, "Member 'UW_LoadoutCategory_C::ItemInfoCardPadding' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, GearCategoryClasses) == 0x000398, "Member 'UW_LoadoutCategory_C::GearCategoryClasses' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, LoadoutItemWidgets) == 0x0003A8, "Member 'UW_LoadoutCategory_C::LoadoutItemWidgets' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, LoadoutWidgets) == 0x0003B8, "Member 'UW_LoadoutCategory_C::LoadoutWidgets' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, SelectedLoadoutItem) == 0x0003C8, "Member 'UW_LoadoutCategory_C::SelectedLoadoutItem' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, LastSelectedLoadoutClass) == 0x0003D0, "Member 'UW_LoadoutCategory_C::LastSelectedLoadoutClass' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, Owner) == 0x0003D8, "Member 'UW_LoadoutCategory_C::Owner' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, SelectedItemClass) == 0x0003E0, "Member 'UW_LoadoutCategory_C::SelectedItemClass' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, bCollapsed) == 0x0003E8, "Member 'UW_LoadoutCategory_C::bCollapsed' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, ItemSelectedSound) == 0x0003F0, "Member 'UW_LoadoutCategory_C::ItemSelectedSound' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, bRequiresQuartermaster) == 0x0003F8, "Member 'UW_LoadoutCategory_C::bRequiresQuartermaster' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, bAllowPresets) == 0x0003F9, "Member 'UW_LoadoutCategory_C::bAllowPresets' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, bOnlyAllowOneSelection) == 0x0003FA, "Member 'UW_LoadoutCategory_C::bOnlyAllowOneSelection' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, OnButtonClicked) == 0x000400, "Member 'UW_LoadoutCategory_C::OnButtonClicked' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, OnButtonHovered) == 0x000410, "Member 'UW_LoadoutCategory_C::OnButtonHovered' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, OnButtonUnhovered) == 0x000420, "Member 'UW_LoadoutCategory_C::OnButtonUnhovered' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, OnLoadoutItemButtonClicked) == 0x000430, "Member 'UW_LoadoutCategory_C::OnLoadoutItemButtonClicked' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, bApplyLoadoutOnConstruct) == 0x000440, "Member 'UW_LoadoutCategory_C::bApplyLoadoutOnConstruct' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, bChangeCameraView) == 0x000441, "Member 'UW_LoadoutCategory_C::bChangeCameraView' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, CameraTag) == 0x000444, "Member 'UW_LoadoutCategory_C::CameraTag' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, PreviewAnimation) == 0x000450, "Member 'UW_LoadoutCategory_C::PreviewAnimation' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, bChildSelected) == 0x000460, "Member 'UW_LoadoutCategory_C::bChildSelected' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, bInMenuBounds) == 0x000461, "Member 'UW_LoadoutCategory_C::bInMenuBounds' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, bHovered) == 0x000462, "Member 'UW_LoadoutCategory_C::bHovered' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, bAnyKeyDown) == 0x000463, "Member 'UW_LoadoutCategory_C::bAnyKeyDown' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, SelectedRow) == 0x000464, "Member 'UW_LoadoutCategory_C::SelectedRow' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, SelectedColumn) == 0x000468, "Member 'UW_LoadoutCategory_C::SelectedColumn' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, DirectoryName) == 0x000470, "Member 'UW_LoadoutCategory_C::DirectoryName' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, ExpandCollapseDelayTimeRemaining) == 0x000488, "Member 'UW_LoadoutCategory_C::ExpandCollapseDelayTimeRemaining' has a wrong offset!");
static_assert(offsetof(UW_LoadoutCategory_C, PreMissionPlanningWidget) == 0x000490, "Member 'UW_LoadoutCategory_C::PreMissionPlanningWidget' has a wrong offset!");

}

