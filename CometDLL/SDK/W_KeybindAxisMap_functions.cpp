#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_KeybindAxisMap

#include "Basic.hpp"

#include "W_KeybindAxisMap_classes.hpp"
#include "W_KeybindAxisMap_parameters.hpp"


namespace SDK
{

// Function W_KeybindAxisMap.W_KeybindAxisMap_C.Apply All Images
// (BlueprintCallable, BlueprintEvent)

void UW_KeybindAxisMap_C::Apply_All_Images()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeybindAxisMap_C", "Apply All Images");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_KeybindAxisMap.W_KeybindAxisMap_C.ApplyBinds
// (BlueprintCallable, BlueprintEvent)

void UW_KeybindAxisMap_C::ApplyBinds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeybindAxisMap_C", "ApplyBinds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_KeybindAxisMap.W_KeybindAxisMap_C.BndEvt__W_Keybind_KeyboardInput_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature
// (BlueprintEvent)
// Parameters:
// const struct FInputChord&               SelectedKey                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UW_KeybindAxisMap_C::BndEvt__W_Keybind_KeyboardInput_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature(const struct FInputChord& SelectedKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeybindAxisMap_C", "BndEvt__W_Keybind_KeyboardInput_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature");

	Params::W_KeybindAxisMap_C_BndEvt__W_Keybind_KeyboardInput_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature Parms{};

	Parms.SelectedKey = std::move(SelectedKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_KeybindAxisMap.W_KeybindAxisMap_C.BndEvt__W_Keybind_XboxInput_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature
// (BlueprintEvent)
// Parameters:
// const struct FInputChord&               SelectedKey                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UW_KeybindAxisMap_C::BndEvt__W_Keybind_XboxInput_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature(const struct FInputChord& SelectedKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeybindAxisMap_C", "BndEvt__W_Keybind_XboxInput_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature");

	Params::W_KeybindAxisMap_C_BndEvt__W_Keybind_XboxInput_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature Parms{};

	Parms.SelectedKey = std::move(SelectedKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_KeybindAxisMap.W_KeybindAxisMap_C.BndEvt__W_KeybindActionMap_ResetButton_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UW_KeybindAxisMap_C::BndEvt__W_KeybindActionMap_ResetButton_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeybindAxisMap_C", "BndEvt__W_KeybindActionMap_ResetButton_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_KeybindAxisMap.W_KeybindAxisMap_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_KeybindAxisMap_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeybindAxisMap_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_KeybindAxisMap.W_KeybindAxisMap_C.CreateKeyBoardImages
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class UTexture*>&          Images                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UW_KeybindAxisMap_C::CreateKeyBoardImages(const TArray<class UTexture*>& Images)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeybindAxisMap_C", "CreateKeyBoardImages");

	Params::W_KeybindAxisMap_C_CreateKeyBoardImages Parms{};

	Parms.Images = std::move(Images);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_KeybindAxisMap.W_KeybindAxisMap_C.CreateXboxImages
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class UTexture*>&          Images                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UW_KeybindAxisMap_C::CreateXboxImages(const TArray<class UTexture*>& Images)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeybindAxisMap_C", "CreateXboxImages");

	Params::W_KeybindAxisMap_C_CreateXboxImages Parms{};

	Parms.Images = std::move(Images);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_KeybindAxisMap.W_KeybindAxisMap_C.CustomCreateAxisMapping
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FInputAxisKeyMapping&      InputAxisKeyMapping                                    (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_KeybindAxisMap_C::CustomCreateAxisMapping(const struct FInputAxisKeyMapping& InputAxisKeyMapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeybindAxisMap_C", "CustomCreateAxisMapping");

	Params::W_KeybindAxisMap_C_CustomCreateAxisMapping Parms{};

	Parms.InputAxisKeyMapping = std::move(InputAxisKeyMapping);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_KeybindAxisMap.W_KeybindAxisMap_C.ExecuteUbergraph_W_KeybindAxisMap
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_KeybindAxisMap_C::ExecuteUbergraph_W_KeybindAxisMap(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeybindAxisMap_C", "ExecuteUbergraph_W_KeybindAxisMap");

	Params::W_KeybindAxisMap_C_ExecuteUbergraph_W_KeybindAxisMap Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_KeybindAxisMap.W_KeybindAxisMap_C.Sister Binds
// (BlueprintCallable, BlueprintEvent)

void UW_KeybindAxisMap_C::Sister_Binds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeybindAxisMap_C", "Sister Binds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_KeybindAxisMap.W_KeybindAxisMap_C.Get Images from Mappings
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// const struct FInputChord&               Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// const struct FKey&                      Key_Key                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Key_bShift                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Key_bCtrl                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Key_bAlt                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Key_bCmd                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UTexture*>*                Images                                                 (Parm, OutParm)

void UW_KeybindAxisMap_C::Get_Images_from_Mappings(const struct FInputChord& Key, const struct FKey& Key_Key, bool Key_bShift, bool Key_bCtrl, bool Key_bAlt, bool Key_bCmd, TArray<class UTexture*>* Images) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeybindAxisMap_C", "Get Images from Mappings");

	Params::W_KeybindAxisMap_C_Get_Images_from_Mappings Parms{};

	Parms.Key = std::move(Key);
	Parms.Key_Key = std::move(Key_Key);
	Parms.Key_bShift = Key_bShift;
	Parms.Key_bCtrl = Key_bCtrl;
	Parms.Key_bAlt = Key_bAlt;
	Parms.Key_bCmd = Key_bCmd;

	UObject::ProcessEvent(Func, &Parms);

	if (Images != nullptr)
		*Images = std::move(Parms.Images);
}

}

