#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CurveFunctionLibrary

#include "Basic.hpp"


namespace SDK::Params
{

// Function CurveFunctionLibrary.CurveFunctionLibrary_C.LogisticCurve
// 0x0060 (0x0060 - 0x0000)
struct CurveFunctionLibrary_C_LogisticCurve final
{
public:
	double                                        X;                                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Return_Value;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        E;                                                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CurveFunctionLibrary_C_LogisticCurve) == 0x000008, "Wrong alignment on CurveFunctionLibrary_C_LogisticCurve");
static_assert(sizeof(CurveFunctionLibrary_C_LogisticCurve) == 0x000060, "Wrong size on CurveFunctionLibrary_C_LogisticCurve");
static_assert(offsetof(CurveFunctionLibrary_C_LogisticCurve, X) == 0x000000, "Member 'CurveFunctionLibrary_C_LogisticCurve::X' has a wrong offset!");
static_assert(offsetof(CurveFunctionLibrary_C_LogisticCurve, __WorldContext) == 0x000008, "Member 'CurveFunctionLibrary_C_LogisticCurve::__WorldContext' has a wrong offset!");
static_assert(offsetof(CurveFunctionLibrary_C_LogisticCurve, Return_Value) == 0x000010, "Member 'CurveFunctionLibrary_C_LogisticCurve::Return_Value' has a wrong offset!");
static_assert(offsetof(CurveFunctionLibrary_C_LogisticCurve, E) == 0x000018, "Member 'CurveFunctionLibrary_C_LogisticCurve::E' has a wrong offset!");
static_assert(offsetof(CurveFunctionLibrary_C_LogisticCurve, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'CurveFunctionLibrary_C_LogisticCurve::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CurveFunctionLibrary_C_LogisticCurve, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'CurveFunctionLibrary_C_LogisticCurve::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CurveFunctionLibrary_C_LogisticCurve, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000030, "Member 'CurveFunctionLibrary_C_LogisticCurve::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CurveFunctionLibrary_C_LogisticCurve, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'CurveFunctionLibrary_C_LogisticCurve::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CurveFunctionLibrary_C_LogisticCurve, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000040, "Member 'CurveFunctionLibrary_C_LogisticCurve::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CurveFunctionLibrary_C_LogisticCurve, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'CurveFunctionLibrary_C_LogisticCurve::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CurveFunctionLibrary_C_LogisticCurve, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'CurveFunctionLibrary_C_LogisticCurve::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CurveFunctionLibrary_C_LogisticCurve, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'CurveFunctionLibrary_C_LogisticCurve::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

}

