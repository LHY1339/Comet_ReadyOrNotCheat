#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Loadout_MunitionSlots_Deployable

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_Loadout_MunitionSlots_Deployable.W_Loadout_MunitionSlots_Deployable_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_MunitionSlots_Deployable_C_BackPage final
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_Deployable_C_BackPage) == 0x000001, "Wrong alignment on W_Loadout_MunitionSlots_Deployable_C_BackPage");
static_assert(sizeof(W_Loadout_MunitionSlots_Deployable_C_BackPage) == 0x000001, "Wrong size on W_Loadout_MunitionSlots_Deployable_C_BackPage");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_BackPage, Handled) == 0x000000, "Member 'W_Loadout_MunitionSlots_Deployable_C_BackPage::Handled' has a wrong offset!");

// Function W_Loadout_MunitionSlots_Deployable.W_Loadout_MunitionSlots_Deployable_C.BndEvt__W_Loadout_MunitionSlots_Deployable_btn_Add_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_Deployable_C_BndEvt__W_Loadout_MunitionSlots_Deployable_btn_Add_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_Deployable_C_BndEvt__W_Loadout_MunitionSlots_Deployable_btn_Add_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_Deployable_C_BndEvt__W_Loadout_MunitionSlots_Deployable_btn_Add_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(sizeof(W_Loadout_MunitionSlots_Deployable_C_BndEvt__W_Loadout_MunitionSlots_Deployable_btn_Add_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_Deployable_C_BndEvt__W_Loadout_MunitionSlots_Deployable_btn_Add_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_BndEvt__W_Loadout_MunitionSlots_Deployable_btn_Add_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_Loadout_MunitionSlots_Deployable_C_BndEvt__W_Loadout_MunitionSlots_Deployable_btn_Add_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_Loadout_MunitionSlots_Deployable.W_Loadout_MunitionSlots_Deployable_C.BndEvt__W_Loadout_MunitionSlots_Deployable_btn_Minus_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_Deployable_C_BndEvt__W_Loadout_MunitionSlots_Deployable_btn_Minus_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_Deployable_C_BndEvt__W_Loadout_MunitionSlots_Deployable_btn_Minus_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_Deployable_C_BndEvt__W_Loadout_MunitionSlots_Deployable_btn_Minus_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");
static_assert(sizeof(W_Loadout_MunitionSlots_Deployable_C_BndEvt__W_Loadout_MunitionSlots_Deployable_btn_Minus_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_Deployable_C_BndEvt__W_Loadout_MunitionSlots_Deployable_btn_Minus_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_BndEvt__W_Loadout_MunitionSlots_Deployable_btn_Minus_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_Loadout_MunitionSlots_Deployable_C_BndEvt__W_Loadout_MunitionSlots_Deployable_btn_Minus_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_Loadout_MunitionSlots_Deployable.W_Loadout_MunitionSlots_Deployable_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_Deployable_C_ChangePage final
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_Deployable_C_ChangePage) == 0x000004, "Wrong alignment on W_Loadout_MunitionSlots_Deployable_C_ChangePage");
static_assert(sizeof(W_Loadout_MunitionSlots_Deployable_C_ChangePage) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_Deployable_C_ChangePage");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_ChangePage, PageName) == 0x000000, "Member 'W_Loadout_MunitionSlots_Deployable_C_ChangePage::PageName' has a wrong offset!");

// Function W_Loadout_MunitionSlots_Deployable.W_Loadout_MunitionSlots_Deployable_C.DisplayCountControls
// 0x0005 (0x0005 - 0x0000)
struct W_Loadout_MunitionSlots_Deployable_C_DisplayCountControls final
{
public:
	bool                                          ShowCountControls_0;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_Deployable_C_DisplayCountControls) == 0x000001, "Wrong alignment on W_Loadout_MunitionSlots_Deployable_C_DisplayCountControls");
static_assert(sizeof(W_Loadout_MunitionSlots_Deployable_C_DisplayCountControls) == 0x000005, "Wrong size on W_Loadout_MunitionSlots_Deployable_C_DisplayCountControls");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_DisplayCountControls, ShowCountControls_0) == 0x000000, "Member 'W_Loadout_MunitionSlots_Deployable_C_DisplayCountControls::ShowCountControls_0' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_DisplayCountControls, Temp_bool_Variable) == 0x000001, "Member 'W_Loadout_MunitionSlots_Deployable_C_DisplayCountControls::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_DisplayCountControls, Temp_byte_Variable) == 0x000002, "Member 'W_Loadout_MunitionSlots_Deployable_C_DisplayCountControls::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_DisplayCountControls, Temp_byte_Variable_1) == 0x000003, "Member 'W_Loadout_MunitionSlots_Deployable_C_DisplayCountControls::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_DisplayCountControls, K2Node_Select_Default) == 0x000004, "Member 'W_Loadout_MunitionSlots_Deployable_C_DisplayCountControls::K2Node_Select_Default' has a wrong offset!");

// Function W_Loadout_MunitionSlots_Deployable.W_Loadout_MunitionSlots_Deployable_C.ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable
// 0x00B8 (0x00B8 - 0x0000)
struct W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_LoadoutSlot_C*                       CallFunc_GetSlot_ReturnValue;                      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate;    // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay_1;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Delay;                                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_1;               // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       K2Node_CustomEvent_TriggeringSlot_2;               // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_ItemData;                       // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       CallFunc_GetSlot_ReturnValue_1;                    // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_1;  // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       K2Node_CustomEvent_TriggeringSlot_1;               // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       K2Node_CustomEvent_TriggeringSlot;                 // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Enabled;                        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_2;  // 0x0094(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_LoadoutSlot_C*                       CallFunc_GetSlot_ReturnValue_2;                    // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       K2Node_Select_Default;                             // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable");
static_assert(sizeof(W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable) == 0x0000B8, "Wrong size on W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable, EntryPoint) == 0x000000, "Member 'W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable, CallFunc_GetSlot_ReturnValue) == 0x000008, "Member 'W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable::CallFunc_GetSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable, Temp_bool_Variable) == 0x000020, "Member 'W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable, K2Node_Event_Delay_1) == 0x000028, "Member 'W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable, K2Node_Event_Delay) == 0x000030, "Member 'W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable, K2Node_Event_Collapse) == 0x000038, "Member 'W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable, K2Node_Event_IsGamepad) == 0x000039, "Member 'W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable, K2Node_Event_PageName) == 0x00003C, "Member 'W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable, K2Node_Event_IsDesignTime) == 0x000044, "Member 'W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable, K2Node_ComponentBoundEvent_Button_1) == 0x000048, "Member 'W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable, K2Node_ComponentBoundEvent_Button) == 0x000050, "Member 'W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable, K2Node_CustomEvent_TriggeringSlot_2) == 0x000058, "Member 'W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable::K2Node_CustomEvent_TriggeringSlot_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable, K2Node_CustomEvent_ItemData) == 0x000060, "Member 'W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable::K2Node_CustomEvent_ItemData' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable, CallFunc_GetSlot_ReturnValue_1) == 0x000068, "Member 'W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable::CallFunc_GetSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable, K2Node_CreateDelegate_OutputDelegate_1) == 0x000070, "Member 'W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable, K2Node_CustomEvent_TriggeringSlot_1) == 0x000080, "Member 'W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable::K2Node_CustomEvent_TriggeringSlot_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable, K2Node_CustomEvent_TriggeringSlot) == 0x000088, "Member 'W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable::K2Node_CustomEvent_TriggeringSlot' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable, K2Node_CustomEvent_Enabled) == 0x000090, "Member 'W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable::K2Node_CustomEvent_Enabled' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable, K2Node_CreateDelegate_OutputDelegate_2) == 0x000094, "Member 'W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable, CallFunc_GetSlot_ReturnValue_2) == 0x0000A8, "Member 'W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable::CallFunc_GetSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable, K2Node_Select_Default) == 0x0000B0, "Member 'W_Loadout_MunitionSlots_Deployable_C_ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable::K2Node_Select_Default' has a wrong offset!");

// Function W_Loadout_MunitionSlots_Deployable.W_Loadout_MunitionSlots_Deployable_C.GetSlot
// 0x0018 (0x0018 - 0x0000)
struct W_Loadout_MunitionSlots_Deployable_C_GetSlot final
{
public:
	class UW_LoadoutSlot_C*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_LoadoutSlot_C*                       K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_Deployable_C_GetSlot) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_Deployable_C_GetSlot");
static_assert(sizeof(W_Loadout_MunitionSlots_Deployable_C_GetSlot) == 0x000018, "Wrong size on W_Loadout_MunitionSlots_Deployable_C_GetSlot");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_GetSlot, ReturnValue) == 0x000000, "Member 'W_Loadout_MunitionSlots_Deployable_C_GetSlot::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_GetSlot, Temp_bool_Variable) == 0x000008, "Member 'W_Loadout_MunitionSlots_Deployable_C_GetSlot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_GetSlot, K2Node_Select_Default) == 0x000010, "Member 'W_Loadout_MunitionSlots_Deployable_C_GetSlot::K2Node_Select_Default' has a wrong offset!");

// Function W_Loadout_MunitionSlots_Deployable.W_Loadout_MunitionSlots_Deployable_C.Hide
// 0x0010 (0x0010 - 0x0000)
struct W_Loadout_MunitionSlots_Deployable_C_Hide final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_Deployable_C_Hide) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_Deployable_C_Hide");
static_assert(sizeof(W_Loadout_MunitionSlots_Deployable_C_Hide) == 0x000010, "Wrong size on W_Loadout_MunitionSlots_Deployable_C_Hide");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_Hide, Delay) == 0x000000, "Member 'W_Loadout_MunitionSlots_Deployable_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_Hide, Collapse) == 0x000008, "Member 'W_Loadout_MunitionSlots_Deployable_C_Hide::Collapse' has a wrong offset!");

// Function W_Loadout_MunitionSlots_Deployable.W_Loadout_MunitionSlots_Deployable_C.LoadoutSlotClicked
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_Deployable_C_LoadoutSlotClicked final
{
public:
	class UW_LoadoutSlot_C*                       TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_Deployable_C_LoadoutSlotClicked) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_Deployable_C_LoadoutSlotClicked");
static_assert(sizeof(W_Loadout_MunitionSlots_Deployable_C_LoadoutSlotClicked) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_Deployable_C_LoadoutSlotClicked");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_LoadoutSlotClicked, TriggeringSlot) == 0x000000, "Member 'W_Loadout_MunitionSlots_Deployable_C_LoadoutSlotClicked::TriggeringSlot' has a wrong offset!");

// Function W_Loadout_MunitionSlots_Deployable.W_Loadout_MunitionSlots_Deployable_C.LoadoutSlotHovered
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_Deployable_C_LoadoutSlotHovered final
{
public:
	class UW_LoadoutSlot_C*                       TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_Deployable_C_LoadoutSlotHovered) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_Deployable_C_LoadoutSlotHovered");
static_assert(sizeof(W_Loadout_MunitionSlots_Deployable_C_LoadoutSlotHovered) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_Deployable_C_LoadoutSlotHovered");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_LoadoutSlotHovered, TriggeringSlot) == 0x000000, "Member 'W_Loadout_MunitionSlots_Deployable_C_LoadoutSlotHovered::TriggeringSlot' has a wrong offset!");

// Function W_Loadout_MunitionSlots_Deployable.W_Loadout_MunitionSlots_Deployable_C.LoadoutSlotUnhovered
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_Deployable_C_LoadoutSlotUnhovered final
{
public:
	class UW_LoadoutSlot_C*                       TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_Deployable_C_LoadoutSlotUnhovered) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_Deployable_C_LoadoutSlotUnhovered");
static_assert(sizeof(W_Loadout_MunitionSlots_Deployable_C_LoadoutSlotUnhovered) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_Deployable_C_LoadoutSlotUnhovered");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_LoadoutSlotUnhovered, TriggeringSlot) == 0x000000, "Member 'W_Loadout_MunitionSlots_Deployable_C_LoadoutSlotUnhovered::TriggeringSlot' has a wrong offset!");

// Function W_Loadout_MunitionSlots_Deployable.W_Loadout_MunitionSlots_Deployable_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_MunitionSlots_Deployable_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_Deployable_C_PreConstruct) == 0x000001, "Wrong alignment on W_Loadout_MunitionSlots_Deployable_C_PreConstruct");
static_assert(sizeof(W_Loadout_MunitionSlots_Deployable_C_PreConstruct) == 0x000001, "Wrong size on W_Loadout_MunitionSlots_Deployable_C_PreConstruct");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_Loadout_MunitionSlots_Deployable_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_Loadout_MunitionSlots_Deployable.W_Loadout_MunitionSlots_Deployable_C.Reveal
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_Deployable_C_Reveal final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_Deployable_C_Reveal) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_Deployable_C_Reveal");
static_assert(sizeof(W_Loadout_MunitionSlots_Deployable_C_Reveal) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_Deployable_C_Reveal");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_Reveal, Delay) == 0x000000, "Member 'W_Loadout_MunitionSlots_Deployable_C_Reveal::Delay' has a wrong offset!");

// Function W_Loadout_MunitionSlots_Deployable.W_Loadout_MunitionSlots_Deployable_C.SetCount
// 0x0090 (0x0090 - 0x0000)
struct W_Loadout_MunitionSlots_Deployable_C_SetCount final
{
public:
	int32                                         Count_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       CallFunc_GetSlot_ReturnValue;                      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0018)()
};
static_assert(alignof(W_Loadout_MunitionSlots_Deployable_C_SetCount) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_Deployable_C_SetCount");
static_assert(sizeof(W_Loadout_MunitionSlots_Deployable_C_SetCount) == 0x000090, "Wrong size on W_Loadout_MunitionSlots_Deployable_C_SetCount");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_SetCount, Count_0) == 0x000000, "Member 'W_Loadout_MunitionSlots_Deployable_C_SetCount::Count_0' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_SetCount, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000008, "Member 'W_Loadout_MunitionSlots_Deployable_C_SetCount::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_SetCount, CallFunc_GetSlot_ReturnValue) == 0x000010, "Member 'W_Loadout_MunitionSlots_Deployable_C_SetCount::CallFunc_GetSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_SetCount, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'W_Loadout_MunitionSlots_Deployable_C_SetCount::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_SetCount, K2Node_MakeArray_Array) == 0x000068, "Member 'W_Loadout_MunitionSlots_Deployable_C_SetCount::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_SetCount, CallFunc_Format_ReturnValue) == 0x000078, "Member 'W_Loadout_MunitionSlots_Deployable_C_SetCount::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots_Deployable.W_Loadout_MunitionSlots_Deployable_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_MunitionSlots_Deployable_C_SetInputMode final
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_Deployable_C_SetInputMode) == 0x000001, "Wrong alignment on W_Loadout_MunitionSlots_Deployable_C_SetInputMode");
static_assert(sizeof(W_Loadout_MunitionSlots_Deployable_C_SetInputMode) == 0x000001, "Wrong size on W_Loadout_MunitionSlots_Deployable_C_SetInputMode");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_Loadout_MunitionSlots_Deployable_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_Loadout_MunitionSlots_Deployable.W_Loadout_MunitionSlots_Deployable_C.SetItemClass
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_Deployable_C_SetItemClass final
{
public:
	class UClass*                                 ItemData_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_Deployable_C_SetItemClass) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_Deployable_C_SetItemClass");
static_assert(sizeof(W_Loadout_MunitionSlots_Deployable_C_SetItemClass) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_Deployable_C_SetItemClass");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_SetItemClass, ItemData_0) == 0x000000, "Member 'W_Loadout_MunitionSlots_Deployable_C_SetItemClass::ItemData_0' has a wrong offset!");

// Function W_Loadout_MunitionSlots_Deployable.W_Loadout_MunitionSlots_Deployable_C.SetSlotVisibility
// 0x0009 (0x0009 - 0x0000)
struct W_Loadout_MunitionSlots_Deployable_C_SetSlotVisibility final
{
public:
	bool                                          IsGrenade_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_Deployable_C_SetSlotVisibility) == 0x000001, "Wrong alignment on W_Loadout_MunitionSlots_Deployable_C_SetSlotVisibility");
static_assert(sizeof(W_Loadout_MunitionSlots_Deployable_C_SetSlotVisibility) == 0x000009, "Wrong size on W_Loadout_MunitionSlots_Deployable_C_SetSlotVisibility");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_SetSlotVisibility, IsGrenade_0) == 0x000000, "Member 'W_Loadout_MunitionSlots_Deployable_C_SetSlotVisibility::IsGrenade_0' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_SetSlotVisibility, Temp_bool_Variable) == 0x000001, "Member 'W_Loadout_MunitionSlots_Deployable_C_SetSlotVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_SetSlotVisibility, Temp_byte_Variable) == 0x000002, "Member 'W_Loadout_MunitionSlots_Deployable_C_SetSlotVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_SetSlotVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'W_Loadout_MunitionSlots_Deployable_C_SetSlotVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_SetSlotVisibility, Temp_bool_Variable_1) == 0x000004, "Member 'W_Loadout_MunitionSlots_Deployable_C_SetSlotVisibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_SetSlotVisibility, Temp_byte_Variable_2) == 0x000005, "Member 'W_Loadout_MunitionSlots_Deployable_C_SetSlotVisibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_SetSlotVisibility, Temp_byte_Variable_3) == 0x000006, "Member 'W_Loadout_MunitionSlots_Deployable_C_SetSlotVisibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_SetSlotVisibility, K2Node_Select_Default) == 0x000007, "Member 'W_Loadout_MunitionSlots_Deployable_C_SetSlotVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_SetSlotVisibility, K2Node_Select_Default_1) == 0x000008, "Member 'W_Loadout_MunitionSlots_Deployable_C_SetSlotVisibility::K2Node_Select_Default_1' has a wrong offset!");

// Function W_Loadout_MunitionSlots_Deployable.W_Loadout_MunitionSlots_Deployable_C.ToggleAddButton
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_MunitionSlots_Deployable_C_ToggleAddButton final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_Deployable_C_ToggleAddButton) == 0x000001, "Wrong alignment on W_Loadout_MunitionSlots_Deployable_C_ToggleAddButton");
static_assert(sizeof(W_Loadout_MunitionSlots_Deployable_C_ToggleAddButton) == 0x000001, "Wrong size on W_Loadout_MunitionSlots_Deployable_C_ToggleAddButton");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_ToggleAddButton, Enabled) == 0x000000, "Member 'W_Loadout_MunitionSlots_Deployable_C_ToggleAddButton::Enabled' has a wrong offset!");

// Function W_Loadout_MunitionSlots_Deployable.W_Loadout_MunitionSlots_Deployable_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_Deployable_C_GetFocusTarget final
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_Deployable_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_Deployable_C_GetFocusTarget");
static_assert(sizeof(W_Loadout_MunitionSlots_Deployable_C_GetFocusTarget) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_Deployable_C_GetFocusTarget");
static_assert(offsetof(W_Loadout_MunitionSlots_Deployable_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_Loadout_MunitionSlots_Deployable_C_GetFocusTarget::Focus' has a wrong offset!");

}

