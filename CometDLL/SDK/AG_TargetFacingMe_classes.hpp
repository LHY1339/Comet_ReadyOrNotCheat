#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AG_TargetFacingMe

#include "Basic.hpp"

#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AG_TargetFacingMe.AG_TargetFacingMe_C
// 0x0010 (0x0038 - 0x0028)
class UAG_TargetFacingMe_C final : public UAIActionGate
{
public:
	int32                                         TargetType;                                        // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bAllowLastTracked;                                 // 0x002C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Threshold;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	bool CanOpen(const struct FAIActionDecisionContext& Context) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AG_TargetFacingMe_C">();
	}
	static class UAG_TargetFacingMe_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAG_TargetFacingMe_C>();
	}
};
static_assert(alignof(UAG_TargetFacingMe_C) == 0x000008, "Wrong alignment on UAG_TargetFacingMe_C");
static_assert(sizeof(UAG_TargetFacingMe_C) == 0x000038, "Wrong size on UAG_TargetFacingMe_C");
static_assert(offsetof(UAG_TargetFacingMe_C, TargetType) == 0x000028, "Member 'UAG_TargetFacingMe_C::TargetType' has a wrong offset!");
static_assert(offsetof(UAG_TargetFacingMe_C, bAllowLastTracked) == 0x00002C, "Member 'UAG_TargetFacingMe_C::bAllowLastTracked' has a wrong offset!");
static_assert(offsetof(UAG_TargetFacingMe_C, Threshold) == 0x000030, "Member 'UAG_TargetFacingMe_C::Threshold' has a wrong offset!");

}

