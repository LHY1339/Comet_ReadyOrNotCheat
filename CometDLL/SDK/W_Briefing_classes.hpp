#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Briefing

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "Engine_structs.hpp"
#include "ST_Briefing_Evidence_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Briefing.W_Briefing_C
// 0x0870 (0x0BE0 - 0x0370)
class alignas(0x10) UW_Briefing_C final : public UBriefingWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       animHide;                                          // 0x0378(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Fade;                                              // 0x0380(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_Briefing_Audio_C*                    Audio;                                             // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Briefing_Intel_C*                    Intel;                                             // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Briefing_Objectives_C*               Objectives;                                        // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPremissionPlanning*                    PremissionPlanning;                                // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_BriefingTaskButton_C*>        BriefingTaskButtons;                               // 0x03A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<struct FST_Briefing_Evidence>          DocumentsPlaceholder;                              // 0x03B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLevelDataLookupTable                  LevelData;                                         // 0x03C8(0x0818)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Construct();
	void ExecuteUbergraph_W_Briefing(int32 EntryPoint);
	void GetBriefingAudio(TArray<struct FMissionAudio>* Audio_0, TArray<struct FTimelineEvent>* TimelineEvents);
	void GetObjectives(TArray<TSoftClassPtr<class UClass>>* Objectives_0, TArray<TSoftClassPtr<class UClass>>* Challenges);
	void Hide();
	struct FEventReply OnMouseButtonDoubleClick(const struct FGeometry& InMyGeometry, const struct FPointerEvent& InMouseEvent);
	void Original();
	void PreConstruct(bool IsDesignTime);
	void Reveal();
	void SetBriefingTaskButtonsActive(bool Active);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Briefing_C">();
	}
	static class UW_Briefing_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Briefing_C>();
	}
};
static_assert(alignof(UW_Briefing_C) == 0x000010, "Wrong alignment on UW_Briefing_C");
static_assert(sizeof(UW_Briefing_C) == 0x000BE0, "Wrong size on UW_Briefing_C");
static_assert(offsetof(UW_Briefing_C, UberGraphFrame) == 0x000370, "Member 'UW_Briefing_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Briefing_C, animHide) == 0x000378, "Member 'UW_Briefing_C::animHide' has a wrong offset!");
static_assert(offsetof(UW_Briefing_C, Fade) == 0x000380, "Member 'UW_Briefing_C::Fade' has a wrong offset!");
static_assert(offsetof(UW_Briefing_C, Audio) == 0x000388, "Member 'UW_Briefing_C::Audio' has a wrong offset!");
static_assert(offsetof(UW_Briefing_C, Intel) == 0x000390, "Member 'UW_Briefing_C::Intel' has a wrong offset!");
static_assert(offsetof(UW_Briefing_C, Objectives) == 0x000398, "Member 'UW_Briefing_C::Objectives' has a wrong offset!");
static_assert(offsetof(UW_Briefing_C, PremissionPlanning) == 0x0003A0, "Member 'UW_Briefing_C::PremissionPlanning' has a wrong offset!");
static_assert(offsetof(UW_Briefing_C, BriefingTaskButtons) == 0x0003A8, "Member 'UW_Briefing_C::BriefingTaskButtons' has a wrong offset!");
static_assert(offsetof(UW_Briefing_C, DocumentsPlaceholder) == 0x0003B8, "Member 'UW_Briefing_C::DocumentsPlaceholder' has a wrong offset!");
static_assert(offsetof(UW_Briefing_C, LevelData) == 0x0003C8, "Member 'UW_Briefing_C::LevelData' has a wrong offset!");

}

