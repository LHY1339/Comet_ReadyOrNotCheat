#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_WorldMapMissionBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_WorldMapMissionBox.W_WorldMapMissionBox_C
// 0x0070 (0x0358 - 0x02E8)
class UW_WorldMapMissionBox_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hovering;                                          // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 LevelPicture;                                      // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              MissionLabel;                                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            W_Button;                                          // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WorldMap_Gamepad_C*                  WorldMap;                                          // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bMapInBuild_;                                      // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocked_;                                         // 0x0319(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31A[0x2];                                      // 0x031A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   MissionName;                                       // 0x031C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class FName MissionName)> Clicked;                                 // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class FName MissionName)> Hovered;                                 // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class FName MissionName)> Unhovered;                               // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BndEvt__W_WorldMapMissionBox_W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_WorldMapMissionBox_W_Button_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_WorldMapMissionBox_W_Button_K2Node_ComponentBoundEvent_2_Unhovered__DelegateSignature();
	void Construct();
	void ExecuteUbergraph_W_WorldMapMissionBox(int32 EntryPoint);
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	void OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent);
	void PreConstruct(bool IsDesignTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_WorldMapMissionBox_C">();
	}
	static class UW_WorldMapMissionBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_WorldMapMissionBox_C>();
	}
};
static_assert(alignof(UW_WorldMapMissionBox_C) == 0x000008, "Wrong alignment on UW_WorldMapMissionBox_C");
static_assert(sizeof(UW_WorldMapMissionBox_C) == 0x000358, "Wrong size on UW_WorldMapMissionBox_C");
static_assert(offsetof(UW_WorldMapMissionBox_C, UberGraphFrame) == 0x0002E8, "Member 'UW_WorldMapMissionBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_WorldMapMissionBox_C, Hovering) == 0x0002F0, "Member 'UW_WorldMapMissionBox_C::Hovering' has a wrong offset!");
static_assert(offsetof(UW_WorldMapMissionBox_C, LevelPicture) == 0x0002F8, "Member 'UW_WorldMapMissionBox_C::LevelPicture' has a wrong offset!");
static_assert(offsetof(UW_WorldMapMissionBox_C, MissionLabel) == 0x000300, "Member 'UW_WorldMapMissionBox_C::MissionLabel' has a wrong offset!");
static_assert(offsetof(UW_WorldMapMissionBox_C, W_Button) == 0x000308, "Member 'UW_WorldMapMissionBox_C::W_Button' has a wrong offset!");
static_assert(offsetof(UW_WorldMapMissionBox_C, WorldMap) == 0x000310, "Member 'UW_WorldMapMissionBox_C::WorldMap' has a wrong offset!");
static_assert(offsetof(UW_WorldMapMissionBox_C, bMapInBuild_) == 0x000318, "Member 'UW_WorldMapMissionBox_C::bMapInBuild_' has a wrong offset!");
static_assert(offsetof(UW_WorldMapMissionBox_C, IsLocked_) == 0x000319, "Member 'UW_WorldMapMissionBox_C::IsLocked_' has a wrong offset!");
static_assert(offsetof(UW_WorldMapMissionBox_C, MissionName) == 0x00031C, "Member 'UW_WorldMapMissionBox_C::MissionName' has a wrong offset!");
static_assert(offsetof(UW_WorldMapMissionBox_C, Clicked) == 0x000328, "Member 'UW_WorldMapMissionBox_C::Clicked' has a wrong offset!");
static_assert(offsetof(UW_WorldMapMissionBox_C, Hovered) == 0x000338, "Member 'UW_WorldMapMissionBox_C::Hovered' has a wrong offset!");
static_assert(offsetof(UW_WorldMapMissionBox_C, Unhovered) == 0x000348, "Member 'UW_WorldMapMissionBox_C::Unhovered' has a wrong offset!");

}

