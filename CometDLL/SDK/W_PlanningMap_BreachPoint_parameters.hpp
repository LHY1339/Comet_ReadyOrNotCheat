#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PlanningMap_BreachPoint

#include "Basic.hpp"


namespace SDK::Params
{

// Function W_PlanningMap_BreachPoint.W_PlanningMap_BreachPoint_C.BndEvt__btn_BreachPoint_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PlanningMap_BreachPoint_C_BndEvt__btn_BreachPoint_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlanningMap_BreachPoint_C_BndEvt__btn_BreachPoint_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PlanningMap_BreachPoint_C_BndEvt__btn_BreachPoint_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(sizeof(W_PlanningMap_BreachPoint_C_BndEvt__btn_BreachPoint_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_PlanningMap_BreachPoint_C_BndEvt__btn_BreachPoint_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(offsetof(W_PlanningMap_BreachPoint_C_BndEvt__btn_BreachPoint_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_PlanningMap_BreachPoint_C_BndEvt__btn_BreachPoint_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_PlanningMap_BreachPoint.W_PlanningMap_BreachPoint_C.BndEvt__btn_BreachPoint_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PlanningMap_BreachPoint_C_BndEvt__btn_BreachPoint_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlanningMap_BreachPoint_C_BndEvt__btn_BreachPoint_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature) == 0x000008, "Wrong alignment on W_PlanningMap_BreachPoint_C_BndEvt__btn_BreachPoint_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature");
static_assert(sizeof(W_PlanningMap_BreachPoint_C_BndEvt__btn_BreachPoint_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature) == 0x000008, "Wrong size on W_PlanningMap_BreachPoint_C_BndEvt__btn_BreachPoint_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature");
static_assert(offsetof(W_PlanningMap_BreachPoint_C_BndEvt__btn_BreachPoint_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature, Button) == 0x000000, "Member 'W_PlanningMap_BreachPoint_C_BndEvt__btn_BreachPoint_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature::Button' has a wrong offset!");

// Function W_PlanningMap_BreachPoint.W_PlanningMap_BreachPoint_C.ExecuteUbergraph_W_PlanningMap_BreachPoint
// 0x0030 (0x0030 - 0x0000)
struct W_PlanningMap_BreachPoint_C_ExecuteUbergraph_W_PlanningMap_BreachPoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlayingForward_ReturnValue;    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlayingForward_ReturnValue_1;  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_1;               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlanningMap_BreachPoint_C_ExecuteUbergraph_W_PlanningMap_BreachPoint) == 0x000008, "Wrong alignment on W_PlanningMap_BreachPoint_C_ExecuteUbergraph_W_PlanningMap_BreachPoint");
static_assert(sizeof(W_PlanningMap_BreachPoint_C_ExecuteUbergraph_W_PlanningMap_BreachPoint) == 0x000030, "Wrong size on W_PlanningMap_BreachPoint_C_ExecuteUbergraph_W_PlanningMap_BreachPoint");
static_assert(offsetof(W_PlanningMap_BreachPoint_C_ExecuteUbergraph_W_PlanningMap_BreachPoint, EntryPoint) == 0x000000, "Member 'W_PlanningMap_BreachPoint_C_ExecuteUbergraph_W_PlanningMap_BreachPoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_PlanningMap_BreachPoint_C_ExecuteUbergraph_W_PlanningMap_BreachPoint, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000004, "Member 'W_PlanningMap_BreachPoint_C_ExecuteUbergraph_W_PlanningMap_BreachPoint::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlanningMap_BreachPoint_C_ExecuteUbergraph_W_PlanningMap_BreachPoint, CallFunc_IsAnimationPlayingForward_ReturnValue) == 0x000005, "Member 'W_PlanningMap_BreachPoint_C_ExecuteUbergraph_W_PlanningMap_BreachPoint::CallFunc_IsAnimationPlayingForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlanningMap_BreachPoint_C_ExecuteUbergraph_W_PlanningMap_BreachPoint, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'W_PlanningMap_BreachPoint_C_ExecuteUbergraph_W_PlanningMap_BreachPoint::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlanningMap_BreachPoint_C_ExecuteUbergraph_W_PlanningMap_BreachPoint, CallFunc_PlayAnimation_ReturnValue_1) == 0x000010, "Member 'W_PlanningMap_BreachPoint_C_ExecuteUbergraph_W_PlanningMap_BreachPoint::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlanningMap_BreachPoint_C_ExecuteUbergraph_W_PlanningMap_BreachPoint, CallFunc_IsAnimationPlayingForward_ReturnValue_1) == 0x000018, "Member 'W_PlanningMap_BreachPoint_C_ExecuteUbergraph_W_PlanningMap_BreachPoint::CallFunc_IsAnimationPlayingForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlanningMap_BreachPoint_C_ExecuteUbergraph_W_PlanningMap_BreachPoint, K2Node_ComponentBoundEvent_Button_1) == 0x000020, "Member 'W_PlanningMap_BreachPoint_C_ExecuteUbergraph_W_PlanningMap_BreachPoint::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_PlanningMap_BreachPoint_C_ExecuteUbergraph_W_PlanningMap_BreachPoint, K2Node_ComponentBoundEvent_Button) == 0x000028, "Member 'W_PlanningMap_BreachPoint_C_ExecuteUbergraph_W_PlanningMap_BreachPoint::K2Node_ComponentBoundEvent_Button' has a wrong offset!");

// Function W_PlanningMap_BreachPoint.W_PlanningMap_BreachPoint_C.SetSelected
// 0x0001 (0x0001 - 0x0000)
struct W_PlanningMap_BreachPoint_C_SetSelected final
{
public:
	bool                                          Selected_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlanningMap_BreachPoint_C_SetSelected) == 0x000001, "Wrong alignment on W_PlanningMap_BreachPoint_C_SetSelected");
static_assert(sizeof(W_PlanningMap_BreachPoint_C_SetSelected) == 0x000001, "Wrong size on W_PlanningMap_BreachPoint_C_SetSelected");
static_assert(offsetof(W_PlanningMap_BreachPoint_C_SetSelected, Selected_0) == 0x000000, "Member 'W_PlanningMap_BreachPoint_C_SetSelected::Selected_0' has a wrong offset!");

}

