#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_Head_Shared_Master

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "ANIMBP_Head_Shared_Master_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ANIMBP_Head_Shared_Master.ANIMBP_Head_Shared_Master_C
// 0x0DB0 (0x1190 - 0x03E0)
class UANIMBP_Head_Shared_Master_C final : public UReadyOrNotFaceAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ANIMBP_Head_Shared_Master::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;    // 0x03E8(0x0018)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0400(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0408(0x0008)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_2;                       // 0x0410(0x0120)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_1;                       // 0x0530(0x0120)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0650(0x00F0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0740(0x0048)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x0788(0x0040)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x07C8(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0810(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0890(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x08B8(0x0048)()
	struct FAnimNode_Inertialization              AnimGraphNode_Inertialization;                     // 0x0900(0x0110)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x0A10(0x0010)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0A20(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0A68(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0AB0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0AF8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0B40(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0B88(0x00F0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0C78(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0CC0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0D08(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x0D50(0x0048)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve;                         // 0x0D98(0x0120)()
	struct FAnimNode_PoseBlendNode                AnimGraphNode_PoseBlendNode;                       // 0x0EB8(0x00D0)()
	struct FAnimNode_CopyPoseFromMesh             AnimGraphNode_CopyPoseFromMesh;                    // 0x0F88(0x0158)(ContainsInstancedReference)
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x10E0(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1128(0x0020)()
	bool                                          IsPlayerDead;                                      // 0x1148(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1149[0x7];                                     // 0x1149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        EmotionWeight;                                     // 0x1150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LookAtAlpha;                                       // 0x1158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAtLocation;                                    // 0x1160(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 BodyMeshRef;                                       // 0x1178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECharacterEmotion                             Emotion;                                           // 0x1180(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1181[0x7];                                     // 0x1181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LipSyncScale;                                      // 0x1188(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Head_Shared_Master_AnimGraphNode_PoseBlendNode_A99257564D737339170EBB90FDD72DEC();
	void ExecuteUbergraph_ANIMBP_Head_Shared_Master(int32 EntryPoint);
	void On_Lip_Sync_Anim_Update(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANIMBP_Head_Shared_Master_C">();
	}
	static class UANIMBP_Head_Shared_Master_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANIMBP_Head_Shared_Master_C>();
	}
};
static_assert(alignof(UANIMBP_Head_Shared_Master_C) == 0x000010, "Wrong alignment on UANIMBP_Head_Shared_Master_C");
static_assert(sizeof(UANIMBP_Head_Shared_Master_C) == 0x001190, "Wrong size on UANIMBP_Head_Shared_Master_C");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, UberGraphFrame) == 0x0003E0, "Member 'UANIMBP_Head_Shared_Master_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, __AnimBlueprintMutables) == 0x0003E8, "Member 'UANIMBP_Head_Shared_Master_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimBlueprintExtension_PropertyAccess) == 0x000400, "Member 'UANIMBP_Head_Shared_Master_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimBlueprintExtension_Base) == 0x000408, "Member 'UANIMBP_Head_Shared_Master_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_ModifyCurve_2) == 0x000410, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_ModifyCurve_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_ModifyCurve_1) == 0x000530, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_ModifyCurve_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000650, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_Slot_1) == 0x000740, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequenceEvaluator) == 0x000788, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequencePlayer_7) == 0x0007C8, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SaveCachedPose) == 0x000810, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_UseCachedPose) == 0x000890, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequencePlayer_6) == 0x0008B8, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_Inertialization) == 0x000900, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_Inertialization' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_LocalRefPose) == 0x000A10, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_BlendListByBool_1) == 0x000A20, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequencePlayer_5) == 0x000A68, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_BlendListByBool) == 0x000AB0, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequencePlayer_4) == 0x000AF8, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequencePlayer_3) == 0x000B40, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_LayeredBoneBlend) == 0x000B88, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequencePlayer_2) == 0x000C78, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequencePlayer_1) == 0x000CC0, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequencePlayer) == 0x000D08, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_BlendListByEnum) == 0x000D50, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_ModifyCurve) == 0x000D98, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_ModifyCurve' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_PoseBlendNode) == 0x000EB8, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_PoseBlendNode' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_CopyPoseFromMesh) == 0x000F88, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_CopyPoseFromMesh' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_Slot) == 0x0010E0, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_Root) == 0x001128, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, IsPlayerDead) == 0x001148, "Member 'UANIMBP_Head_Shared_Master_C::IsPlayerDead' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, EmotionWeight) == 0x001150, "Member 'UANIMBP_Head_Shared_Master_C::EmotionWeight' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, LookAtAlpha) == 0x001158, "Member 'UANIMBP_Head_Shared_Master_C::LookAtAlpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, LookAtLocation) == 0x001160, "Member 'UANIMBP_Head_Shared_Master_C::LookAtLocation' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, BodyMeshRef) == 0x001178, "Member 'UANIMBP_Head_Shared_Master_C::BodyMeshRef' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, Emotion) == 0x001180, "Member 'UANIMBP_Head_Shared_Master_C::Emotion' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, LipSyncScale) == 0x001188, "Member 'UANIMBP_Head_Shared_Master_C::LipSyncScale' has a wrong offset!");

}

