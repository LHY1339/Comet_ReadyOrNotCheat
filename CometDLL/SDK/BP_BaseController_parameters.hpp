#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BaseController

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EJoystickTypes_structs.hpp"
#include "InputCore_structs.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function BP_BaseController.BP_BaseController_C.AcknowledgeVote
// 0x0030 (0x0030 - 0x0000)
struct BP_BaseController_C_AcknowledgeVote final
{
public:
	struct FVoteData                              CurrentVoteData;                                   // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_BaseController_C_AcknowledgeVote) == 0x000008, "Wrong alignment on BP_BaseController_C_AcknowledgeVote");
static_assert(sizeof(BP_BaseController_C_AcknowledgeVote) == 0x000030, "Wrong size on BP_BaseController_C_AcknowledgeVote");
static_assert(offsetof(BP_BaseController_C_AcknowledgeVote, CurrentVoteData) == 0x000000, "Member 'BP_BaseController_C_AcknowledgeVote::CurrentVoteData' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.BP_ClientWasKicked
// 0x0018 (0x0018 - 0x0000)
struct BP_BaseController_C_BP_ClientWasKicked final
{
public:
	class FText                                   KickReason;                                        // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_BaseController_C_BP_ClientWasKicked) == 0x000008, "Wrong alignment on BP_BaseController_C_BP_ClientWasKicked");
static_assert(sizeof(BP_BaseController_C_BP_ClientWasKicked) == 0x000018, "Wrong size on BP_BaseController_C_BP_ClientWasKicked");
static_assert(offsetof(BP_BaseController_C_BP_ClientWasKicked, KickReason) == 0x000000, "Member 'BP_BaseController_C_BP_ClientWasKicked::KickReason' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.ExecuteUbergraph_BP_BaseController
// 0x0458 (0x0458 - 0x0000)
struct BP_BaseController_C_ExecuteUbergraph_BP_BaseController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AReadyOrNotPlayerState*>         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_1;     // 0x0028(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_1;     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_1;   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_1;    // 0x0050(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotPlayerState*                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue;  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_CustomEvent_Pawn;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_0;                              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1_0;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDestroySessionCallbackProxy*           CallFunc_DestroySession_ReturnValue;               // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;            // 0x00B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_KickReason;                           // 0x00E0(0x0018)(ConstParm)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x00F8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0110(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0128(0x0018)(HasGetValueTypeHash)
	struct FWidgetLookupData                      CallFunc_GetWidgetDataFromLookupData_ReturnValue;  // 0x0140(0x0030)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0180(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0190(0x0018)(HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Array_Get_Item_1;                         // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_PauseMenu_C*                         K2Node_DynamicCast_AsW_Pause_Menu;                 // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_COOPScorePopUp_C*                    CallFunc_Create_ReturnValue_1;                     // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA[0x2];                                      // 0x01CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_ScoreChangeValue;                     // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVoteData                              K2Node_Event_CurrentVoteData_1;                    // 0x01D0(0x0030)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0200(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0218(0x0018)()
	class UW_VotePopUp_gamepad_C*                 K2Node_CustomEvent_Widget;                         // 0x0230(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x023B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotCharacter*                   K2Node_DynamicCast_AsReady_or_Not_Character;       // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0254(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseMagazineWeapon*                    CallFunc_GetEquippedWeapon_ReturnValue;            // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetControlMultipliers_Pitch;              // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetControlMultipliers_Yaw;                // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28B[0x5];                                      // 0x028B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue_1; // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   K2Node_DynamicCast_AsReady_or_Not_Character_1;     // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABaseMagazineWeapon*                    CallFunc_GetEquippedWeapon_ReturnValue_1;          // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotPlayerController*            K2Node_DynamicCast_AsReady_or_Not_Player_Controller; // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue_1;        // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x02D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVoteData                              K2Node_Event_CurrentVoteData;                      // 0x02D8(0x0030)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0308(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character_1;           // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34A[0x6];                                      // 0x034A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Temp_object_Variable_1;                            // 0x0360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue;       // 0x0368(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime;       // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime;     // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction;      // 0x0390(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3_0;                            // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2_0;                            // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_1; // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerLowReady_IsLowReady;              // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquippedWeaponAimAssistEnabled_IsAimAssistEnabled; // 0x03AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x03AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x03AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD[0x3];                                      // 0x03AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVoteData                              K2Node_Event_VoteResult;                           // 0x03B0(0x0030)()
	int32                                         K2Node_Event_YesVotes;                             // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NoVotes;                              // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_2;              // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character_2;           // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseMagazineWeapon*                    CallFunc_GetEquippedWeapon_ReturnValue_2;          // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411[0x7];                                      // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0422(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_423[0x5];                                      // 0x0423(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0428(0x0018)(HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScopeSizeFactor_SizeFactor_ImplicitCast; // 0x0450(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController) == 0x000008, "Wrong alignment on BP_BaseController_C_ExecuteUbergraph_BP_BaseController");
static_assert(sizeof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController) == 0x000458, "Wrong size on BP_BaseController_C_ExecuteUbergraph_BP_BaseController");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, EntryPoint) == 0x000000, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, Temp_object_Variable) == 0x000008, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_EnhancedInputActionEvent_ActionValue_1) == 0x000028, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_EnhancedInputActionEvent_ActionValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_EnhancedInputActionEvent_ElapsedTime_1) == 0x000048, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_EnhancedInputActionEvent_ElapsedTime_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_EnhancedInputActionEvent_TriggeredTime_1) == 0x00004C, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_EnhancedInputActionEvent_TriggeredTime_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_EnhancedInputActionEvent_SourceAction_1) == 0x000050, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_EnhancedInputActionEvent_SourceAction_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Conv_InputActionValueToBool_ReturnValue) == 0x000060, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Conv_InputActionValueToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_CustomEvent_Pawn) == 0x000068, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_CustomEvent_Pawn' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, Temp_real_Variable) == 0x000070, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, Temp_real_Variable_0) == 0x000080, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::Temp_real_Variable_0' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, Temp_real_Variable_1) == 0x000090, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, Temp_real_Variable_1_0) == 0x000098, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::Temp_real_Variable_1_0' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_GetPlayerController_ReturnValue) == 0x0000A0, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_DestroySession_ReturnValue) == 0x0000A8, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_DestroySession_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_CreateDelegate_OutputDelegate) == 0x0000B0, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_GetCurrentLevelName_ReturnValue) == 0x0000C8, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Conv_StringToName_ReturnValue) == 0x0000D8, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_Event_KickReason) == 0x0000E0, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_Event_KickReason' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_InputKeyEvent_Key) == 0x0000F8, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_InputActionEvent_Key) == 0x000110, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_InputActionEvent_Key_1) == 0x000128, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_GetWidgetDataFromLookupData_ReturnValue) == 0x000140, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_GetWidgetDataFromLookupData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_IsValid_ReturnValue_1) == 0x000170, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Create_ReturnValue) == 0x000178, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000180, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_InputActionEvent_Key_2) == 0x000190, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Array_Get_Item_1) == 0x0001A8, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_DynamicCast_AsW_Pause_Menu) == 0x0001B0, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_DynamicCast_AsW_Pause_Menu' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_DynamicCast_bSuccess) == 0x0001B8, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Create_ReturnValue_1) == 0x0001C0, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_IsValid_ReturnValue_2) == 0x0001C8, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_IsVisible_ReturnValue) == 0x0001C9, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_Event_ScoreChangeValue) == 0x0001CC, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_Event_ScoreChangeValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_Event_CurrentVoteData_1) == 0x0001D0, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_Event_CurrentVoteData_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Conv_StringToText_ReturnValue) == 0x000200, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000218, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_CustomEvent_Widget) == 0x000230, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_CustomEvent_Widget' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_IsValid_ReturnValue_3) == 0x000238, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, Temp_bool_Variable) == 0x000239, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_IsValid_ReturnValue_4) == 0x00023A, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_HasAuthority_ReturnValue) == 0x00023B, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_Event_DeltaSeconds) == 0x00023C, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_GetPlayerPawn_ReturnValue) == 0x000240, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_DynamicCast_AsReady_or_Not_Character) == 0x000248, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_DynamicCast_AsReady_or_Not_Character' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_DynamicCast_bSuccess_1) == 0x000250, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_CreateDelegate_OutputDelegate_1) == 0x000254, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_GetEquippedWeapon_ReturnValue) == 0x000268, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_GetEquippedWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_IsValid_ReturnValue_5) == 0x000270, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_GetControlMultipliers_Pitch) == 0x000274, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_GetControlMultipliers_Pitch' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_GetControlMultipliers_Yaw) == 0x000278, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_GetControlMultipliers_Yaw' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x000280, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_GetCurrentInputType_ReturnValue) == 0x000288, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_CustomEvent_bNewInputType) == 0x000289, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_SwitchEnum_CmpSuccess) == 0x00028A, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue_1) == 0x000290, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000298, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_IsValid_ReturnValue_6) == 0x0002A0, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_DynamicCast_AsReady_or_Not_Character_1) == 0x0002A8, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_DynamicCast_AsReady_or_Not_Character_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_DynamicCast_bSuccess_2) == 0x0002B0, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_GetController_ReturnValue) == 0x0002B8, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_GetEquippedWeapon_ReturnValue_1) == 0x0002C0, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_GetEquippedWeapon_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_DynamicCast_AsReady_or_Not_Player_Controller) == 0x0002C8, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_DynamicCast_AsReady_or_Not_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_DynamicCast_bSuccess_3) == 0x0002D0, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_IsValid_ReturnValue_7) == 0x0002D1, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_GetCurrentInputType_ReturnValue_1) == 0x0002D2, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_GetCurrentInputType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_SwitchEnum_CmpSuccess_1) == 0x0002D3, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_Event_CurrentVoteData) == 0x0002D8, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_Event_CurrentVoteData' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_CreateDelegate_OutputDelegate_2) == 0x000308, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_IsValid_ReturnValue_8) == 0x000318, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000320, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000328, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_DynamicCast_AsPlayer_Character) == 0x000330, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_DynamicCast_bSuccess_4) == 0x000338, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_DynamicCast_AsPlayer_Character_1) == 0x000340, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_DynamicCast_AsPlayer_Character_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_DynamicCast_bSuccess_5) == 0x000348, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, Temp_bool_Variable_1) == 0x000349, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, Temp_real_Variable_2) == 0x000350, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, Temp_real_Variable_3) == 0x000358, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, Temp_object_Variable_1) == 0x000360, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_EnhancedInputActionEvent_ActionValue) == 0x000368, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_EnhancedInputActionEvent_ActionValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_EnhancedInputActionEvent_ElapsedTime) == 0x000388, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_EnhancedInputActionEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_EnhancedInputActionEvent_TriggeredTime) == 0x00038C, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_EnhancedInputActionEvent_TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_EnhancedInputActionEvent_SourceAction) == 0x000390, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_EnhancedInputActionEvent_SourceAction' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, Temp_real_Variable_3_0) == 0x000398, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::Temp_real_Variable_3_0' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, Temp_real_Variable_2_0) == 0x0003A0, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::Temp_real_Variable_2_0' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Conv_InputActionValueToBool_ReturnValue_1) == 0x0003A8, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Conv_InputActionValueToBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_IsPlayerLowReady_IsLowReady) == 0x0003A9, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_IsPlayerLowReady_IsLowReady' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_IsEquippedWeaponAimAssistEnabled_IsAimAssistEnabled) == 0x0003AA, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_IsEquippedWeaponAimAssistEnabled_IsAimAssistEnabled' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Not_PreBool_ReturnValue) == 0x0003AB, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_BooleanOR_ReturnValue) == 0x0003AC, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_Event_VoteResult) == 0x0003B0, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_Event_VoteResult' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_Event_YesVotes) == 0x0003E0, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_Event_YesVotes' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_Event_NoVotes) == 0x0003E4, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_Event_NoVotes' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_GetPlayerPawn_ReturnValue_2) == 0x0003E8, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_GetPlayerPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_IsValid_ReturnValue_9) == 0x0003F0, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_DynamicCast_AsPlayer_Character_2) == 0x0003F8, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_DynamicCast_AsPlayer_Character_2' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_DynamicCast_bSuccess_6) == 0x000400, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_GetEquippedWeapon_ReturnValue_2) == 0x000408, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_GetEquippedWeapon_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_IsValid_ReturnValue_10) == 0x000410, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000418, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_BooleanOR_ReturnValue_1) == 0x000420, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000421, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_BooleanAND_ReturnValue) == 0x000422, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_InputKeyEvent_Key_1) == 0x000428, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000440, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000448, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_SetScopeSizeFactor_SizeFactor_ImplicitCast) == 0x000450, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_SetScopeSizeFactor_SizeFactor_ImplicitCast' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.GetJoystickDirection
// 0x0018 (0x0018 - 0x0000)
struct BP_BaseController_C_GetJoystickDirection final
{
public:
	EJoystickTypes                                Stick;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              StickInput;                                        // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_GetJoystickDirection) == 0x000008, "Wrong alignment on BP_BaseController_C_GetJoystickDirection");
static_assert(sizeof(BP_BaseController_C_GetJoystickDirection) == 0x000018, "Wrong size on BP_BaseController_C_GetJoystickDirection");
static_assert(offsetof(BP_BaseController_C_GetJoystickDirection, Stick) == 0x000000, "Member 'BP_BaseController_C_GetJoystickDirection::Stick' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_GetJoystickDirection, StickInput) == 0x000008, "Member 'BP_BaseController_C_GetJoystickDirection::StickInput' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.InpActEvt_End_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_BaseController_C_InpActEvt_End_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_InpActEvt_End_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BP_BaseController_C_InpActEvt_End_K2Node_InputKeyEvent_0");
static_assert(sizeof(BP_BaseController_C_InpActEvt_End_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BP_BaseController_C_InpActEvt_End_K2Node_InputKeyEvent_0");
static_assert(offsetof(BP_BaseController_C_InpActEvt_End_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BP_BaseController_C_InpActEvt_End_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.InpActEvt_Equals_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_BaseController_C_InpActEvt_Equals_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_InpActEvt_Equals_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on BP_BaseController_C_InpActEvt_Equals_K2Node_InputKeyEvent_1");
static_assert(sizeof(BP_BaseController_C_InpActEvt_Equals_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on BP_BaseController_C_InpActEvt_Equals_K2Node_InputKeyEvent_1");
static_assert(offsetof(BP_BaseController_C_InpActEvt_Equals_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'BP_BaseController_C_InpActEvt_Equals_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.InpActEvt_IA_EndPrimaryUse_K2Node_EnhancedInputActionEvent_0
// 0x0030 (0x0030 - 0x0000)
struct BP_BaseController_C_InpActEvt_IA_EndPrimaryUse_K2Node_EnhancedInputActionEvent_0 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_InpActEvt_IA_EndPrimaryUse_K2Node_EnhancedInputActionEvent_0) == 0x000008, "Wrong alignment on BP_BaseController_C_InpActEvt_IA_EndPrimaryUse_K2Node_EnhancedInputActionEvent_0");
static_assert(sizeof(BP_BaseController_C_InpActEvt_IA_EndPrimaryUse_K2Node_EnhancedInputActionEvent_0) == 0x000030, "Wrong size on BP_BaseController_C_InpActEvt_IA_EndPrimaryUse_K2Node_EnhancedInputActionEvent_0");
static_assert(offsetof(BP_BaseController_C_InpActEvt_IA_EndPrimaryUse_K2Node_EnhancedInputActionEvent_0, ActionValue) == 0x000000, "Member 'BP_BaseController_C_InpActEvt_IA_EndPrimaryUse_K2Node_EnhancedInputActionEvent_0::ActionValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_InpActEvt_IA_EndPrimaryUse_K2Node_EnhancedInputActionEvent_0, ElapsedTime) == 0x000020, "Member 'BP_BaseController_C_InpActEvt_IA_EndPrimaryUse_K2Node_EnhancedInputActionEvent_0::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_InpActEvt_IA_EndPrimaryUse_K2Node_EnhancedInputActionEvent_0, TriggeredTime) == 0x000024, "Member 'BP_BaseController_C_InpActEvt_IA_EndPrimaryUse_K2Node_EnhancedInputActionEvent_0::TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_InpActEvt_IA_EndPrimaryUse_K2Node_EnhancedInputActionEvent_0, SourceAction) == 0x000028, "Member 'BP_BaseController_C_InpActEvt_IA_EndPrimaryUse_K2Node_EnhancedInputActionEvent_0::SourceAction' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.InpActEvt_IA_PrimaryUse_K2Node_EnhancedInputActionEvent_1
// 0x0030 (0x0030 - 0x0000)
struct BP_BaseController_C_InpActEvt_IA_PrimaryUse_K2Node_EnhancedInputActionEvent_1 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_InpActEvt_IA_PrimaryUse_K2Node_EnhancedInputActionEvent_1) == 0x000008, "Wrong alignment on BP_BaseController_C_InpActEvt_IA_PrimaryUse_K2Node_EnhancedInputActionEvent_1");
static_assert(sizeof(BP_BaseController_C_InpActEvt_IA_PrimaryUse_K2Node_EnhancedInputActionEvent_1) == 0x000030, "Wrong size on BP_BaseController_C_InpActEvt_IA_PrimaryUse_K2Node_EnhancedInputActionEvent_1");
static_assert(offsetof(BP_BaseController_C_InpActEvt_IA_PrimaryUse_K2Node_EnhancedInputActionEvent_1, ActionValue) == 0x000000, "Member 'BP_BaseController_C_InpActEvt_IA_PrimaryUse_K2Node_EnhancedInputActionEvent_1::ActionValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_InpActEvt_IA_PrimaryUse_K2Node_EnhancedInputActionEvent_1, ElapsedTime) == 0x000020, "Member 'BP_BaseController_C_InpActEvt_IA_PrimaryUse_K2Node_EnhancedInputActionEvent_1::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_InpActEvt_IA_PrimaryUse_K2Node_EnhancedInputActionEvent_1, TriggeredTime) == 0x000024, "Member 'BP_BaseController_C_InpActEvt_IA_PrimaryUse_K2Node_EnhancedInputActionEvent_1::TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_InpActEvt_IA_PrimaryUse_K2Node_EnhancedInputActionEvent_1, SourceAction) == 0x000028, "Member 'BP_BaseController_C_InpActEvt_IA_PrimaryUse_K2Node_EnhancedInputActionEvent_1::SourceAction' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.InpActEvt_ReadyUp_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_BaseController_C_InpActEvt_ReadyUp_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_InpActEvt_ReadyUp_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_BaseController_C_InpActEvt_ReadyUp_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_BaseController_C_InpActEvt_ReadyUp_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_BaseController_C_InpActEvt_ReadyUp_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_BaseController_C_InpActEvt_ReadyUp_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_BaseController_C_InpActEvt_ReadyUp_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.InpActEvt_VoteNo_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_BaseController_C_InpActEvt_VoteNo_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_InpActEvt_VoteNo_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_BaseController_C_InpActEvt_VoteNo_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_BaseController_C_InpActEvt_VoteNo_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_BaseController_C_InpActEvt_VoteNo_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_BaseController_C_InpActEvt_VoteNo_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_BaseController_C_InpActEvt_VoteNo_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.InpActEvt_VoteYes_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_BaseController_C_InpActEvt_VoteYes_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_InpActEvt_VoteYes_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on BP_BaseController_C_InpActEvt_VoteYes_K2Node_InputActionEvent_2");
static_assert(sizeof(BP_BaseController_C_InpActEvt_VoteYes_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on BP_BaseController_C_InpActEvt_VoteYes_K2Node_InputActionEvent_2");
static_assert(offsetof(BP_BaseController_C_InpActEvt_VoteYes_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'BP_BaseController_C_InpActEvt_VoteYes_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.Input Changed
// 0x0001 (0x0001 - 0x0000)
struct BP_BaseController_C_Input_Changed final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_Input_Changed) == 0x000001, "Wrong alignment on BP_BaseController_C_Input_Changed");
static_assert(sizeof(BP_BaseController_C_Input_Changed) == 0x000001, "Wrong size on BP_BaseController_C_Input_Changed");
static_assert(offsetof(BP_BaseController_C_Input_Changed, bNewInputType) == 0x000000, "Member 'BP_BaseController_C_Input_Changed::bNewInputType' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.IsEquippedWeaponAimAssistEnabled
// 0x0040 (0x0040 - 0x0000)
struct BP_BaseController_C_IsEquippedWeaponAimAssistEnabled final
{
public:
	bool                                          IsAimAssistEnabled;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotCharacter*                   K2Node_DynamicCast_AsReady_or_Not_Character;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              CallFunc_GetEquippedItem_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ContainsItemCategory_ReturnValue;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ContainsItemCategory_ReturnValue_1;       // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ContainsItemCategory_ReturnValue_2;       // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseMagazineWeapon*                    K2Node_DynamicCast_AsBase_Magazine_Weapon;         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ContainsItemCategory_ReturnValue_3;       // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_IsEquippedWeaponAimAssistEnabled) == 0x000008, "Wrong alignment on BP_BaseController_C_IsEquippedWeaponAimAssistEnabled");
static_assert(sizeof(BP_BaseController_C_IsEquippedWeaponAimAssistEnabled) == 0x000040, "Wrong size on BP_BaseController_C_IsEquippedWeaponAimAssistEnabled");
static_assert(offsetof(BP_BaseController_C_IsEquippedWeaponAimAssistEnabled, IsAimAssistEnabled) == 0x000000, "Member 'BP_BaseController_C_IsEquippedWeaponAimAssistEnabled::IsAimAssistEnabled' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_IsEquippedWeaponAimAssistEnabled, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_BaseController_C_IsEquippedWeaponAimAssistEnabled::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_IsEquippedWeaponAimAssistEnabled, K2Node_DynamicCast_AsReady_or_Not_Character) == 0x000010, "Member 'BP_BaseController_C_IsEquippedWeaponAimAssistEnabled::K2Node_DynamicCast_AsReady_or_Not_Character' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_IsEquippedWeaponAimAssistEnabled, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BaseController_C_IsEquippedWeaponAimAssistEnabled::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_IsEquippedWeaponAimAssistEnabled, CallFunc_GetEquippedItem_ReturnValue) == 0x000020, "Member 'BP_BaseController_C_IsEquippedWeaponAimAssistEnabled::CallFunc_GetEquippedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_IsEquippedWeaponAimAssistEnabled, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_BaseController_C_IsEquippedWeaponAimAssistEnabled::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_IsEquippedWeaponAimAssistEnabled, CallFunc_ContainsItemCategory_ReturnValue) == 0x000029, "Member 'BP_BaseController_C_IsEquippedWeaponAimAssistEnabled::CallFunc_ContainsItemCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_IsEquippedWeaponAimAssistEnabled, CallFunc_ContainsItemCategory_ReturnValue_1) == 0x00002A, "Member 'BP_BaseController_C_IsEquippedWeaponAimAssistEnabled::CallFunc_ContainsItemCategory_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_IsEquippedWeaponAimAssistEnabled, CallFunc_ContainsItemCategory_ReturnValue_2) == 0x00002B, "Member 'BP_BaseController_C_IsEquippedWeaponAimAssistEnabled::CallFunc_ContainsItemCategory_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_IsEquippedWeaponAimAssistEnabled, K2Node_DynamicCast_AsBase_Magazine_Weapon) == 0x000030, "Member 'BP_BaseController_C_IsEquippedWeaponAimAssistEnabled::K2Node_DynamicCast_AsBase_Magazine_Weapon' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_IsEquippedWeaponAimAssistEnabled, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_BaseController_C_IsEquippedWeaponAimAssistEnabled::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_IsEquippedWeaponAimAssistEnabled, CallFunc_ContainsItemCategory_ReturnValue_3) == 0x000039, "Member 'BP_BaseController_C_IsEquippedWeaponAimAssistEnabled::CallFunc_ContainsItemCategory_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_IsEquippedWeaponAimAssistEnabled, CallFunc_BooleanOR_ReturnValue) == 0x00003A, "Member 'BP_BaseController_C_IsEquippedWeaponAimAssistEnabled::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_IsEquippedWeaponAimAssistEnabled, CallFunc_BooleanOR_ReturnValue_1) == 0x00003B, "Member 'BP_BaseController_C_IsEquippedWeaponAimAssistEnabled::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_IsEquippedWeaponAimAssistEnabled, CallFunc_BooleanOR_ReturnValue_2) == 0x00003C, "Member 'BP_BaseController_C_IsEquippedWeaponAimAssistEnabled::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_IsEquippedWeaponAimAssistEnabled, CallFunc_Not_PreBool_ReturnValue) == 0x00003D, "Member 'BP_BaseController_C_IsEquippedWeaponAimAssistEnabled::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.IsPlayerLowReady
// 0x0020 (0x0020 - 0x0000)
struct BP_BaseController_C_IsPlayerLowReady final
{
public:
	bool                                          IsLowReady;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotCharacter*                   K2Node_DynamicCast_AsReady_or_Not_Character;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_IsPlayerLowReady) == 0x000008, "Wrong alignment on BP_BaseController_C_IsPlayerLowReady");
static_assert(sizeof(BP_BaseController_C_IsPlayerLowReady) == 0x000020, "Wrong size on BP_BaseController_C_IsPlayerLowReady");
static_assert(offsetof(BP_BaseController_C_IsPlayerLowReady, IsLowReady) == 0x000000, "Member 'BP_BaseController_C_IsPlayerLowReady::IsLowReady' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_IsPlayerLowReady, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_BaseController_C_IsPlayerLowReady::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_IsPlayerLowReady, K2Node_DynamicCast_AsReady_or_Not_Character) == 0x000010, "Member 'BP_BaseController_C_IsPlayerLowReady::K2Node_DynamicCast_AsReady_or_Not_Character' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_IsPlayerLowReady, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BaseController_C_IsPlayerLowReady::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_IsPlayerLowReady, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_BaseController_C_IsPlayerLowReady::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_IsPlayerLowReady, CallFunc_BooleanOR_ReturnValue) == 0x00001A, "Member 'BP_BaseController_C_IsPlayerLowReady::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.PresentVoteResult
// 0x0038 (0x0038 - 0x0000)
struct BP_BaseController_C_PresentVoteResult final
{
public:
	struct FVoteData                              VoteResult;                                        // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         YesVotes;                                          // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NoVotes;                                           // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_PresentVoteResult) == 0x000008, "Wrong alignment on BP_BaseController_C_PresentVoteResult");
static_assert(sizeof(BP_BaseController_C_PresentVoteResult) == 0x000038, "Wrong size on BP_BaseController_C_PresentVoteResult");
static_assert(offsetof(BP_BaseController_C_PresentVoteResult, VoteResult) == 0x000000, "Member 'BP_BaseController_C_PresentVoteResult::VoteResult' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_PresentVoteResult, YesVotes) == 0x000030, "Member 'BP_BaseController_C_PresentVoteResult::YesVotes' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_PresentVoteResult, NoVotes) == 0x000034, "Member 'BP_BaseController_C_PresentVoteResult::NoVotes' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BaseController_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BaseController_C_ReceiveTick");
static_assert(sizeof(BP_BaseController_C_ReceiveTick) == 0x000004, "Wrong size on BP_BaseController_C_ReceiveTick");
static_assert(offsetof(BP_BaseController_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BaseController_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.RequestVoteInput
// 0x0030 (0x0030 - 0x0000)
struct BP_BaseController_C_RequestVoteInput final
{
public:
	struct FVoteData                              CurrentVoteData;                                   // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_BaseController_C_RequestVoteInput) == 0x000008, "Wrong alignment on BP_BaseController_C_RequestVoteInput");
static_assert(sizeof(BP_BaseController_C_RequestVoteInput) == 0x000030, "Wrong size on BP_BaseController_C_RequestVoteInput");
static_assert(offsetof(BP_BaseController_C_RequestVoteInput, CurrentVoteData) == 0x000000, "Member 'BP_BaseController_C_RequestVoteInput::CurrentVoteData' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.ServerPossesPawn
// 0x0008 (0x0008 - 0x0000)
struct BP_BaseController_C_ServerPossesPawn final
{
public:
	class APawn*                                  Pawn_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_ServerPossesPawn) == 0x000008, "Wrong alignment on BP_BaseController_C_ServerPossesPawn");
static_assert(sizeof(BP_BaseController_C_ServerPossesPawn) == 0x000008, "Wrong size on BP_BaseController_C_ServerPossesPawn");
static_assert(offsetof(BP_BaseController_C_ServerPossesPawn, Pawn_0) == 0x000000, "Member 'BP_BaseController_C_ServerPossesPawn::Pawn_0' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.SetUpVoteWidget_Gamepad
// 0x0008 (0x0008 - 0x0000)
struct BP_BaseController_C_SetUpVoteWidget_Gamepad final
{
public:
	class UW_VotePopUp_gamepad_C*                 Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_SetUpVoteWidget_Gamepad) == 0x000008, "Wrong alignment on BP_BaseController_C_SetUpVoteWidget_Gamepad");
static_assert(sizeof(BP_BaseController_C_SetUpVoteWidget_Gamepad) == 0x000008, "Wrong size on BP_BaseController_C_SetUpVoteWidget_Gamepad");
static_assert(offsetof(BP_BaseController_C_SetUpVoteWidget_Gamepad, Widget) == 0x000000, "Member 'BP_BaseController_C_SetUpVoteWidget_Gamepad::Widget' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.ShowCoopScoreChangeWidget
// 0x0004 (0x0004 - 0x0000)
struct BP_BaseController_C_ShowCoopScoreChangeWidget final
{
public:
	float                                         ScoreChangeValue;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_ShowCoopScoreChangeWidget) == 0x000004, "Wrong alignment on BP_BaseController_C_ShowCoopScoreChangeWidget");
static_assert(sizeof(BP_BaseController_C_ShowCoopScoreChangeWidget) == 0x000004, "Wrong size on BP_BaseController_C_ShowCoopScoreChangeWidget");
static_assert(offsetof(BP_BaseController_C_ShowCoopScoreChangeWidget, ScoreChangeValue) == 0x000000, "Member 'BP_BaseController_C_ShowCoopScoreChangeWidget::ScoreChangeValue' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.UpdateWeaponAimPoint
// 0x02B8 (0x02B8 - 0x0000)
struct BP_BaseController_C_UpdateWeaponAimPoint final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotCharacter*                   K2Node_DynamicCast_AsReady_or_Not_Character;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseMagazineWeapon*                    CallFunc_GetEquippedWeapon_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00C8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_ProjectWorldLocationToScreen_ScreenLocation; // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToScreen_ReturnValue; // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CB[0x1];                                      // 0x01CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0248(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldLocationToScreen_ScreenLocation_1; // 0x02A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToScreen_ReturnValue_1; // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_UpdateWeaponAimPoint) == 0x000008, "Wrong alignment on BP_BaseController_C_UpdateWeaponAimPoint");
static_assert(sizeof(BP_BaseController_C_UpdateWeaponAimPoint) == 0x0002B8, "Wrong size on BP_BaseController_C_UpdateWeaponAimPoint");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, Temp_object_Variable) == 0x000000, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, K2Node_DynamicCast_AsReady_or_Not_Character) == 0x000018, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::K2Node_DynamicCast_AsReady_or_Not_Character' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_GetEquippedWeapon_ReturnValue) == 0x000028, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_GetEquippedWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_GetForwardVector_ReturnValue) == 0x000038, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000050, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000068, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x000080, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000098, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000B0, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_LineTraceSingle_OutHit) == 0x0000C8, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_LineTraceSingle_ReturnValue) == 0x0001B0, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_ProjectWorldLocationToScreen_ScreenLocation) == 0x0001B8, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_ProjectWorldLocationToScreen_ScreenLocation' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_ProjectWorldLocationToScreen_ReturnValue) == 0x0001C8, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_ProjectWorldLocationToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_BreakHitResult_bBlockingHit) == 0x0001C9, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001CA, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_BreakHitResult_Time) == 0x0001CC, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_BreakHitResult_Distance) == 0x0001D0, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_BreakHitResult_Location) == 0x0001D8, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_BreakHitResult_ImpactPoint) == 0x0001F0, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_BreakHitResult_Normal) == 0x000208, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_BreakHitResult_ImpactNormal) == 0x000220, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_BreakHitResult_PhysMat) == 0x000238, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_BreakHitResult_HitActor) == 0x000240, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_BreakHitResult_HitComponent) == 0x000248, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_BreakHitResult_HitBoneName) == 0x000250, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_BreakHitResult_BoneName) == 0x000258, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_BreakHitResult_HitItem) == 0x000260, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_BreakHitResult_ElementIndex) == 0x000264, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_BreakHitResult_FaceIndex) == 0x000268, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_BreakHitResult_TraceStart) == 0x000270, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_BreakHitResult_TraceEnd) == 0x000288, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_ProjectWorldLocationToScreen_ScreenLocation_1) == 0x0002A0, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_ProjectWorldLocationToScreen_ScreenLocation_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_UpdateWeaponAimPoint, CallFunc_ProjectWorldLocationToScreen_ReturnValue_1) == 0x0002B0, "Member 'BP_BaseController_C_UpdateWeaponAimPoint::CallFunc_ProjectWorldLocationToScreen_ReturnValue_1' has a wrong offset!");

}

