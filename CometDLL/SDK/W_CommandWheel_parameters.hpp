#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CommandWheel

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_CommandWheel.W_CommandWheel_C.ExecuteUbergraph_W_CommandWheel
// 0x00F0 (0x00F0 - 0x0000)
struct W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_num_1;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_num;                                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Direction_1;                          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_RadialMenu_C*                      K2Node_DynamicCast_AsUMG_Radial_Menu;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSwatCommand>                   K2Node_Event_Options_1;                            // 0x0040(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                K2Node_Event_Direction;                            // 0x0050(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSwatCommand>                   K2Node_Event_Options;                              // 0x0068(0x0010)(ConstParm, ReferenceParm)
	int32                                         K2Node_Event_SelectedIndex;                        // 0x0078(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_RadialMenu_C*                      K2Node_DynamicCast_AsUMG_Radial_Menu_1;            // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMG_RadialMenu_C*                      K2Node_DynamicCast_AsUMG_Radial_Menu_2;            // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_RadialMenu_C*                      K2Node_DynamicCast_AsUMG_Radial_Menu_3;            // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInDeadzone;                          // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_4;              // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_5;              // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_6;              // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_7;              // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel) == 0x000008, "Wrong alignment on W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel");
static_assert(sizeof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel) == 0x0000F0, "Wrong size on W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, EntryPoint) == 0x000000, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, K2Node_Event_num_1) == 0x000004, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::K2Node_Event_num_1' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, K2Node_Event_num) == 0x000008, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::K2Node_Event_num' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, K2Node_Event_Direction_1) == 0x000010, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::K2Node_Event_Direction_1' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, K2Node_DynamicCast_AsUMG_Radial_Menu) == 0x000028, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::K2Node_DynamicCast_AsUMG_Radial_Menu' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, Temp_int_Variable) == 0x000034, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, K2Node_Event_Options_1) == 0x000040, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::K2Node_Event_Options_1' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, K2Node_Event_Direction) == 0x000050, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::K2Node_Event_Direction' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, K2Node_Event_Options) == 0x000068, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::K2Node_Event_Options' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, K2Node_Event_SelectedIndex) == 0x000078, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::K2Node_Event_SelectedIndex' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, K2Node_DynamicCast_AsUMG_Radial_Menu_1) == 0x000080, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::K2Node_DynamicCast_AsUMG_Radial_Menu_1' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, CallFunc_PlayAnimation_ReturnValue) == 0x000090, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, CallFunc_PlayAnimation_ReturnValue_1) == 0x000098, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, CallFunc_PlayAnimation_ReturnValue_2) == 0x0000A0, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, CallFunc_PlayAnimation_ReturnValue_3) == 0x0000A8, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, K2Node_DynamicCast_AsUMG_Radial_Menu_2) == 0x0000B0, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::K2Node_DynamicCast_AsUMG_Radial_Menu_2' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, K2Node_DynamicCast_bSuccess_2) == 0x0000B8, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, K2Node_DynamicCast_AsUMG_Radial_Menu_3) == 0x0000C0, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::K2Node_DynamicCast_AsUMG_Radial_Menu_3' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, K2Node_DynamicCast_bSuccess_3) == 0x0000C8, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, K2Node_Event_bInDeadzone) == 0x0000C9, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::K2Node_Event_bInDeadzone' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, CallFunc_PlayAnimation_ReturnValue_4) == 0x0000D0, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::CallFunc_PlayAnimation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, CallFunc_PlayAnimation_ReturnValue_5) == 0x0000D8, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::CallFunc_PlayAnimation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, CallFunc_PlayAnimation_ReturnValue_6) == 0x0000E0, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::CallFunc_PlayAnimation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel, CallFunc_PlayAnimation_ReturnValue_7) == 0x0000E8, "Member 'W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel::CallFunc_PlayAnimation_ReturnValue_7' has a wrong offset!");

// Function W_CommandWheel.W_CommandWheel_C.ForceSetInDeadzone
// 0x0001 (0x0001 - 0x0000)
struct W_CommandWheel_C_ForceSetInDeadzone final
{
public:
	bool                                          bInDeadzone;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CommandWheel_C_ForceSetInDeadzone) == 0x000001, "Wrong alignment on W_CommandWheel_C_ForceSetInDeadzone");
static_assert(sizeof(W_CommandWheel_C_ForceSetInDeadzone) == 0x000001, "Wrong size on W_CommandWheel_C_ForceSetInDeadzone");
static_assert(offsetof(W_CommandWheel_C_ForceSetInDeadzone, bInDeadzone) == 0x000000, "Member 'W_CommandWheel_C_ForceSetInDeadzone::bInDeadzone' has a wrong offset!");

// Function W_CommandWheel.W_CommandWheel_C.GetCurentIndex
// 0x0020 (0x0020 - 0x0000)
struct W_CommandWheel_C_GetCurentIndex final
{
public:
	int32                                         CurrentIndex_0;                                    // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_RadialMenu_C*                      K2Node_DynamicCast_AsUMG_Radial_Menu;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentIndex_Index;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentIndex_Valid;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CommandWheel_C_GetCurentIndex) == 0x000008, "Wrong alignment on W_CommandWheel_C_GetCurentIndex");
static_assert(sizeof(W_CommandWheel_C_GetCurentIndex) == 0x000020, "Wrong size on W_CommandWheel_C_GetCurentIndex");
static_assert(offsetof(W_CommandWheel_C_GetCurentIndex, CurrentIndex_0) == 0x000000, "Member 'W_CommandWheel_C_GetCurentIndex::CurrentIndex_0' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_GetCurentIndex, K2Node_DynamicCast_AsUMG_Radial_Menu) == 0x000008, "Member 'W_CommandWheel_C_GetCurentIndex::K2Node_DynamicCast_AsUMG_Radial_Menu' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_GetCurentIndex, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'W_CommandWheel_C_GetCurentIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_GetCurentIndex, CallFunc_GetCurrentIndex_Index) == 0x000014, "Member 'W_CommandWheel_C_GetCurentIndex::CallFunc_GetCurrentIndex_Index' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_GetCurentIndex, CallFunc_GetCurrentIndex_Valid) == 0x000018, "Member 'W_CommandWheel_C_GetCurentIndex::CallFunc_GetCurrentIndex_Valid' has a wrong offset!");

// Function W_CommandWheel.W_CommandWheel_C.SetInnerCommands
// 0x0010 (0x0010 - 0x0000)
struct W_CommandWheel_C_SetInnerCommands final
{
public:
	TArray<struct FSwatCommand>                   Options;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_CommandWheel_C_SetInnerCommands) == 0x000008, "Wrong alignment on W_CommandWheel_C_SetInnerCommands");
static_assert(sizeof(W_CommandWheel_C_SetInnerCommands) == 0x000010, "Wrong size on W_CommandWheel_C_SetInnerCommands");
static_assert(offsetof(W_CommandWheel_C_SetInnerCommands, Options) == 0x000000, "Member 'W_CommandWheel_C_SetInnerCommands::Options' has a wrong offset!");

// Function W_CommandWheel.W_CommandWheel_C.SetInnerSegments
// 0x0004 (0x0004 - 0x0000)
struct W_CommandWheel_C_SetInnerSegments final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CommandWheel_C_SetInnerSegments) == 0x000004, "Wrong alignment on W_CommandWheel_C_SetInnerSegments");
static_assert(sizeof(W_CommandWheel_C_SetInnerSegments) == 0x000004, "Wrong size on W_CommandWheel_C_SetInnerSegments");
static_assert(offsetof(W_CommandWheel_C_SetInnerSegments, Num) == 0x000000, "Member 'W_CommandWheel_C_SetInnerSegments::Num' has a wrong offset!");

// Function W_CommandWheel.W_CommandWheel_C.SetInnerWheelDirection
// 0x0018 (0x0018 - 0x0000)
struct W_CommandWheel_C_SetInnerWheelDirection final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CommandWheel_C_SetInnerWheelDirection) == 0x000008, "Wrong alignment on W_CommandWheel_C_SetInnerWheelDirection");
static_assert(sizeof(W_CommandWheel_C_SetInnerWheelDirection) == 0x000018, "Wrong size on W_CommandWheel_C_SetInnerWheelDirection");
static_assert(offsetof(W_CommandWheel_C_SetInnerWheelDirection, Direction) == 0x000000, "Member 'W_CommandWheel_C_SetInnerWheelDirection::Direction' has a wrong offset!");

// Function W_CommandWheel.W_CommandWheel_C.SetOuterSegments
// 0x0004 (0x0004 - 0x0000)
struct W_CommandWheel_C_SetOuterSegments final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CommandWheel_C_SetOuterSegments) == 0x000004, "Wrong alignment on W_CommandWheel_C_SetOuterSegments");
static_assert(sizeof(W_CommandWheel_C_SetOuterSegments) == 0x000004, "Wrong size on W_CommandWheel_C_SetOuterSegments");
static_assert(offsetof(W_CommandWheel_C_SetOuterSegments, Num) == 0x000000, "Member 'W_CommandWheel_C_SetOuterSegments::Num' has a wrong offset!");

// Function W_CommandWheel.W_CommandWheel_C.Update Cursor Visibility
// 0x0018 (0x0018 - 0x0000)
struct W_CommandWheel_C_Update_Cursor_Visibility final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_RadialMenu_C*                      K2Node_DynamicCast_AsUMG_Radial_Menu;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CommandWheel_C_Update_Cursor_Visibility) == 0x000008, "Wrong alignment on W_CommandWheel_C_Update_Cursor_Visibility");
static_assert(sizeof(W_CommandWheel_C_Update_Cursor_Visibility) == 0x000018, "Wrong size on W_CommandWheel_C_Update_Cursor_Visibility");
static_assert(offsetof(W_CommandWheel_C_Update_Cursor_Visibility, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'W_CommandWheel_C_Update_Cursor_Visibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_Update_Cursor_Visibility, K2Node_DynamicCast_AsUMG_Radial_Menu) == 0x000008, "Member 'W_CommandWheel_C_Update_Cursor_Visibility::K2Node_DynamicCast_AsUMG_Radial_Menu' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_Update_Cursor_Visibility, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'W_CommandWheel_C_Update_Cursor_Visibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_CommandWheel.W_CommandWheel_C.Update Icons
// 0x0058 (0x0058 - 0x0000)
struct W_CommandWheel_C_Update_Icons final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_WheelIcon_C*                         CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WheelIcon_C*                         CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_WheelIcon_C*                         CallFunc_Array_Get_Item_2;                         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_WheelIcon_C*                         CallFunc_Array_Get_Item_3;                         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CommandWheel_C_Update_Icons) == 0x000008, "Wrong alignment on W_CommandWheel_C_Update_Icons");
static_assert(sizeof(W_CommandWheel_C_Update_Icons) == 0x000058, "Wrong size on W_CommandWheel_C_Update_Icons");
static_assert(offsetof(W_CommandWheel_C_Update_Icons, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'W_CommandWheel_C_Update_Icons::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_Update_Icons, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'W_CommandWheel_C_Update_Icons::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_Update_Icons, Temp_int_Array_Index_Variable) == 0x000008, "Member 'W_CommandWheel_C_Update_Icons::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_Update_Icons, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'W_CommandWheel_C_Update_Icons::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_Update_Icons, CallFunc_Array_Get_Item) == 0x000010, "Member 'W_CommandWheel_C_Update_Icons::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_Update_Icons, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'W_CommandWheel_C_Update_Icons::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_Update_Icons, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00001C, "Member 'W_CommandWheel_C_Update_Icons::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_Update_Icons, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'W_CommandWheel_C_Update_Icons::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_Update_Icons, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'W_CommandWheel_C_Update_Icons::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_Update_Icons, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'W_CommandWheel_C_Update_Icons::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_Update_Icons, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'W_CommandWheel_C_Update_Icons::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_Update_Icons, CallFunc_Array_Get_Item_2) == 0x000038, "Member 'W_CommandWheel_C_Update_Icons::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_Update_Icons, CallFunc_Array_Get_Item_3) == 0x000040, "Member 'W_CommandWheel_C_Update_Icons::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_Update_Icons, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000048, "Member 'W_CommandWheel_C_Update_Icons::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_Update_Icons, CallFunc_Array_Length_ReturnValue_1) == 0x00004C, "Member 'W_CommandWheel_C_Update_Icons::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_Update_Icons, CallFunc_Less_IntInt_ReturnValue_1) == 0x000050, "Member 'W_CommandWheel_C_Update_Icons::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function W_CommandWheel.W_CommandWheel_C.UpdateOuterWheel
// 0x0030 (0x0030 - 0x0000)
struct W_CommandWheel_C_UpdateOuterWheel final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSwatCommand>                   Options;                                           // 0x0018(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         SelectedIndex;                                     // 0x0028(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CommandWheel_C_UpdateOuterWheel) == 0x000008, "Wrong alignment on W_CommandWheel_C_UpdateOuterWheel");
static_assert(sizeof(W_CommandWheel_C_UpdateOuterWheel) == 0x000030, "Wrong size on W_CommandWheel_C_UpdateOuterWheel");
static_assert(offsetof(W_CommandWheel_C_UpdateOuterWheel, Direction) == 0x000000, "Member 'W_CommandWheel_C_UpdateOuterWheel::Direction' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateOuterWheel, Options) == 0x000018, "Member 'W_CommandWheel_C_UpdateOuterWheel::Options' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateOuterWheel, SelectedIndex) == 0x000028, "Member 'W_CommandWheel_C_UpdateOuterWheel::SelectedIndex' has a wrong offset!");

// Function W_CommandWheel.W_CommandWheel_C.UpdateRadialMenu
// 0x01B0 (0x01B0 - 0x0000)
struct W_CommandWheel_C_UpdateRadialMenu final
{
public:
	TArray<struct FSwatCommand>                   Commands;                                          // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UUMG_RadialMenu_C*                      RadialMenu;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedIndex;                                     // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInnerWheel;                                      // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_RadialMenu_C*                      K2Node_DynamicCast_AsUMG_Radial_Menu;              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSwatCommand                           CallFunc_Array_Get_Item;                           // 0x0038(0x0060)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_GetIconForCommand_ReturnValue;            // 0x00A0(0x00D0)()
	class UTexture2D*                             CallFunc_GetBrushResourceAsTexture2D_ReturnValue;  // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_WheelIcon_C*                         CallFunc_Create_ReturnValue;                       // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddChildToRadialMenu_Success;             // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CommandWheel_C_UpdateRadialMenu) == 0x000010, "Wrong alignment on W_CommandWheel_C_UpdateRadialMenu");
static_assert(sizeof(W_CommandWheel_C_UpdateRadialMenu) == 0x0001B0, "Wrong size on W_CommandWheel_C_UpdateRadialMenu");
static_assert(offsetof(W_CommandWheel_C_UpdateRadialMenu, Commands) == 0x000000, "Member 'W_CommandWheel_C_UpdateRadialMenu::Commands' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateRadialMenu, RadialMenu) == 0x000010, "Member 'W_CommandWheel_C_UpdateRadialMenu::RadialMenu' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateRadialMenu, SelectedIndex) == 0x000018, "Member 'W_CommandWheel_C_UpdateRadialMenu::SelectedIndex' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateRadialMenu, IsInnerWheel) == 0x00001C, "Member 'W_CommandWheel_C_UpdateRadialMenu::IsInnerWheel' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateRadialMenu, K2Node_DynamicCast_AsUMG_Radial_Menu) == 0x000020, "Member 'W_CommandWheel_C_UpdateRadialMenu::K2Node_DynamicCast_AsUMG_Radial_Menu' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateRadialMenu, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_CommandWheel_C_UpdateRadialMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateRadialMenu, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'W_CommandWheel_C_UpdateRadialMenu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateRadialMenu, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'W_CommandWheel_C_UpdateRadialMenu::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateRadialMenu, Temp_int_Array_Index_Variable) == 0x000034, "Member 'W_CommandWheel_C_UpdateRadialMenu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateRadialMenu, CallFunc_Array_Get_Item) == 0x000038, "Member 'W_CommandWheel_C_UpdateRadialMenu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateRadialMenu, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000098, "Member 'W_CommandWheel_C_UpdateRadialMenu::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateRadialMenu, CallFunc_GetIconForCommand_ReturnValue) == 0x0000A0, "Member 'W_CommandWheel_C_UpdateRadialMenu::CallFunc_GetIconForCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateRadialMenu, CallFunc_GetBrushResourceAsTexture2D_ReturnValue) == 0x000170, "Member 'W_CommandWheel_C_UpdateRadialMenu::CallFunc_GetBrushResourceAsTexture2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateRadialMenu, Temp_int_Loop_Counter_Variable) == 0x000178, "Member 'W_CommandWheel_C_UpdateRadialMenu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateRadialMenu, CallFunc_Less_IntInt_ReturnValue) == 0x00017C, "Member 'W_CommandWheel_C_UpdateRadialMenu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateRadialMenu, CallFunc_Add_IntInt_ReturnValue) == 0x000180, "Member 'W_CommandWheel_C_UpdateRadialMenu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateRadialMenu, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000184, "Member 'W_CommandWheel_C_UpdateRadialMenu::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateRadialMenu, CallFunc_GetOwningPlayer_ReturnValue) == 0x000188, "Member 'W_CommandWheel_C_UpdateRadialMenu::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateRadialMenu, CallFunc_Create_ReturnValue) == 0x000190, "Member 'W_CommandWheel_C_UpdateRadialMenu::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateRadialMenu, CallFunc_Array_Add_ReturnValue) == 0x000198, "Member 'W_CommandWheel_C_UpdateRadialMenu::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateRadialMenu, CallFunc_Array_Add_ReturnValue_1) == 0x00019C, "Member 'W_CommandWheel_C_UpdateRadialMenu::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateRadialMenu, CallFunc_AddChildToRadialMenu_Success) == 0x0001A0, "Member 'W_CommandWheel_C_UpdateRadialMenu::CallFunc_AddChildToRadialMenu_Success' has a wrong offset!");

// Function W_CommandWheel.W_CommandWheel_C.UpdateWheelSelection
// 0x0068 (0x0068 - 0x0000)
struct W_CommandWheel_C_UpdateWheelSelection final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InVector;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_RadialMenu_C*                      K2Node_DynamicCast_AsUMG_Radial_Menu;              // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentIndex_Index;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentIndex_Valid;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item;                           // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57[0x1];                                       // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WheelIcon_C*                         CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CommandWheel_C_UpdateWheelSelection) == 0x000008, "Wrong alignment on W_CommandWheel_C_UpdateWheelSelection");
static_assert(sizeof(W_CommandWheel_C_UpdateWheelSelection) == 0x000068, "Wrong size on W_CommandWheel_C_UpdateWheelSelection");
static_assert(offsetof(W_CommandWheel_C_UpdateWheelSelection, Object) == 0x000000, "Member 'W_CommandWheel_C_UpdateWheelSelection::Object' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateWheelSelection, InVector) == 0x000008, "Member 'W_CommandWheel_C_UpdateWheelSelection::InVector' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateWheelSelection, CallFunc_VSize_ReturnValue) == 0x000020, "Member 'W_CommandWheel_C_UpdateWheelSelection::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateWheelSelection, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000028, "Member 'W_CommandWheel_C_UpdateWheelSelection::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateWheelSelection, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000038, "Member 'W_CommandWheel_C_UpdateWheelSelection::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateWheelSelection, K2Node_DynamicCast_AsUMG_Radial_Menu) == 0x000040, "Member 'W_CommandWheel_C_UpdateWheelSelection::K2Node_DynamicCast_AsUMG_Radial_Menu' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateWheelSelection, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'W_CommandWheel_C_UpdateWheelSelection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateWheelSelection, CallFunc_GetCurrentIndex_Index) == 0x00004C, "Member 'W_CommandWheel_C_UpdateWheelSelection::CallFunc_GetCurrentIndex_Index' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateWheelSelection, CallFunc_GetCurrentIndex_Valid) == 0x000050, "Member 'W_CommandWheel_C_UpdateWheelSelection::CallFunc_GetCurrentIndex_Valid' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateWheelSelection, CallFunc_Not_PreBool_ReturnValue) == 0x000051, "Member 'W_CommandWheel_C_UpdateWheelSelection::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateWheelSelection, CallFunc_Array_Get_Item) == 0x000052, "Member 'W_CommandWheel_C_UpdateWheelSelection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateWheelSelection, CallFunc_BooleanOR_ReturnValue) == 0x000053, "Member 'W_CommandWheel_C_UpdateWheelSelection::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateWheelSelection, CallFunc_Not_PreBool_ReturnValue_1) == 0x000054, "Member 'W_CommandWheel_C_UpdateWheelSelection::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateWheelSelection, CallFunc_BooleanOR_ReturnValue_1) == 0x000055, "Member 'W_CommandWheel_C_UpdateWheelSelection::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateWheelSelection, CallFunc_IsValid_ReturnValue) == 0x000056, "Member 'W_CommandWheel_C_UpdateWheelSelection::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateWheelSelection, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'W_CommandWheel_C_UpdateWheelSelection::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateWheelSelection, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000060, "Member 'W_CommandWheel_C_UpdateWheelSelection::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateWheelSelection, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000061, "Member 'W_CommandWheel_C_UpdateWheelSelection::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandWheel_C_UpdateWheelSelection, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000062, "Member 'W_CommandWheel_C_UpdateWheelSelection::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

}

