#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_SMM_UI

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPI_SMM_UI.BPI_SMM_UI_C.AsyncRetrieveSG
// 0x0058 (0x0058 - 0x0000)
struct BPI_SMM_UI_C_AsyncRetrieveSG final
{
public:
	TScriptInterface<class IBPI_SMM_Mod_C>        SMM_Mod;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ModName;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 SaveSlot;                                          // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Class_0;                                           // 0x0030(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BPI_SMM_UI_C_AsyncRetrieveSG) == 0x000008, "Wrong alignment on BPI_SMM_UI_C_AsyncRetrieveSG");
static_assert(sizeof(BPI_SMM_UI_C_AsyncRetrieveSG) == 0x000058, "Wrong size on BPI_SMM_UI_C_AsyncRetrieveSG");
static_assert(offsetof(BPI_SMM_UI_C_AsyncRetrieveSG, SMM_Mod) == 0x000000, "Member 'BPI_SMM_UI_C_AsyncRetrieveSG::SMM_Mod' has a wrong offset!");
static_assert(offsetof(BPI_SMM_UI_C_AsyncRetrieveSG, ModName) == 0x000010, "Member 'BPI_SMM_UI_C_AsyncRetrieveSG::ModName' has a wrong offset!");
static_assert(offsetof(BPI_SMM_UI_C_AsyncRetrieveSG, SaveSlot) == 0x000020, "Member 'BPI_SMM_UI_C_AsyncRetrieveSG::SaveSlot' has a wrong offset!");
static_assert(offsetof(BPI_SMM_UI_C_AsyncRetrieveSG, Class_0) == 0x000030, "Member 'BPI_SMM_UI_C_AsyncRetrieveSG::Class_0' has a wrong offset!");

// Function BPI_SMM_UI.BPI_SMM_UI_C.AsyncSaveSG
// 0x0018 (0x0018 - 0x0000)
struct BPI_SMM_UI_C_AsyncSaveSG final
{
public:
	TScriptInterface<class IBPI_SMM_Mod_C>        SMM_Mod;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USMM_SaveGame_Base_C*                   SMM_SaveGame;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_SMM_UI_C_AsyncSaveSG) == 0x000008, "Wrong alignment on BPI_SMM_UI_C_AsyncSaveSG");
static_assert(sizeof(BPI_SMM_UI_C_AsyncSaveSG) == 0x000018, "Wrong size on BPI_SMM_UI_C_AsyncSaveSG");
static_assert(offsetof(BPI_SMM_UI_C_AsyncSaveSG, SMM_Mod) == 0x000000, "Member 'BPI_SMM_UI_C_AsyncSaveSG::SMM_Mod' has a wrong offset!");
static_assert(offsetof(BPI_SMM_UI_C_AsyncSaveSG, SMM_SaveGame) == 0x000010, "Member 'BPI_SMM_UI_C_AsyncSaveSG::SMM_SaveGame' has a wrong offset!");

// Function BPI_SMM_UI.BPI_SMM_UI_C.AsyncSaveSG by Name
// 0x0030 (0x0030 - 0x0000)
struct BPI_SMM_UI_C_AsyncSaveSG_by_Name final
{
public:
	TScriptInterface<class IBPI_SMM_Mod_C>        SMM_Mod;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ModName;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 SlotName;                                          // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_SMM_UI_C_AsyncSaveSG_by_Name) == 0x000008, "Wrong alignment on BPI_SMM_UI_C_AsyncSaveSG_by_Name");
static_assert(sizeof(BPI_SMM_UI_C_AsyncSaveSG_by_Name) == 0x000030, "Wrong size on BPI_SMM_UI_C_AsyncSaveSG_by_Name");
static_assert(offsetof(BPI_SMM_UI_C_AsyncSaveSG_by_Name, SMM_Mod) == 0x000000, "Member 'BPI_SMM_UI_C_AsyncSaveSG_by_Name::SMM_Mod' has a wrong offset!");
static_assert(offsetof(BPI_SMM_UI_C_AsyncSaveSG_by_Name, ModName) == 0x000010, "Member 'BPI_SMM_UI_C_AsyncSaveSG_by_Name::ModName' has a wrong offset!");
static_assert(offsetof(BPI_SMM_UI_C_AsyncSaveSG_by_Name, SlotName) == 0x000020, "Member 'BPI_SMM_UI_C_AsyncSaveSG_by_Name::SlotName' has a wrong offset!");

// Function BPI_SMM_UI.BPI_SMM_UI_C.BlockingRetrieveSG
// 0x0050 (0x0050 - 0x0000)
struct BPI_SMM_UI_C_BlockingRetrieveSG final
{
public:
	class FString                                 ModName;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 SaveSlot;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Class_0;                                           // 0x0020(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class USMM_SaveGame_Base_C*                   SMM_SaveGame;                                      // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_SMM_UI_C_BlockingRetrieveSG) == 0x000008, "Wrong alignment on BPI_SMM_UI_C_BlockingRetrieveSG");
static_assert(sizeof(BPI_SMM_UI_C_BlockingRetrieveSG) == 0x000050, "Wrong size on BPI_SMM_UI_C_BlockingRetrieveSG");
static_assert(offsetof(BPI_SMM_UI_C_BlockingRetrieveSG, ModName) == 0x000000, "Member 'BPI_SMM_UI_C_BlockingRetrieveSG::ModName' has a wrong offset!");
static_assert(offsetof(BPI_SMM_UI_C_BlockingRetrieveSG, SaveSlot) == 0x000010, "Member 'BPI_SMM_UI_C_BlockingRetrieveSG::SaveSlot' has a wrong offset!");
static_assert(offsetof(BPI_SMM_UI_C_BlockingRetrieveSG, Class_0) == 0x000020, "Member 'BPI_SMM_UI_C_BlockingRetrieveSG::Class_0' has a wrong offset!");
static_assert(offsetof(BPI_SMM_UI_C_BlockingRetrieveSG, SMM_SaveGame) == 0x000048, "Member 'BPI_SMM_UI_C_BlockingRetrieveSG::SMM_SaveGame' has a wrong offset!");

// Function BPI_SMM_UI.BPI_SMM_UI_C.BlockingSaveSG
// 0x0028 (0x0028 - 0x0000)
struct BPI_SMM_UI_C_BlockingSaveSG final
{
public:
	class FString                                 ModName;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 SaveSlot;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class USMM_SaveGame_Config_SMM_C*             SMM_SaveGame;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_SMM_UI_C_BlockingSaveSG) == 0x000008, "Wrong alignment on BPI_SMM_UI_C_BlockingSaveSG");
static_assert(sizeof(BPI_SMM_UI_C_BlockingSaveSG) == 0x000028, "Wrong size on BPI_SMM_UI_C_BlockingSaveSG");
static_assert(offsetof(BPI_SMM_UI_C_BlockingSaveSG, ModName) == 0x000000, "Member 'BPI_SMM_UI_C_BlockingSaveSG::ModName' has a wrong offset!");
static_assert(offsetof(BPI_SMM_UI_C_BlockingSaveSG, SaveSlot) == 0x000010, "Member 'BPI_SMM_UI_C_BlockingSaveSG::SaveSlot' has a wrong offset!");
static_assert(offsetof(BPI_SMM_UI_C_BlockingSaveSG, SMM_SaveGame) == 0x000020, "Member 'BPI_SMM_UI_C_BlockingSaveSG::SMM_SaveGame' has a wrong offset!");

// Function BPI_SMM_UI.BPI_SMM_UI_C.DoLog
// 0x0020 (0x0020 - 0x0000)
struct BPI_SMM_UI_C_DoLog final
{
public:
	class FString                                 Input;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Source;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_SMM_UI_C_DoLog) == 0x000008, "Wrong alignment on BPI_SMM_UI_C_DoLog");
static_assert(sizeof(BPI_SMM_UI_C_DoLog) == 0x000020, "Wrong size on BPI_SMM_UI_C_DoLog");
static_assert(offsetof(BPI_SMM_UI_C_DoLog, Input) == 0x000000, "Member 'BPI_SMM_UI_C_DoLog::Input' has a wrong offset!");
static_assert(offsetof(BPI_SMM_UI_C_DoLog, Source) == 0x000010, "Member 'BPI_SMM_UI_C_DoLog::Source' has a wrong offset!");

// Function BPI_SMM_UI.BPI_SMM_UI_C.DoNotification
// 0x0038 (0x0038 - 0x0000)
struct BPI_SMM_UI_C_DoNotification final
{
public:
	double                                        Duration;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Title;                                             // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Body;                                              // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BPI_SMM_UI_C_DoNotification) == 0x000008, "Wrong alignment on BPI_SMM_UI_C_DoNotification");
static_assert(sizeof(BPI_SMM_UI_C_DoNotification) == 0x000038, "Wrong size on BPI_SMM_UI_C_DoNotification");
static_assert(offsetof(BPI_SMM_UI_C_DoNotification, Duration) == 0x000000, "Member 'BPI_SMM_UI_C_DoNotification::Duration' has a wrong offset!");
static_assert(offsetof(BPI_SMM_UI_C_DoNotification, Title) == 0x000008, "Member 'BPI_SMM_UI_C_DoNotification::Title' has a wrong offset!");
static_assert(offsetof(BPI_SMM_UI_C_DoNotification, Body) == 0x000020, "Member 'BPI_SMM_UI_C_DoNotification::Body' has a wrong offset!");

// Function BPI_SMM_UI.BPI_SMM_UI_C.Get SMM Data Assets
// 0x0010 (0x0010 - 0x0000)
struct BPI_SMM_UI_C_Get_SMM_Data_Assets final
{
public:
	TArray<class UPDA_SMM_MenuData_C*>            DataAssets;                                        // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BPI_SMM_UI_C_Get_SMM_Data_Assets) == 0x000008, "Wrong alignment on BPI_SMM_UI_C_Get_SMM_Data_Assets");
static_assert(sizeof(BPI_SMM_UI_C_Get_SMM_Data_Assets) == 0x000010, "Wrong size on BPI_SMM_UI_C_Get_SMM_Data_Assets");
static_assert(offsetof(BPI_SMM_UI_C_Get_SMM_Data_Assets, DataAssets) == 0x000000, "Member 'BPI_SMM_UI_C_Get_SMM_Data_Assets::DataAssets' has a wrong offset!");

// Function BPI_SMM_UI.BPI_SMM_UI_C.GetConfigTabs
// 0x0058 (0x0058 - 0x0000)
struct BPI_SMM_UI_C_GetConfigTabs final
{
public:
	class UUserWidget*                            SettingTab;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class UUserWidget*>         ConfigTabs;                                        // 0x0008(0x0050)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(BPI_SMM_UI_C_GetConfigTabs) == 0x000008, "Wrong alignment on BPI_SMM_UI_C_GetConfigTabs");
static_assert(sizeof(BPI_SMM_UI_C_GetConfigTabs) == 0x000058, "Wrong size on BPI_SMM_UI_C_GetConfigTabs");
static_assert(offsetof(BPI_SMM_UI_C_GetConfigTabs, SettingTab) == 0x000000, "Member 'BPI_SMM_UI_C_GetConfigTabs::SettingTab' has a wrong offset!");
static_assert(offsetof(BPI_SMM_UI_C_GetConfigTabs, ConfigTabs) == 0x000008, "Member 'BPI_SMM_UI_C_GetConfigTabs::ConfigTabs' has a wrong offset!");

// Function BPI_SMM_UI.BPI_SMM_UI_C.GetLastLogMessage
// 0x0010 (0x0010 - 0x0000)
struct BPI_SMM_UI_C_GetLastLogMessage final
{
public:
	class FString                                 LastLogMessage;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_SMM_UI_C_GetLastLogMessage) == 0x000008, "Wrong alignment on BPI_SMM_UI_C_GetLastLogMessage");
static_assert(sizeof(BPI_SMM_UI_C_GetLastLogMessage) == 0x000010, "Wrong size on BPI_SMM_UI_C_GetLastLogMessage");
static_assert(offsetof(BPI_SMM_UI_C_GetLastLogMessage, LastLogMessage) == 0x000000, "Member 'BPI_SMM_UI_C_GetLastLogMessage::LastLogMessage' has a wrong offset!");

// Function BPI_SMM_UI.BPI_SMM_UI_C.GetLogHistory
// 0x0010 (0x0010 - 0x0000)
struct BPI_SMM_UI_C_GetLogHistory final
{
public:
	TArray<class FString>                         LogHistory;                                        // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BPI_SMM_UI_C_GetLogHistory) == 0x000008, "Wrong alignment on BPI_SMM_UI_C_GetLogHistory");
static_assert(sizeof(BPI_SMM_UI_C_GetLogHistory) == 0x000010, "Wrong size on BPI_SMM_UI_C_GetLogHistory");
static_assert(offsetof(BPI_SMM_UI_C_GetLogHistory, LogHistory) == 0x000000, "Member 'BPI_SMM_UI_C_GetLogHistory::LogHistory' has a wrong offset!");

// Function BPI_SMM_UI.BPI_SMM_UI_C.GetSelectedConfigTab
// 0x0018 (0x0018 - 0x0000)
struct BPI_SMM_UI_C_GetSelectedConfigTab final
{
public:
	class UUserWidget*                            SettingTab;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            SelectedTab;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   Key;                                               // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_SMM_UI_C_GetSelectedConfigTab) == 0x000008, "Wrong alignment on BPI_SMM_UI_C_GetSelectedConfigTab");
static_assert(sizeof(BPI_SMM_UI_C_GetSelectedConfigTab) == 0x000018, "Wrong size on BPI_SMM_UI_C_GetSelectedConfigTab");
static_assert(offsetof(BPI_SMM_UI_C_GetSelectedConfigTab, SettingTab) == 0x000000, "Member 'BPI_SMM_UI_C_GetSelectedConfigTab::SettingTab' has a wrong offset!");
static_assert(offsetof(BPI_SMM_UI_C_GetSelectedConfigTab, SelectedTab) == 0x000008, "Member 'BPI_SMM_UI_C_GetSelectedConfigTab::SelectedTab' has a wrong offset!");
static_assert(offsetof(BPI_SMM_UI_C_GetSelectedConfigTab, Key) == 0x000010, "Member 'BPI_SMM_UI_C_GetSelectedConfigTab::Key' has a wrong offset!");

// Function BPI_SMM_UI.BPI_SMM_UI_C.GetSelectedSettingTab
// 0x0010 (0x0010 - 0x0000)
struct BPI_SMM_UI_C_GetSelectedSettingTab final
{
public:
	class UUserWidget*                            SelectedTab;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   Key;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_SMM_UI_C_GetSelectedSettingTab) == 0x000008, "Wrong alignment on BPI_SMM_UI_C_GetSelectedSettingTab");
static_assert(sizeof(BPI_SMM_UI_C_GetSelectedSettingTab) == 0x000010, "Wrong size on BPI_SMM_UI_C_GetSelectedSettingTab");
static_assert(offsetof(BPI_SMM_UI_C_GetSelectedSettingTab, SelectedTab) == 0x000000, "Member 'BPI_SMM_UI_C_GetSelectedSettingTab::SelectedTab' has a wrong offset!");
static_assert(offsetof(BPI_SMM_UI_C_GetSelectedSettingTab, Key) == 0x000008, "Member 'BPI_SMM_UI_C_GetSelectedSettingTab::Key' has a wrong offset!");

// Function BPI_SMM_UI.BPI_SMM_UI_C.GetSelectedTab
// 0x0010 (0x0010 - 0x0000)
struct BPI_SMM_UI_C_GetSelectedTab final
{
public:
	class UUserWidget*                            SelectedTab;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   Key;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_SMM_UI_C_GetSelectedTab) == 0x000008, "Wrong alignment on BPI_SMM_UI_C_GetSelectedTab");
static_assert(sizeof(BPI_SMM_UI_C_GetSelectedTab) == 0x000010, "Wrong size on BPI_SMM_UI_C_GetSelectedTab");
static_assert(offsetof(BPI_SMM_UI_C_GetSelectedTab, SelectedTab) == 0x000000, "Member 'BPI_SMM_UI_C_GetSelectedTab::SelectedTab' has a wrong offset!");
static_assert(offsetof(BPI_SMM_UI_C_GetSelectedTab, Key) == 0x000008, "Member 'BPI_SMM_UI_C_GetSelectedTab::Key' has a wrong offset!");

// Function BPI_SMM_UI.BPI_SMM_UI_C.GetSettingTabs
// 0x0050 (0x0050 - 0x0000)
struct BPI_SMM_UI_C_GetSettingTabs final
{
public:
	TMap<class FName, class UUserWidget*>         SettingTabs;                                       // 0x0000(0x0050)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(BPI_SMM_UI_C_GetSettingTabs) == 0x000008, "Wrong alignment on BPI_SMM_UI_C_GetSettingTabs");
static_assert(sizeof(BPI_SMM_UI_C_GetSettingTabs) == 0x000050, "Wrong size on BPI_SMM_UI_C_GetSettingTabs");
static_assert(offsetof(BPI_SMM_UI_C_GetSettingTabs, SettingTabs) == 0x000000, "Member 'BPI_SMM_UI_C_GetSettingTabs::SettingTabs' has a wrong offset!");

// Function BPI_SMM_UI.BPI_SMM_UI_C.GetTabs
// 0x0050 (0x0050 - 0x0000)
struct BPI_SMM_UI_C_GetTabs final
{
public:
	TMap<class FName, class UUserWidget*>         Tabs;                                              // 0x0000(0x0050)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(BPI_SMM_UI_C_GetTabs) == 0x000008, "Wrong alignment on BPI_SMM_UI_C_GetTabs");
static_assert(sizeof(BPI_SMM_UI_C_GetTabs) == 0x000050, "Wrong size on BPI_SMM_UI_C_GetTabs");
static_assert(offsetof(BPI_SMM_UI_C_GetTabs, Tabs) == 0x000000, "Member 'BPI_SMM_UI_C_GetTabs::Tabs' has a wrong offset!");

// Function BPI_SMM_UI.BPI_SMM_UI_C.RegisterConfigPage
// 0x0010 (0x0010 - 0x0000)
struct BPI_SMM_UI_C_RegisterConfigPage final
{
public:
	TScriptInterface<class IBPI_SMM_Mod_C>        SMM_Mod;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_SMM_UI_C_RegisterConfigPage) == 0x000008, "Wrong alignment on BPI_SMM_UI_C_RegisterConfigPage");
static_assert(sizeof(BPI_SMM_UI_C_RegisterConfigPage) == 0x000010, "Wrong size on BPI_SMM_UI_C_RegisterConfigPage");
static_assert(offsetof(BPI_SMM_UI_C_RegisterConfigPage, SMM_Mod) == 0x000000, "Member 'BPI_SMM_UI_C_RegisterConfigPage::SMM_Mod' has a wrong offset!");

// Function BPI_SMM_UI.BPI_SMM_UI_C.RegisterPage
// 0x0010 (0x0010 - 0x0000)
struct BPI_SMM_UI_C_RegisterPage final
{
public:
	TScriptInterface<class IBPI_SMM_Mod_C>        SMM_Mod;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_SMM_UI_C_RegisterPage) == 0x000008, "Wrong alignment on BPI_SMM_UI_C_RegisterPage");
static_assert(sizeof(BPI_SMM_UI_C_RegisterPage) == 0x000010, "Wrong size on BPI_SMM_UI_C_RegisterPage");
static_assert(offsetof(BPI_SMM_UI_C_RegisterPage, SMM_Mod) == 0x000000, "Member 'BPI_SMM_UI_C_RegisterPage::SMM_Mod' has a wrong offset!");

// Function BPI_SMM_UI.BPI_SMM_UI_C.SelectConfigTab
// 0x0010 (0x0010 - 0x0000)
struct BPI_SMM_UI_C_SelectConfigTab final
{
public:
	class UUserWidget*                            ConfigTab;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            SettingTab;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_SMM_UI_C_SelectConfigTab) == 0x000008, "Wrong alignment on BPI_SMM_UI_C_SelectConfigTab");
static_assert(sizeof(BPI_SMM_UI_C_SelectConfigTab) == 0x000010, "Wrong size on BPI_SMM_UI_C_SelectConfigTab");
static_assert(offsetof(BPI_SMM_UI_C_SelectConfigTab, ConfigTab) == 0x000000, "Member 'BPI_SMM_UI_C_SelectConfigTab::ConfigTab' has a wrong offset!");
static_assert(offsetof(BPI_SMM_UI_C_SelectConfigTab, SettingTab) == 0x000008, "Member 'BPI_SMM_UI_C_SelectConfigTab::SettingTab' has a wrong offset!");

// Function BPI_SMM_UI.BPI_SMM_UI_C.SelectConfigTabByKey
// 0x0010 (0x0010 - 0x0000)
struct BPI_SMM_UI_C_SelectConfigTabByKey final
{
public:
	class FName                                   TabKey;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            SettingTab;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_SMM_UI_C_SelectConfigTabByKey) == 0x000008, "Wrong alignment on BPI_SMM_UI_C_SelectConfigTabByKey");
static_assert(sizeof(BPI_SMM_UI_C_SelectConfigTabByKey) == 0x000010, "Wrong size on BPI_SMM_UI_C_SelectConfigTabByKey");
static_assert(offsetof(BPI_SMM_UI_C_SelectConfigTabByKey, TabKey) == 0x000000, "Member 'BPI_SMM_UI_C_SelectConfigTabByKey::TabKey' has a wrong offset!");
static_assert(offsetof(BPI_SMM_UI_C_SelectConfigTabByKey, SettingTab) == 0x000008, "Member 'BPI_SMM_UI_C_SelectConfigTabByKey::SettingTab' has a wrong offset!");

// Function BPI_SMM_UI.BPI_SMM_UI_C.SelectSettingTab
// 0x0008 (0x0008 - 0x0000)
struct BPI_SMM_UI_C_SelectSettingTab final
{
public:
	class UUserWidget*                            SettingTab;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_SMM_UI_C_SelectSettingTab) == 0x000008, "Wrong alignment on BPI_SMM_UI_C_SelectSettingTab");
static_assert(sizeof(BPI_SMM_UI_C_SelectSettingTab) == 0x000008, "Wrong size on BPI_SMM_UI_C_SelectSettingTab");
static_assert(offsetof(BPI_SMM_UI_C_SelectSettingTab, SettingTab) == 0x000000, "Member 'BPI_SMM_UI_C_SelectSettingTab::SettingTab' has a wrong offset!");

// Function BPI_SMM_UI.BPI_SMM_UI_C.SelectSettingTabByKey
// 0x0008 (0x0008 - 0x0000)
struct BPI_SMM_UI_C_SelectSettingTabByKey final
{
public:
	class FName                                   TabKey;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_SMM_UI_C_SelectSettingTabByKey) == 0x000004, "Wrong alignment on BPI_SMM_UI_C_SelectSettingTabByKey");
static_assert(sizeof(BPI_SMM_UI_C_SelectSettingTabByKey) == 0x000008, "Wrong size on BPI_SMM_UI_C_SelectSettingTabByKey");
static_assert(offsetof(BPI_SMM_UI_C_SelectSettingTabByKey, TabKey) == 0x000000, "Member 'BPI_SMM_UI_C_SelectSettingTabByKey::TabKey' has a wrong offset!");

// Function BPI_SMM_UI.BPI_SMM_UI_C.SelectTab
// 0x0008 (0x0008 - 0x0000)
struct BPI_SMM_UI_C_SelectTab final
{
public:
	class UUserWidget*                            Tab;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_SMM_UI_C_SelectTab) == 0x000008, "Wrong alignment on BPI_SMM_UI_C_SelectTab");
static_assert(sizeof(BPI_SMM_UI_C_SelectTab) == 0x000008, "Wrong size on BPI_SMM_UI_C_SelectTab");
static_assert(offsetof(BPI_SMM_UI_C_SelectTab, Tab) == 0x000000, "Member 'BPI_SMM_UI_C_SelectTab::Tab' has a wrong offset!");

// Function BPI_SMM_UI.BPI_SMM_UI_C.SelectTabByKey
// 0x0008 (0x0008 - 0x0000)
struct BPI_SMM_UI_C_SelectTabByKey final
{
public:
	class FName                                   TabKey;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_SMM_UI_C_SelectTabByKey) == 0x000004, "Wrong alignment on BPI_SMM_UI_C_SelectTabByKey");
static_assert(sizeof(BPI_SMM_UI_C_SelectTabByKey) == 0x000008, "Wrong size on BPI_SMM_UI_C_SelectTabByKey");
static_assert(offsetof(BPI_SMM_UI_C_SelectTabByKey, TabKey) == 0x000000, "Member 'BPI_SMM_UI_C_SelectTabByKey::TabKey' has a wrong offset!");

}

