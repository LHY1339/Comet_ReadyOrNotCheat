#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_SMM_Mod

#include "Basic.hpp"

#include "BPI_SMM_Mod_classes.hpp"
#include "BPI_SMM_Mod_parameters.hpp"


namespace SDK
{

// Function BPI_SMM_Mod.BPI_SMM_Mod_C.LogUpdated
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_SMM_Mod_C::LogUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_Mod_C", "LogUpdated");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_SMM_Mod.BPI_SMM_Mod_C.ModMenuPostInit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TScriptInterface<class IBPI_SMM_UI_C>SMM_UI                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_SMM_Mod_C::ModMenuPostInit(const TScriptInterface<class IBPI_SMM_UI_C> SMM_UI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_Mod_C", "ModMenuPostInit");

	Params::BPI_SMM_Mod_C_ModMenuPostInit Parms{};

	Parms.SMM_UI = SMM_UI;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_SMM_Mod.BPI_SMM_Mod_C.OnRetrievedSG
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ModName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    SlotName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class USMM_SaveGame_Base_C*             SMM_SaveGame_Config                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_SMM_Mod_C::OnRetrievedSG(const class FString& ModName, const class FString& SlotName, class USMM_SaveGame_Base_C* SMM_SaveGame_Config)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_Mod_C", "OnRetrievedSG");

	Params::BPI_SMM_Mod_C_OnRetrievedSG Parms{};

	Parms.ModName = std::move(ModName);
	Parms.SlotName = std::move(SlotName);
	Parms.SMM_SaveGame_Config = SMM_SaveGame_Config;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_SMM_Mod.BPI_SMM_Mod_C.OnSavedSG
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ModName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    SlotName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class USMM_SaveGame_Base_C*             SMM_SaveGame                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_SMM_Mod_C::OnSavedSG(const class FString& ModName, const class FString& SlotName, class USMM_SaveGame_Base_C* SMM_SaveGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_Mod_C", "OnSavedSG");

	Params::BPI_SMM_Mod_C_OnSavedSG Parms{};

	Parms.ModName = std::move(ModName);
	Parms.SlotName = std::move(SlotName);
	Parms.SMM_SaveGame = SMM_SaveGame;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_SMM_Mod.BPI_SMM_Mod_C.PageClosed
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_SMM_Mod_C::PageClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_Mod_C", "PageClosed");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_SMM_Mod.BPI_SMM_Mod_C.PageOpened
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_SMM_Mod_C::PageOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_Mod_C", "PageOpened");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_SMM_Mod.BPI_SMM_Mod_C.SendTabButton
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UButton*                          Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void IBPI_SMM_Mod_C::SendTabButton(class UButton* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_Mod_C", "SendTabButton");

	Params::BPI_SMM_Mod_C_SendTabButton Parms{};

	Parms.Button = Button;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_SMM_Mod.BPI_SMM_Mod_C.SetNavigationFocus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget**                         Widget                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void IBPI_SMM_Mod_C::SetNavigationFocus(class UWidget** Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_Mod_C", "SetNavigationFocus");

	Params::BPI_SMM_Mod_C_SetNavigationFocus Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (Widget != nullptr)
		*Widget = Parms.Widget;
}

}

