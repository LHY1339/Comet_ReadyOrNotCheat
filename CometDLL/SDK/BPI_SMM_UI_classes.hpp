#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_SMM_UI

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPI_SMM_UI.BPI_SMM_UI_C
// 0x0000 (0x0000 - 0x0000)
class IBPI_SMM_UI_C final
{
public:
	void AsyncRetrieveSG(TScriptInterface<class IBPI_SMM_Mod_C> SMM_Mod, const class FString& ModName, const class FString& SaveSlot, TSoftClassPtr<class UClass> Class_0);
	void AsyncSaveSG(TScriptInterface<class IBPI_SMM_Mod_C> SMM_Mod, class USMM_SaveGame_Base_C* SMM_SaveGame);
	void AsyncSaveSG_by_Name(TScriptInterface<class IBPI_SMM_Mod_C> SMM_Mod, const class FString& ModName, const class FString& SlotName);
	void BlockingRetrieveSG(const class FString& ModName, const class FString& SaveSlot, TSoftClassPtr<class UClass> Class_0, class USMM_SaveGame_Base_C** SMM_SaveGame);
	void BlockingSaveSG(const class FString& ModName, const class FString& SaveSlot, class USMM_SaveGame_Config_SMM_C* SMM_SaveGame);
	void Close_UI();
	void DoLog(const class FString& Input, const class FString& Source);
	void DoNotification(double Duration, const class FText& Title, const class FText& Body);
	void Get_SMM_Data_Assets(TArray<class UPDA_SMM_MenuData_C*>* DataAssets);
	void GetConfigTabs(class UUserWidget* SettingTab, TMap<class FName, class UUserWidget*>* ConfigTabs);
	void GetLastLogMessage(class FString* LastLogMessage);
	void GetLogHistory(TArray<class FString>* LogHistory);
	void GetSelectedConfigTab(class UUserWidget* SettingTab, class UUserWidget** SelectedTab, class FName* Key);
	void GetSelectedSettingTab(class UUserWidget** SelectedTab, class FName* Key);
	void GetSelectedTab(class UUserWidget** SelectedTab, class FName* Key);
	void GetSettingTabs(TMap<class FName, class UUserWidget*>* SettingTabs);
	void GetTabs(TMap<class FName, class UUserWidget*>* Tabs);
	void InvalidateCache();
	void Open_UI();
	void RegisterConfigPage(TScriptInterface<class IBPI_SMM_Mod_C> SMM_Mod);
	void RegisterPage(TScriptInterface<class IBPI_SMM_Mod_C> SMM_Mod);
	void SelectConfigTab(class UUserWidget* ConfigTab, class UUserWidget* SettingTab);
	void SelectConfigTabByKey(class FName TabKey, class UUserWidget* SettingTab);
	void SelectSettingTab(class UUserWidget* SettingTab);
	void SelectSettingTabByKey(class FName TabKey);
	void SelectTab(class UUserWidget* Tab);
	void SelectTabByKey(class FName TabKey);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPI_SMM_UI_C">();
	}
	static class IBPI_SMM_UI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBPI_SMM_UI_C>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
static_assert(alignof(IBPI_SMM_UI_C) == 0x000001, "Wrong alignment on IBPI_SMM_UI_C");
static_assert(sizeof(IBPI_SMM_UI_C) == 0x000001, "Wrong size on IBPI_SMM_UI_C");

}

