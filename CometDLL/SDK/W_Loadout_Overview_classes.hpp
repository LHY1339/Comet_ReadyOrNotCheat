#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Loadout_Overview

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "Engine_structs.hpp"
#include "ST_DropdownOptions_structs.hpp"
#include "W_SubMenu_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Loadout_Overview.W_Loadout_Overview_C
// 0x1148 (0x1590 - 0x0448)
class UW_Loadout_Overview_C final : public UW_SubMenu_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_W_Loadout_Overview_C;               // 0x0448(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       animFadeArmorQuartermaster;                        // 0x0450(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       animFadeQuartermaster;                             // 0x0458(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       animFadeOverview;                                  // 0x0460(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_Header_C*                            ArmorHeader;                                       // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       AttachingWeaponSlot;                               // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       BodyArmor;                                         // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       BodyArmorMaterial;                                 // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_CleanWeapon;                                   // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_ClearPresetWarning;                            // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_ModifiedPreset;                                // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_Quartermaster_Primary;                         // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_Quartermaster_Sidearm;                         // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            DeployablesHeader;                                 // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class Uw_Dropdown_C*                          drop_ArmorCoverage;                                // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class Uw_Dropdown_C*                          drop_LoadoutPresets;                               // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       Grenades;                                          // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_PresetModified;                                 // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       Headwear;                                          // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            HeadwearHeader;                                    // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_45;                                          // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       LongTactical;                                      // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SubMenu_C*                           OverviewMenu;                                      // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       Primary;                                           // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_TabListWidget_C*                     QuartermasterTabList;                              // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_Overview;                                // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       Sidearm;                                           // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       Tactical;                                          // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_AttachmentList;                                 // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Deployables;                                    // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Gear;                                           // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_LoadoutOverview;                                // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Overview;                                       // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_WeaponQuartermaster;                            // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Weapons;                                        // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Loadout_MunitionSlots_C*             W_Loadout_MunitionSlots;                           // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class Uw_Dropdown_C*                          WeaponPresets;                                     // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SubMenu_C*                           WeaponQuartermasterMenu;                           // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            WeaponsHeader;                                     // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActivatableWidgetSwitcher*       WidgetSwitcher;                                    // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSavedLoadout                          ActiveLoadout;                                     // 0x0588(0x02E8)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UWidget*>                        Overview_Widgets;                                  // 0x0870(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMulticastInlineDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> OnOverviewItemHovered;    // 0x0880(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> OnOverviewItemUnhovered;  // 0x0890(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> OnOverviewItemClicked;    // 0x08A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> OnOverviewItemDoubleClicked; // 0x08B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnCleanWeaponClicked;                              // 0x08C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UW_LoadoutSlot_C*                       CurrentSlot;                                       // 0x08D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMap<EItemCategory, class UClass*>            CurrentItems;                                      // 0x08D8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         AvailableMunitionSlots;                            // 0x0928(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalMunitionSlots;                                // 0x092C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PrimaryAmmoSlots;                                  // 0x0930(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SidearmAmmoSlots;                                  // 0x0934(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GrenadeAmmoSlots;                                  // 0x0938(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TacticalAmmoSlots;                                 // 0x093C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(bool IsPrimary, class UW_LoadoutSlot_C* NewLoadoutSlot)> OnQuartermasterWeaponSwapped; // 0x0940(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          QuartermasterOpen;                                 // 0x0950(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_951[0x7];                                      // 0x0951(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UW_LoadoutSlot_Attachment_C* TriggeringAttachment)> OnAttachmentSlotClicked; // 0x0958(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UW_LoadoutSlot_Attachment_C* TriggeringAttachment)> OnAttachmentSlotHovered; // 0x0968(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsCustomizingPrimary;                              // 0x0978(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_979[0x7];                                      // 0x0979(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 PrimaryAttachmentData;                             // 0x0980(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, struct FWeaponPreset>     CurrentWeaponPresets;                              // 0x0988(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 CurrentlySelectedPreset;                           // 0x09D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	EWeaponAttachmentType                         AutoSelectAttachmentSlot;                          // 0x09E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E9[0x7];                                      // 0x09E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UW_LoadoutSlot_Attachment_C* TriggeringAttachment)> OnAttachmentSlotUnhovered; // 0x09F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnQuartermasterOpened;                             // 0x0A00(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        QuartermasterRevealOffset;                         // 0x0A10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_C*                           LoadoutWidget;                                     // 0x0A18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        RevealDelay;                                       // 0x0A20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bQuarterMasterListHidden;                          // 0x0A28(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A29[0x7];                                      // 0x0A29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        OverviewRevealOffset;                              // 0x0A30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnQuartermasterClosed;                             // 0x0A38(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnOverviewWidgetsHidden;                           // 0x0A48(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UClass*                                 QuartermasterItem;                                 // 0x0A58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          OverviewOpen;                                      // 0x0A60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ArmorEditOpen;                                     // 0x0A61(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OpeningOverview;                                   // 0x0A62(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OpeningArmorEdit;                                  // 0x0A63(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OpeningQuartermaster;                              // 0x0A64(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A65[0x3];                                      // 0x0A65(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnOverviewOpen;                                    // 0x0A68(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnArmorEditorOpen;                                 // 0x0A78(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnArmorEditorClosed;                               // 0x0A88(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMap<class FString, EArmourCoverage>          ArmorCoverageOptions;                              // 0x0A98(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          RemotePlayer;                                      // 0x0AE8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE9[0x7];                                      // 0x0AE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TEMP_ForceLoadTableHack;                           // 0x0AF0(0x0018)(Edit, BlueprintVisible)
	TMap<EArmourCoverage, class FText>            ArmorCoverageText;                                 // 0x0B08(0x0050)(Edit, BlueprintVisible)
	uint8                                         Pad_B58[0x8];                                      // 0x0B58(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemLookupTable                       QuartermasterLookupTable;                          // 0x0B60(0x06D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          PresetOverview;                                    // 0x1230(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_1231[0x7];                                     // 0x1231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FText>              LoadoutPresetOptions;                              // 0x1238(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSavedLoadout                          PreviewLoadout;                                    // 0x1288(0x02E8)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FST_DropdownOptions                    drop_LoadoutPreset_DeleteFooter;                   // 0x1570(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ApplyWeaponPreset(class UClass* Weapon, bool IsPrimary, const struct FWeaponPreset& WeaponPreset);
	void AttachmentSlotAutoSelect(EWeaponAttachmentType AutoSelectAttachmentSlot_0);
	void AttachmentSlotClicked(class UW_LoadoutSlot_Attachment_C* TriggeringAttachmentSlot);
	void AttachmentSlotHovered(class UW_LoadoutSlot_Attachment_C* TriggeringAttachmentSlot);
	void AttachmentSlotUnhovered(class UW_LoadoutSlot_Attachment_C* TriggeringAttachmentSlot);
	void BackPage(bool* Handled);
	void BndEvt__W_Loadout_Overview_btn_CleanWeapon_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_Loadout_Overview_btn_ClearPresetWarning_K2Node_ComponentBoundEvent_10_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_Loadout_Overview_btn_ModifiedPreset_K2Node_ComponentBoundEvent_9_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_Loadout_Overview_btn_Quartermaster_Primary_K2Node_ComponentBoundEvent_5_Selected__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_Loadout_Overview_btn_Quartermaster_Sidearm_K2Node_ComponentBoundEvent_11_Selected__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_Loadout_Overview_Dropdown_ArmorCoverage_K2Node_ComponentBoundEvent_4_OnOptionSelected__DelegateSignature(const class FString& OptionID);
	void BndEvt__W_Loadout_Overview_LoadoutPresets_K2Node_ComponentBoundEvent_6_OnOptionHovered__DelegateSignature(const class FString& OptionID);
	void BndEvt__W_Loadout_Overview_LoadoutPresets_K2Node_ComponentBoundEvent_7_OnOptionSelected__DelegateSignature(const class FString& OptionID);
	void BndEvt__W_Loadout_Overview_LoadoutPresets_K2Node_ComponentBoundEvent_8_OnFooterOptionSelected__DelegateSignature(const class FString& OptionID);
	void BndEvt__W_Loadout_Overview_WeaponPresets_K2Node_ComponentBoundEvent_3_OnOptionSelected__DelegateSignature(const class FString& OptionID);
	void ChangePage(class FName PageName);
	void ClearQuartermasterList();
	void CloseArmorQuartermaster();
	void CloseQuartermasterList();
	void Construct();
	void CreateQuartermasterAttachment(EWeaponAttachmentType AttachmentType, double RevealDelay_0);
	void DeselectCurrentWeaponPreset();
	void ExecuteUbergraph_W_Loadout_Overview(int32 EntryPoint);
	void FadeOverviewToArmorEditor();
	void FadeOverviewToQuartermaster();
	void Finished_1C1140E544F6D72CBF82B4B0A003F591();
	void Finished_340D92A941109D40A716A09F93EFD3B1();
	void Finished_42BB49A3444AA78D7A547F8D1ED2AB88();
	void Finished_607C2935489AA67033764DA335DA7382();
	void GetAttachmentSlotByType(EWeaponAttachmentType AttachmentSlot, class UW_LoadoutSlot_Attachment_C** AttachmentSlotRef);
	void GetLoadoutInfo(struct FSavedLoadout* Active_Loadout);
	void HeaderSubpageNavigation(class FName OptionNameID);
	void Hide(double Delay, bool Collapse);
	void HideOverviewWidgets(double AnimationOffset);
	void InitializeArmorSettings(class UClass* ItemData);
	void InitializeLoadoutPresets();
	void InitializeOverviewList(bool RemotePlayer_0);
	void InitializeOverviewPreview(const struct FSavedLoadout& PreviewLoadout_0);
	void InitializeWeaponPresetOptions(const TSubclassOf<class ABaseItem>& Weapon);
	void NewArmorEquipped();
	void NewArmourMaterialEquipped();
	void OpenArmorEditor();
	void OpenQuartermaster(class UClass* ItemToModify, const struct FItemLookupTable& ItemLookupTable);
	void OpenWeaponQuartermaster(class UClass* ItemToModify, const struct FItemLookupTable& ItemLookupTable);
	void OverviewItemClicked(class UW_LoadoutSlot_C* TriggeringSlot);
	void OverviewItemDoubleClick(class UW_LoadoutSlot_C* TriggeringSlot);
	void OverviewItemHover(class UW_LoadoutSlot_C* TriggeringSlot);
	void OverviewItemUnhover(class UW_LoadoutSlot_C* TriggeringSlot);
	void PreConstruct(bool IsDesignTime);
	void RefreshQuartermasterList(class UClass* ItemToModify, const struct FItemLookupTable& ItemLookupTable);
	void Reveal(double Delay);
	void SelectGrenade(class UClass* ItemData);
	void SelectTactical(class UClass* ItemData);
	void SelectWeaponPreset(const class FString& PresetID);
	void SetActiveQuatermasterWeaponButton(bool IsPrimary);
	void SetInputMode(bool IsGamepad);
	void SetLoadoutWidget(class UW_Loadout_C* LoadoutWidget_0);
	void SetupBindings();
	void ShowPresetModified(bool Modified);
	void SwapQuartermasterWeapon(bool IsPrimary);
	void UpdateActiveLoadout(const struct FSavedLoadout& ActiveLoadout_0);
	void UpdateCurrentItemMap(const TMap<EItemCategory, class UClass*>& ItemCategory);
	void UpdateCurrentSlot(class UW_LoadoutSlot_C* CurrentSlot_0);

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Loadout_Overview_C">();
	}
	static class UW_Loadout_Overview_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Loadout_Overview_C>();
	}
};
static_assert(alignof(UW_Loadout_Overview_C) == 0x000010, "Wrong alignment on UW_Loadout_Overview_C");
static_assert(sizeof(UW_Loadout_Overview_C) == 0x001590, "Wrong size on UW_Loadout_Overview_C");
static_assert(offsetof(UW_Loadout_Overview_C, UberGraphFrame_W_Loadout_Overview_C) == 0x000448, "Member 'UW_Loadout_Overview_C::UberGraphFrame_W_Loadout_Overview_C' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, animFadeArmorQuartermaster) == 0x000450, "Member 'UW_Loadout_Overview_C::animFadeArmorQuartermaster' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, animFadeQuartermaster) == 0x000458, "Member 'UW_Loadout_Overview_C::animFadeQuartermaster' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, animFadeOverview) == 0x000460, "Member 'UW_Loadout_Overview_C::animFadeOverview' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, ArmorHeader) == 0x000468, "Member 'UW_Loadout_Overview_C::ArmorHeader' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, AttachingWeaponSlot) == 0x000470, "Member 'UW_Loadout_Overview_C::AttachingWeaponSlot' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, BodyArmor) == 0x000478, "Member 'UW_Loadout_Overview_C::BodyArmor' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, BodyArmorMaterial) == 0x000480, "Member 'UW_Loadout_Overview_C::BodyArmorMaterial' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, btn_CleanWeapon) == 0x000488, "Member 'UW_Loadout_Overview_C::btn_CleanWeapon' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, btn_ClearPresetWarning) == 0x000490, "Member 'UW_Loadout_Overview_C::btn_ClearPresetWarning' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, btn_ModifiedPreset) == 0x000498, "Member 'UW_Loadout_Overview_C::btn_ModifiedPreset' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, btn_Quartermaster_Primary) == 0x0004A0, "Member 'UW_Loadout_Overview_C::btn_Quartermaster_Primary' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, btn_Quartermaster_Sidearm) == 0x0004A8, "Member 'UW_Loadout_Overview_C::btn_Quartermaster_Sidearm' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, DeployablesHeader) == 0x0004B0, "Member 'UW_Loadout_Overview_C::DeployablesHeader' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, drop_ArmorCoverage) == 0x0004B8, "Member 'UW_Loadout_Overview_C::drop_ArmorCoverage' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, drop_LoadoutPresets) == 0x0004C0, "Member 'UW_Loadout_Overview_C::drop_LoadoutPresets' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, Grenades) == 0x0004C8, "Member 'UW_Loadout_Overview_C::Grenades' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, HB_PresetModified) == 0x0004D0, "Member 'UW_Loadout_Overview_C::HB_PresetModified' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, Headwear) == 0x0004D8, "Member 'UW_Loadout_Overview_C::Headwear' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, HeadwearHeader) == 0x0004E0, "Member 'UW_Loadout_Overview_C::HeadwearHeader' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, Image_45) == 0x0004E8, "Member 'UW_Loadout_Overview_C::Image_45' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, LongTactical) == 0x0004F0, "Member 'UW_Loadout_Overview_C::LongTactical' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, OverviewMenu) == 0x0004F8, "Member 'UW_Loadout_Overview_C::OverviewMenu' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, Primary) == 0x000500, "Member 'UW_Loadout_Overview_C::Primary' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, QuartermasterTabList) == 0x000508, "Member 'UW_Loadout_Overview_C::QuartermasterTabList' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, ScrollBox_Overview) == 0x000510, "Member 'UW_Loadout_Overview_C::ScrollBox_Overview' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, Sidearm) == 0x000518, "Member 'UW_Loadout_Overview_C::Sidearm' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, Tactical) == 0x000520, "Member 'UW_Loadout_Overview_C::Tactical' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, VB_AttachmentList) == 0x000528, "Member 'UW_Loadout_Overview_C::VB_AttachmentList' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, VB_Deployables) == 0x000530, "Member 'UW_Loadout_Overview_C::VB_Deployables' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, VB_Gear) == 0x000538, "Member 'UW_Loadout_Overview_C::VB_Gear' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, VB_LoadoutOverview) == 0x000540, "Member 'UW_Loadout_Overview_C::VB_LoadoutOverview' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, VB_Overview) == 0x000548, "Member 'UW_Loadout_Overview_C::VB_Overview' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, VB_WeaponQuartermaster) == 0x000550, "Member 'UW_Loadout_Overview_C::VB_WeaponQuartermaster' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, VB_Weapons) == 0x000558, "Member 'UW_Loadout_Overview_C::VB_Weapons' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, W_Loadout_MunitionSlots) == 0x000560, "Member 'UW_Loadout_Overview_C::W_Loadout_MunitionSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, WeaponPresets) == 0x000568, "Member 'UW_Loadout_Overview_C::WeaponPresets' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, WeaponQuartermasterMenu) == 0x000570, "Member 'UW_Loadout_Overview_C::WeaponQuartermasterMenu' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, WeaponsHeader) == 0x000578, "Member 'UW_Loadout_Overview_C::WeaponsHeader' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, WidgetSwitcher) == 0x000580, "Member 'UW_Loadout_Overview_C::WidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, ActiveLoadout) == 0x000588, "Member 'UW_Loadout_Overview_C::ActiveLoadout' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, Overview_Widgets) == 0x000870, "Member 'UW_Loadout_Overview_C::Overview_Widgets' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, OnOverviewItemHovered) == 0x000880, "Member 'UW_Loadout_Overview_C::OnOverviewItemHovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, OnOverviewItemUnhovered) == 0x000890, "Member 'UW_Loadout_Overview_C::OnOverviewItemUnhovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, OnOverviewItemClicked) == 0x0008A0, "Member 'UW_Loadout_Overview_C::OnOverviewItemClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, OnOverviewItemDoubleClicked) == 0x0008B0, "Member 'UW_Loadout_Overview_C::OnOverviewItemDoubleClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, OnCleanWeaponClicked) == 0x0008C0, "Member 'UW_Loadout_Overview_C::OnCleanWeaponClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, CurrentSlot) == 0x0008D0, "Member 'UW_Loadout_Overview_C::CurrentSlot' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, CurrentItems) == 0x0008D8, "Member 'UW_Loadout_Overview_C::CurrentItems' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, AvailableMunitionSlots) == 0x000928, "Member 'UW_Loadout_Overview_C::AvailableMunitionSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, TotalMunitionSlots) == 0x00092C, "Member 'UW_Loadout_Overview_C::TotalMunitionSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, PrimaryAmmoSlots) == 0x000930, "Member 'UW_Loadout_Overview_C::PrimaryAmmoSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, SidearmAmmoSlots) == 0x000934, "Member 'UW_Loadout_Overview_C::SidearmAmmoSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, GrenadeAmmoSlots) == 0x000938, "Member 'UW_Loadout_Overview_C::GrenadeAmmoSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, TacticalAmmoSlots) == 0x00093C, "Member 'UW_Loadout_Overview_C::TacticalAmmoSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, OnQuartermasterWeaponSwapped) == 0x000940, "Member 'UW_Loadout_Overview_C::OnQuartermasterWeaponSwapped' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, QuartermasterOpen) == 0x000950, "Member 'UW_Loadout_Overview_C::QuartermasterOpen' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, OnAttachmentSlotClicked) == 0x000958, "Member 'UW_Loadout_Overview_C::OnAttachmentSlotClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, OnAttachmentSlotHovered) == 0x000968, "Member 'UW_Loadout_Overview_C::OnAttachmentSlotHovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, IsCustomizingPrimary) == 0x000978, "Member 'UW_Loadout_Overview_C::IsCustomizingPrimary' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, PrimaryAttachmentData) == 0x000980, "Member 'UW_Loadout_Overview_C::PrimaryAttachmentData' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, CurrentWeaponPresets) == 0x000988, "Member 'UW_Loadout_Overview_C::CurrentWeaponPresets' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, CurrentlySelectedPreset) == 0x0009D8, "Member 'UW_Loadout_Overview_C::CurrentlySelectedPreset' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, AutoSelectAttachmentSlot) == 0x0009E8, "Member 'UW_Loadout_Overview_C::AutoSelectAttachmentSlot' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, OnAttachmentSlotUnhovered) == 0x0009F0, "Member 'UW_Loadout_Overview_C::OnAttachmentSlotUnhovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, OnQuartermasterOpened) == 0x000A00, "Member 'UW_Loadout_Overview_C::OnQuartermasterOpened' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, QuartermasterRevealOffset) == 0x000A10, "Member 'UW_Loadout_Overview_C::QuartermasterRevealOffset' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, LoadoutWidget) == 0x000A18, "Member 'UW_Loadout_Overview_C::LoadoutWidget' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, RevealDelay) == 0x000A20, "Member 'UW_Loadout_Overview_C::RevealDelay' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, bQuarterMasterListHidden) == 0x000A28, "Member 'UW_Loadout_Overview_C::bQuarterMasterListHidden' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, OverviewRevealOffset) == 0x000A30, "Member 'UW_Loadout_Overview_C::OverviewRevealOffset' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, OnQuartermasterClosed) == 0x000A38, "Member 'UW_Loadout_Overview_C::OnQuartermasterClosed' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, OnOverviewWidgetsHidden) == 0x000A48, "Member 'UW_Loadout_Overview_C::OnOverviewWidgetsHidden' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, QuartermasterItem) == 0x000A58, "Member 'UW_Loadout_Overview_C::QuartermasterItem' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, OverviewOpen) == 0x000A60, "Member 'UW_Loadout_Overview_C::OverviewOpen' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, ArmorEditOpen) == 0x000A61, "Member 'UW_Loadout_Overview_C::ArmorEditOpen' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, OpeningOverview) == 0x000A62, "Member 'UW_Loadout_Overview_C::OpeningOverview' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, OpeningArmorEdit) == 0x000A63, "Member 'UW_Loadout_Overview_C::OpeningArmorEdit' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, OpeningQuartermaster) == 0x000A64, "Member 'UW_Loadout_Overview_C::OpeningQuartermaster' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, OnOverviewOpen) == 0x000A68, "Member 'UW_Loadout_Overview_C::OnOverviewOpen' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, OnArmorEditorOpen) == 0x000A78, "Member 'UW_Loadout_Overview_C::OnArmorEditorOpen' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, OnArmorEditorClosed) == 0x000A88, "Member 'UW_Loadout_Overview_C::OnArmorEditorClosed' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, ArmorCoverageOptions) == 0x000A98, "Member 'UW_Loadout_Overview_C::ArmorCoverageOptions' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, RemotePlayer) == 0x000AE8, "Member 'UW_Loadout_Overview_C::RemotePlayer' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, TEMP_ForceLoadTableHack) == 0x000AF0, "Member 'UW_Loadout_Overview_C::TEMP_ForceLoadTableHack' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, ArmorCoverageText) == 0x000B08, "Member 'UW_Loadout_Overview_C::ArmorCoverageText' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, QuartermasterLookupTable) == 0x000B60, "Member 'UW_Loadout_Overview_C::QuartermasterLookupTable' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, PresetOverview) == 0x001230, "Member 'UW_Loadout_Overview_C::PresetOverview' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, LoadoutPresetOptions) == 0x001238, "Member 'UW_Loadout_Overview_C::LoadoutPresetOptions' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, PreviewLoadout) == 0x001288, "Member 'UW_Loadout_Overview_C::PreviewLoadout' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Overview_C, drop_LoadoutPreset_DeleteFooter) == 0x001570, "Member 'UW_Loadout_Overview_C::drop_LoadoutPreset_DeleteFooter' has a wrong offset!");

}

