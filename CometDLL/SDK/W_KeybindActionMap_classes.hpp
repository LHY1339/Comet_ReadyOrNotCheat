#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_KeybindActionMap

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Slate_structs.hpp"
#include "InputCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_KeybindActionMap.W_KeybindActionMap_C
// 0x0128 (0x03E8 - 0x02C0)
class UW_KeybindActionMap_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UEditableText*                          EditableName;                                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                FocusOnButton;                                     // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInputKeySelector*                      KeyboardInput;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         KeyBoardKeybindImages;                             // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                ResetButton;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInputKeySelector*                      XboxInput;                                         // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         XboxKeybindImages;                                 // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FName                                   KeybindName;                                       // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<class FString>                         Alphabet;                                          // 0x0308(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FInputChord                            DefaultKeyboardInputAction;                        // 0x0318(0x0020)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	struct FInputChord                            DefaultXboxInputAction;                            // 0x0338(0x0020)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   NiceName;                                          // 0x0358(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UW_Main_C*                              W_Main;                                            // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TMap<struct FKey, class UTexture*>            KeyToTextureMap;                                   // 0x0378(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                              XboxPosition;                                      // 0x03C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              KeyboardPosition;                                  // 0x03D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Apply_All_Images();
	void Apply_Binds();
	void BndEvt__W_Keybind_KeyboardInput_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature(const struct FInputChord& SelectedKey);
	void BndEvt__W_Keybind_XboxInput_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature(const struct FInputChord& SelectedKey);
	void BndEvt__W_KeybindActionMap_ResetButton_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature();
	void Construct();
	void CreateKeyBoardImages(const TArray<class UTexture*>& Images);
	void CreateXboxImages(const TArray<class UTexture*>& Images);
	void ExecuteUbergraph_W_KeybindActionMap(int32 EntryPoint);

	void Get_Images_from_Mappings(const struct FInputChord& Key, TArray<class UTexture*>* Images) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_KeybindActionMap_C">();
	}
	static class UW_KeybindActionMap_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_KeybindActionMap_C>();
	}
};
static_assert(alignof(UW_KeybindActionMap_C) == 0x000008, "Wrong alignment on UW_KeybindActionMap_C");
static_assert(sizeof(UW_KeybindActionMap_C) == 0x0003E8, "Wrong size on UW_KeybindActionMap_C");
static_assert(offsetof(UW_KeybindActionMap_C, UberGraphFrame) == 0x0002C0, "Member 'UW_KeybindActionMap_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_KeybindActionMap_C, EditableName) == 0x0002C8, "Member 'UW_KeybindActionMap_C::EditableName' has a wrong offset!");
static_assert(offsetof(UW_KeybindActionMap_C, FocusOnButton) == 0x0002D0, "Member 'UW_KeybindActionMap_C::FocusOnButton' has a wrong offset!");
static_assert(offsetof(UW_KeybindActionMap_C, KeyboardInput) == 0x0002D8, "Member 'UW_KeybindActionMap_C::KeyboardInput' has a wrong offset!");
static_assert(offsetof(UW_KeybindActionMap_C, KeyBoardKeybindImages) == 0x0002E0, "Member 'UW_KeybindActionMap_C::KeyBoardKeybindImages' has a wrong offset!");
static_assert(offsetof(UW_KeybindActionMap_C, ResetButton) == 0x0002E8, "Member 'UW_KeybindActionMap_C::ResetButton' has a wrong offset!");
static_assert(offsetof(UW_KeybindActionMap_C, XboxInput) == 0x0002F0, "Member 'UW_KeybindActionMap_C::XboxInput' has a wrong offset!");
static_assert(offsetof(UW_KeybindActionMap_C, XboxKeybindImages) == 0x0002F8, "Member 'UW_KeybindActionMap_C::XboxKeybindImages' has a wrong offset!");
static_assert(offsetof(UW_KeybindActionMap_C, KeybindName) == 0x000300, "Member 'UW_KeybindActionMap_C::KeybindName' has a wrong offset!");
static_assert(offsetof(UW_KeybindActionMap_C, Alphabet) == 0x000308, "Member 'UW_KeybindActionMap_C::Alphabet' has a wrong offset!");
static_assert(offsetof(UW_KeybindActionMap_C, DefaultKeyboardInputAction) == 0x000318, "Member 'UW_KeybindActionMap_C::DefaultKeyboardInputAction' has a wrong offset!");
static_assert(offsetof(UW_KeybindActionMap_C, DefaultXboxInputAction) == 0x000338, "Member 'UW_KeybindActionMap_C::DefaultXboxInputAction' has a wrong offset!");
static_assert(offsetof(UW_KeybindActionMap_C, NiceName) == 0x000358, "Member 'UW_KeybindActionMap_C::NiceName' has a wrong offset!");
static_assert(offsetof(UW_KeybindActionMap_C, W_Main) == 0x000370, "Member 'UW_KeybindActionMap_C::W_Main' has a wrong offset!");
static_assert(offsetof(UW_KeybindActionMap_C, KeyToTextureMap) == 0x000378, "Member 'UW_KeybindActionMap_C::KeyToTextureMap' has a wrong offset!");
static_assert(offsetof(UW_KeybindActionMap_C, XboxPosition) == 0x0003C8, "Member 'UW_KeybindActionMap_C::XboxPosition' has a wrong offset!");
static_assert(offsetof(UW_KeybindActionMap_C, KeyboardPosition) == 0x0003D8, "Member 'UW_KeybindActionMap_C::KeyboardPosition' has a wrong offset!");

}

