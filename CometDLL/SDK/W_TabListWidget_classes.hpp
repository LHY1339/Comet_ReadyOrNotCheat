#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_TabListWidget

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "Engine_structs.hpp"
#include "ST_TabListEntry_structs.hpp"
#include "UMG_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_TabListWidget.W_TabListWidget_C
// 0x0088 (0x04F8 - 0x0470)
class UW_TabListWidget_C final : public UCommonTabListWidgetImplementation
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0470(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USizeBox*                               NavLeftContainer;                                  // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               NavRightContainer;                                 // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Tabs;                                              // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SubMenu_C*                           W_SubMenu;                                         // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class FName>                           Entries;                                           // 0x0498(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, struct FST_TabListEntry>    EntryLookup;                                       // 0x04A8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void AddTab(class UW_Button_C* Button);
	void BndEvt__W_TabListWidget_W_SubMenu_K2Node_ComponentBoundEvent_0_OnWidgetActivationChanged__DelegateSignature();
	void BndEvt__W_TabListWidget_W_SubMenu_K2Node_ComponentBoundEvent_1_OnWidgetActivationChanged__DelegateSignature();
	void ClearTabs();
	void Construct();
	void ExecuteUbergraph_W_TabListWidget(int32 EntryPoint);
	void FindIDForButton(class UCommonButtonBase* Button, class FName* ID);
	void HandleTabCreation(class FName TabNameID, class UCommonButtonBase* TabButton);
	void HandleTabRemoval(class FName TabNameID, class UCommonButtonBase* TabButton);
	void IDForButton(class UW_Button_C* Button, class FName* Name_0);
	void InputMethodChanged(ECommonInputType InputType);
	void OnInputMethodChanged(ECommonInputType bNewInputType);
	void Select_Tab(class UW_Button_C* Button);
	void TabSelected(class UCommonButtonBase* Button, bool Selected);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_TabListWidget_C">();
	}
	static class UW_TabListWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_TabListWidget_C>();
	}
};
static_assert(alignof(UW_TabListWidget_C) == 0x000008, "Wrong alignment on UW_TabListWidget_C");
static_assert(sizeof(UW_TabListWidget_C) == 0x0004F8, "Wrong size on UW_TabListWidget_C");
static_assert(offsetof(UW_TabListWidget_C, UberGraphFrame) == 0x000470, "Member 'UW_TabListWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_TabListWidget_C, NavLeftContainer) == 0x000478, "Member 'UW_TabListWidget_C::NavLeftContainer' has a wrong offset!");
static_assert(offsetof(UW_TabListWidget_C, NavRightContainer) == 0x000480, "Member 'UW_TabListWidget_C::NavRightContainer' has a wrong offset!");
static_assert(offsetof(UW_TabListWidget_C, Tabs) == 0x000488, "Member 'UW_TabListWidget_C::Tabs' has a wrong offset!");
static_assert(offsetof(UW_TabListWidget_C, W_SubMenu) == 0x000490, "Member 'UW_TabListWidget_C::W_SubMenu' has a wrong offset!");
static_assert(offsetof(UW_TabListWidget_C, Entries) == 0x000498, "Member 'UW_TabListWidget_C::Entries' has a wrong offset!");
static_assert(offsetof(UW_TabListWidget_C, EntryLookup) == 0x0004A8, "Member 'UW_TabListWidget_C::EntryLookup' has a wrong offset!");

}

