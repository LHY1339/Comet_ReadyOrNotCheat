#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_KeybindActionMap

#include "Basic.hpp"

#include "W_KeybindActionMap_classes.hpp"
#include "W_KeybindActionMap_parameters.hpp"


namespace SDK
{

// Function W_KeybindActionMap.W_KeybindActionMap_C.Apply All Images
// (BlueprintCallable, BlueprintEvent)

void UW_KeybindActionMap_C::Apply_All_Images()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeybindActionMap_C", "Apply All Images");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_KeybindActionMap.W_KeybindActionMap_C.Apply Binds
// (BlueprintCallable, BlueprintEvent)

void UW_KeybindActionMap_C::Apply_Binds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeybindActionMap_C", "Apply Binds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_KeybindActionMap.W_KeybindActionMap_C.BndEvt__W_Keybind_KeyboardInput_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature
// (BlueprintEvent)
// Parameters:
// const struct FInputChord&               SelectedKey                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UW_KeybindActionMap_C::BndEvt__W_Keybind_KeyboardInput_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature(const struct FInputChord& SelectedKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeybindActionMap_C", "BndEvt__W_Keybind_KeyboardInput_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature");

	Params::W_KeybindActionMap_C_BndEvt__W_Keybind_KeyboardInput_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature Parms{};

	Parms.SelectedKey = std::move(SelectedKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_KeybindActionMap.W_KeybindActionMap_C.BndEvt__W_Keybind_XboxInput_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature
// (BlueprintEvent)
// Parameters:
// const struct FInputChord&               SelectedKey                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UW_KeybindActionMap_C::BndEvt__W_Keybind_XboxInput_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature(const struct FInputChord& SelectedKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeybindActionMap_C", "BndEvt__W_Keybind_XboxInput_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature");

	Params::W_KeybindActionMap_C_BndEvt__W_Keybind_XboxInput_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature Parms{};

	Parms.SelectedKey = std::move(SelectedKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_KeybindActionMap.W_KeybindActionMap_C.BndEvt__W_KeybindActionMap_ResetButton_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UW_KeybindActionMap_C::BndEvt__W_KeybindActionMap_ResetButton_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeybindActionMap_C", "BndEvt__W_KeybindActionMap_ResetButton_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_KeybindActionMap.W_KeybindActionMap_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_KeybindActionMap_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeybindActionMap_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_KeybindActionMap.W_KeybindActionMap_C.CreateKeyBoardImages
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class UTexture*>&          Images                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UW_KeybindActionMap_C::CreateKeyBoardImages(const TArray<class UTexture*>& Images)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeybindActionMap_C", "CreateKeyBoardImages");

	Params::W_KeybindActionMap_C_CreateKeyBoardImages Parms{};

	Parms.Images = std::move(Images);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_KeybindActionMap.W_KeybindActionMap_C.CreateXboxImages
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class UTexture*>&          Images                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UW_KeybindActionMap_C::CreateXboxImages(const TArray<class UTexture*>& Images)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeybindActionMap_C", "CreateXboxImages");

	Params::W_KeybindActionMap_C_CreateXboxImages Parms{};

	Parms.Images = std::move(Images);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_KeybindActionMap.W_KeybindActionMap_C.ExecuteUbergraph_W_KeybindActionMap
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_KeybindActionMap_C::ExecuteUbergraph_W_KeybindActionMap(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeybindActionMap_C", "ExecuteUbergraph_W_KeybindActionMap");

	Params::W_KeybindActionMap_C_ExecuteUbergraph_W_KeybindActionMap Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_KeybindActionMap.W_KeybindActionMap_C.Get Images from Mappings
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// const struct FInputChord&               Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// TArray<class UTexture*>*                Images                                                 (Parm, OutParm)

void UW_KeybindActionMap_C::Get_Images_from_Mappings(const struct FInputChord& Key, TArray<class UTexture*>* Images) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_KeybindActionMap_C", "Get Images from Mappings");

	Params::W_KeybindActionMap_C_Get_Images_from_Mappings Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);

	if (Images != nullptr)
		*Images = std::move(Parms.Images);
}

}

