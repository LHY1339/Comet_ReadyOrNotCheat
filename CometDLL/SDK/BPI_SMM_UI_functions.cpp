#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_SMM_UI

#include "Basic.hpp"

#include "BPI_SMM_UI_classes.hpp"
#include "BPI_SMM_UI_parameters.hpp"


namespace SDK
{

// Function BPI_SMM_UI.BPI_SMM_UI_C.AsyncRetrieveSG
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_SMM_Mod_C>  SMM_Mod                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    ModName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    SaveSlot                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TSoftClassPtr<class UClass>             Class_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void IBPI_SMM_UI_C::AsyncRetrieveSG(TScriptInterface<class IBPI_SMM_Mod_C> SMM_Mod, const class FString& ModName, const class FString& SaveSlot, TSoftClassPtr<class UClass> Class_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "AsyncRetrieveSG");

	Params::BPI_SMM_UI_C_AsyncRetrieveSG Parms{};

	Parms.SMM_Mod = SMM_Mod;
	Parms.ModName = std::move(ModName);
	Parms.SaveSlot = std::move(SaveSlot);
	Parms.Class_0 = Class_0;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.AsyncSaveSG
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_SMM_Mod_C>  SMM_Mod                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USMM_SaveGame_Base_C*             SMM_SaveGame                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_SMM_UI_C::AsyncSaveSG(TScriptInterface<class IBPI_SMM_Mod_C> SMM_Mod, class USMM_SaveGame_Base_C* SMM_SaveGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "AsyncSaveSG");

	Params::BPI_SMM_UI_C_AsyncSaveSG Parms{};

	Parms.SMM_Mod = SMM_Mod;
	Parms.SMM_SaveGame = SMM_SaveGame;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.AsyncSaveSG by Name
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_SMM_Mod_C>  SMM_Mod                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    ModName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    SlotName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void IBPI_SMM_UI_C::AsyncSaveSG_by_Name(TScriptInterface<class IBPI_SMM_Mod_C> SMM_Mod, const class FString& ModName, const class FString& SlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "AsyncSaveSG by Name");

	Params::BPI_SMM_UI_C_AsyncSaveSG_by_Name Parms{};

	Parms.SMM_Mod = SMM_Mod;
	Parms.ModName = std::move(ModName);
	Parms.SlotName = std::move(SlotName);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.BlockingRetrieveSG
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ModName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    SaveSlot                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TSoftClassPtr<class UClass>             Class_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class USMM_SaveGame_Base_C**            SMM_SaveGame                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_SMM_UI_C::BlockingRetrieveSG(const class FString& ModName, const class FString& SaveSlot, TSoftClassPtr<class UClass> Class_0, class USMM_SaveGame_Base_C** SMM_SaveGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "BlockingRetrieveSG");

	Params::BPI_SMM_UI_C_BlockingRetrieveSG Parms{};

	Parms.ModName = std::move(ModName);
	Parms.SaveSlot = std::move(SaveSlot);
	Parms.Class_0 = Class_0;

	AsUObject()->ProcessEvent(Func, &Parms);

	if (SMM_SaveGame != nullptr)
		*SMM_SaveGame = Parms.SMM_SaveGame;
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.BlockingSaveSG
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ModName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    SaveSlot                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class USMM_SaveGame_Config_SMM_C*       SMM_SaveGame                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_SMM_UI_C::BlockingSaveSG(const class FString& ModName, const class FString& SaveSlot, class USMM_SaveGame_Config_SMM_C* SMM_SaveGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "BlockingSaveSG");

	Params::BPI_SMM_UI_C_BlockingSaveSG Parms{};

	Parms.ModName = std::move(ModName);
	Parms.SaveSlot = std::move(SaveSlot);
	Parms.SMM_SaveGame = SMM_SaveGame;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.Close UI
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_SMM_UI_C::Close_UI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "Close UI");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.DoLog
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Input                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void IBPI_SMM_UI_C::DoLog(const class FString& Input, const class FString& Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "DoLog");

	Params::BPI_SMM_UI_C_DoLog Parms{};

	Parms.Input = std::move(Input);
	Parms.Source = std::move(Source);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.DoNotification
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Title                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      Body                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void IBPI_SMM_UI_C::DoNotification(double Duration, const class FText& Title, const class FText& Body)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "DoNotification");

	Params::BPI_SMM_UI_C_DoNotification Parms{};

	Parms.Duration = Duration;
	Parms.Title = std::move(Title);
	Parms.Body = std::move(Body);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.Get SMM Data Assets
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UPDA_SMM_MenuData_C*>*     DataAssets                                             (Parm, OutParm)

void IBPI_SMM_UI_C::Get_SMM_Data_Assets(TArray<class UPDA_SMM_MenuData_C*>* DataAssets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "Get SMM Data Assets");

	Params::BPI_SMM_UI_C_Get_SMM_Data_Assets Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (DataAssets != nullptr)
		*DataAssets = std::move(Parms.DataAssets);
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.GetConfigTabs
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      SettingTab                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// TMap<class FName, class UUserWidget*>*  ConfigTabs                                             (Parm, OutParm, ContainsInstancedReference)

void IBPI_SMM_UI_C::GetConfigTabs(class UUserWidget* SettingTab, TMap<class FName, class UUserWidget*>* ConfigTabs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "GetConfigTabs");

	Params::BPI_SMM_UI_C_GetConfigTabs Parms{};

	Parms.SettingTab = SettingTab;

	AsUObject()->ProcessEvent(Func, &Parms);

	if (ConfigTabs != nullptr)
		*ConfigTabs = std::move(Parms.ConfigTabs);
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.GetLastLogMessage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString*                          LastLogMessage                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void IBPI_SMM_UI_C::GetLastLogMessage(class FString* LastLogMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "GetLastLogMessage");

	Params::BPI_SMM_UI_C_GetLastLogMessage Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (LastLogMessage != nullptr)
		*LastLogMessage = std::move(Parms.LastLogMessage);
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.GetLogHistory
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>*                  LogHistory                                             (Parm, OutParm)

void IBPI_SMM_UI_C::GetLogHistory(TArray<class FString>* LogHistory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "GetLogHistory");

	Params::BPI_SMM_UI_C_GetLogHistory Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (LogHistory != nullptr)
		*LogHistory = std::move(Parms.LogHistory);
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.GetSelectedConfigTab
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      SettingTab                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UUserWidget**                     SelectedTab                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName*                            Key                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_SMM_UI_C::GetSelectedConfigTab(class UUserWidget* SettingTab, class UUserWidget** SelectedTab, class FName* Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "GetSelectedConfigTab");

	Params::BPI_SMM_UI_C_GetSelectedConfigTab Parms{};

	Parms.SettingTab = SettingTab;

	AsUObject()->ProcessEvent(Func, &Parms);

	if (SelectedTab != nullptr)
		*SelectedTab = Parms.SelectedTab;

	if (Key != nullptr)
		*Key = Parms.Key;
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.GetSelectedSettingTab
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget**                     SelectedTab                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName*                            Key                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_SMM_UI_C::GetSelectedSettingTab(class UUserWidget** SelectedTab, class FName* Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "GetSelectedSettingTab");

	Params::BPI_SMM_UI_C_GetSelectedSettingTab Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (SelectedTab != nullptr)
		*SelectedTab = Parms.SelectedTab;

	if (Key != nullptr)
		*Key = Parms.Key;
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.GetSelectedTab
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget**                     SelectedTab                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName*                            Key                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_SMM_UI_C::GetSelectedTab(class UUserWidget** SelectedTab, class FName* Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "GetSelectedTab");

	Params::BPI_SMM_UI_C_GetSelectedTab Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (SelectedTab != nullptr)
		*SelectedTab = Parms.SelectedTab;

	if (Key != nullptr)
		*Key = Parms.Key;
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.GetSettingTabs
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class FName, class UUserWidget*>*  SettingTabs                                            (Parm, OutParm, ContainsInstancedReference)

void IBPI_SMM_UI_C::GetSettingTabs(TMap<class FName, class UUserWidget*>* SettingTabs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "GetSettingTabs");

	Params::BPI_SMM_UI_C_GetSettingTabs Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (SettingTabs != nullptr)
		*SettingTabs = std::move(Parms.SettingTabs);
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.GetTabs
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class FName, class UUserWidget*>*  Tabs                                                   (Parm, OutParm, ContainsInstancedReference)

void IBPI_SMM_UI_C::GetTabs(TMap<class FName, class UUserWidget*>* Tabs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "GetTabs");

	Params::BPI_SMM_UI_C_GetTabs Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (Tabs != nullptr)
		*Tabs = std::move(Parms.Tabs);
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.InvalidateCache
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_SMM_UI_C::InvalidateCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "InvalidateCache");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.Open UI
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_SMM_UI_C::Open_UI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "Open UI");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.RegisterConfigPage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_SMM_Mod_C>  SMM_Mod                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_SMM_UI_C::RegisterConfigPage(TScriptInterface<class IBPI_SMM_Mod_C> SMM_Mod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "RegisterConfigPage");

	Params::BPI_SMM_UI_C_RegisterConfigPage Parms{};

	Parms.SMM_Mod = SMM_Mod;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.RegisterPage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_SMM_Mod_C>  SMM_Mod                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_SMM_UI_C::RegisterPage(TScriptInterface<class IBPI_SMM_Mod_C> SMM_Mod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "RegisterPage");

	Params::BPI_SMM_UI_C_RegisterPage Parms{};

	Parms.SMM_Mod = SMM_Mod;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.SelectConfigTab
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      ConfigTab                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UUserWidget*                      SettingTab                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void IBPI_SMM_UI_C::SelectConfigTab(class UUserWidget* ConfigTab, class UUserWidget* SettingTab)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "SelectConfigTab");

	Params::BPI_SMM_UI_C_SelectConfigTab Parms{};

	Parms.ConfigTab = ConfigTab;
	Parms.SettingTab = SettingTab;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.SelectConfigTabByKey
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             TabKey                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UUserWidget*                      SettingTab                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void IBPI_SMM_UI_C::SelectConfigTabByKey(class FName TabKey, class UUserWidget* SettingTab)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "SelectConfigTabByKey");

	Params::BPI_SMM_UI_C_SelectConfigTabByKey Parms{};

	Parms.TabKey = TabKey;
	Parms.SettingTab = SettingTab;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.SelectSettingTab
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      SettingTab                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void IBPI_SMM_UI_C::SelectSettingTab(class UUserWidget* SettingTab)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "SelectSettingTab");

	Params::BPI_SMM_UI_C_SelectSettingTab Parms{};

	Parms.SettingTab = SettingTab;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.SelectSettingTabByKey
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             TabKey                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_SMM_UI_C::SelectSettingTabByKey(class FName TabKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "SelectSettingTabByKey");

	Params::BPI_SMM_UI_C_SelectSettingTabByKey Parms{};

	Parms.TabKey = TabKey;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.SelectTab
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      Tab                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void IBPI_SMM_UI_C::SelectTab(class UUserWidget* Tab)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "SelectTab");

	Params::BPI_SMM_UI_C_SelectTab Parms{};

	Parms.Tab = Tab;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_SMM_UI.BPI_SMM_UI_C.SelectTabByKey
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             TabKey                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_SMM_UI_C::SelectTabByKey(class FName TabKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SMM_UI_C", "SelectTabByKey");

	Params::BPI_SMM_UI_C_SelectTabByKey Parms{};

	Parms.TabKey = TabKey;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

