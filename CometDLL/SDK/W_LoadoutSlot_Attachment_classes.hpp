#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_LoadoutSlot_Attachment

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "ReadyOrNot_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "ST_Style_Text_structs.hpp"
#include "LoadoutCategory_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_LoadoutSlot_Attachment.W_LoadoutSlot_Attachment_C
// 0x14B0 (0x1770 - 0x02C0)
class UW_LoadoutSlot_Attachment_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       animReveal;                                        // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 img_DivBot;                                        // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_ItemImage;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_ItemImage_Minimal;                             // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              lbl_Equipped;                                      // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SB_Fullsize;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              SB_Icon;                                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              SB_Icon_Minimal;                                   // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SB_Minimal;                                        // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              scale_Name;                                        // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              scale_Name_Minimal;                                // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            SlotButton;                                        // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            SlotButton_Minimal;                                // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_Category;                                      // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_Category_Minimal;                              // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_Name;                                          // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_Name_Minimal;                                  // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UClass*                                 AttachingWeapon;                                   // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EWeaponAttachmentType                         AttachmentSlot;                                    // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 AttachmentData;                                    // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   ItemName;                                          // 0x0368(0x0018)(Edit, BlueprintVisible)
	class FText                                   Category;                                          // 0x0380(0x0018)(Edit, BlueprintVisible)
	bool                                          HasAugment;                                        // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MinimalLayout;                                     // 0x0399(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_39A[0x6];                                      // 0x039A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             ItemIcon;                                          // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          StartActive;                                       // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Active;                                         // 0x03A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AA[0x6];                                      // 0x03AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_Style_Text                         NameTextStyle;                                     // 0x03B0(0x00C8)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FMargin                                NormalNamePadding;                                 // 0x0478(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FButtonStyle                           NormalButtonStyle;                                 // 0x0490(0x03F0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FST_Style_Text                         NameTextStyle_Active;                              // 0x0880(0x00C8)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	uint8                                         Pad_948[0x8];                                      // 0x0948(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FButtonStyle                           ActiveButtonStyle;                                 // 0x0950(0x03F0)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(class UW_LoadoutSlot_Attachment_C* TriggeringSlot)> OnClicked;     // 0x0D40(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UW_LoadoutSlot_Attachment_C* TriggeringSlot)> OnHovered;     // 0x0D50(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UW_LoadoutSlot_Attachment_C* TriggeringSlot)> OnUnhovered;   // 0x0D60(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	EItemClass                                    Item_Class;                                        // 0x0D70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D71[0x7];                                      // 0x0D71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EItemCategory>                         Item_Categories;                                   // 0x0D78(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FItemVisualData                        Visuals;                                           // 0x0D88(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UTexture2D*                             Icon;                                              // 0x0DB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UW_LoadoutSlot_Attachment_C* TriggeringSlot)> OnDoubleClicked; // 0x0DC0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<struct LoadoutCategory::FLoadoutCategory> Gear_Category_Classes;                          // 0x0DD0(0x0010)(Edit, BlueprintVisible)
	struct FST_Style_Text                         MinimalNameTextStyle;                              // 0x0DE0(0x00C8)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FMargin                                MinimalNamePadding;                                // 0x0EA8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FST_Style_Text                         MinimalNameTextStyle_Active;                       // 0x0EB8(0x00C8)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          IsListItem;                                        // 0x0F80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Equipped;                                          // 0x0F81(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_F82[0x2];                                      // 0x0F82(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           EquippedColor;                                     // 0x0F84(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           AugmentTextColor;                                  // 0x0F94(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA4[0xC];                                      // 0x0FA4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FButtonStyle                           EquippedButtonStyle;                               // 0x0FB0(0x03F0)(Edit, BlueprintVisible, DisableEditOnInstance)
	EItemType                                     ItemType;                                          // 0x13A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponAttachmentType                         AttachmentType;                                    // 0x13A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A2[0x6];                                     // 0x13A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SlotWidth;                                         // 0x13A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EmptySlotWidth;                                    // 0x13B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_Style_Text                         NameTextStyleNull;                                 // 0x13B8(0x00C8)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSavedLoadout                          ActiveLoadout;                                     // 0x1480(0x02E8)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BackPage(bool* Handled);
	void BndEvt__W_LoadoutAttachment_SlotButton_1_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_LoadoutAttachment_SlotButton_1_K2Node_ComponentBoundEvent_5_Hovered__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_LoadoutAttachment_SlotButton_1_K2Node_ComponentBoundEvent_6_Unhovered__DelegateSignature();
	void BndEvt__W_LoadoutAttachment_SlotButton_1_K2Node_ComponentBoundEvent_7_DoubleClicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_3_Unhovered__DelegateSignature();
	void BP_OnEntryReleased();
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void ChangePage(class FName PageName);
	void Construct();
	void ExecuteUbergraph_W_LoadoutSlot_Attachment(int32 EntryPoint);
	void ForceClick();
	bool GetHoverState();
	void GetIsNullAttachment(class UClass* AttachmentData_0, bool* IsNull);
	void HeaderSubpageNavigation(class FName OptionNameID);
	void Hide(double Delay, bool Collapse);
	void InitializeAsListItem();
	void InitializeAsSlot();
	void InitializeAttachmentData(class UClass* AttachmentData_0);
	void OnListItemObjectSet(class UObject* ListItemObject);
	void PreConstruct(bool IsDesignTime);
	void RefreshItemInfo();
	void Reveal(double Delay);
	void SetActive(bool IsActive);
	void SetEquipped(bool Equipped_0);
	void SetInputMode(bool IsGamepad);
	void SetLoadoutWidget(class UW_Loadout_C* LoadoutWidget);
	void SetMinimalLayout(bool MinimalLayout_0);
	void UpdateActiveLoadout(const struct FSavedLoadout& ActiveLoadout_0);
	void UpdateCurrentItemMap(const TMap<EItemCategory, class UClass*>& ItemCategory);
	void UpdateCurrentSlot(class UW_LoadoutSlot_C* CurrentSlot);

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_LoadoutSlot_Attachment_C">();
	}
	static class UW_LoadoutSlot_Attachment_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_LoadoutSlot_Attachment_C>();
	}
};
static_assert(alignof(UW_LoadoutSlot_Attachment_C) == 0x000010, "Wrong alignment on UW_LoadoutSlot_Attachment_C");
static_assert(sizeof(UW_LoadoutSlot_Attachment_C) == 0x001770, "Wrong size on UW_LoadoutSlot_Attachment_C");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, UberGraphFrame) == 0x0002C0, "Member 'UW_LoadoutSlot_Attachment_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, animReveal) == 0x0002C8, "Member 'UW_LoadoutSlot_Attachment_C::animReveal' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, img_DivBot) == 0x0002D0, "Member 'UW_LoadoutSlot_Attachment_C::img_DivBot' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, img_ItemImage) == 0x0002D8, "Member 'UW_LoadoutSlot_Attachment_C::img_ItemImage' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, img_ItemImage_Minimal) == 0x0002E0, "Member 'UW_LoadoutSlot_Attachment_C::img_ItemImage_Minimal' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, lbl_Equipped) == 0x0002E8, "Member 'UW_LoadoutSlot_Attachment_C::lbl_Equipped' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, SB_Fullsize) == 0x0002F0, "Member 'UW_LoadoutSlot_Attachment_C::SB_Fullsize' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, SB_Icon) == 0x0002F8, "Member 'UW_LoadoutSlot_Attachment_C::SB_Icon' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, SB_Icon_Minimal) == 0x000300, "Member 'UW_LoadoutSlot_Attachment_C::SB_Icon_Minimal' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, SB_Minimal) == 0x000308, "Member 'UW_LoadoutSlot_Attachment_C::SB_Minimal' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, scale_Name) == 0x000310, "Member 'UW_LoadoutSlot_Attachment_C::scale_Name' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, scale_Name_Minimal) == 0x000318, "Member 'UW_LoadoutSlot_Attachment_C::scale_Name_Minimal' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, SlotButton) == 0x000320, "Member 'UW_LoadoutSlot_Attachment_C::SlotButton' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, SlotButton_Minimal) == 0x000328, "Member 'UW_LoadoutSlot_Attachment_C::SlotButton_Minimal' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, txt_Category) == 0x000330, "Member 'UW_LoadoutSlot_Attachment_C::txt_Category' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, txt_Category_Minimal) == 0x000338, "Member 'UW_LoadoutSlot_Attachment_C::txt_Category_Minimal' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, txt_Name) == 0x000340, "Member 'UW_LoadoutSlot_Attachment_C::txt_Name' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, txt_Name_Minimal) == 0x000348, "Member 'UW_LoadoutSlot_Attachment_C::txt_Name_Minimal' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, AttachingWeapon) == 0x000350, "Member 'UW_LoadoutSlot_Attachment_C::AttachingWeapon' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, AttachmentSlot) == 0x000358, "Member 'UW_LoadoutSlot_Attachment_C::AttachmentSlot' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, AttachmentData) == 0x000360, "Member 'UW_LoadoutSlot_Attachment_C::AttachmentData' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, ItemName) == 0x000368, "Member 'UW_LoadoutSlot_Attachment_C::ItemName' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Category) == 0x000380, "Member 'UW_LoadoutSlot_Attachment_C::Category' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, HasAugment) == 0x000398, "Member 'UW_LoadoutSlot_Attachment_C::HasAugment' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, MinimalLayout) == 0x000399, "Member 'UW_LoadoutSlot_Attachment_C::MinimalLayout' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, ItemIcon) == 0x0003A0, "Member 'UW_LoadoutSlot_Attachment_C::ItemIcon' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, StartActive) == 0x0003A8, "Member 'UW_LoadoutSlot_Attachment_C::StartActive' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Is_Active) == 0x0003A9, "Member 'UW_LoadoutSlot_Attachment_C::Is_Active' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, NameTextStyle) == 0x0003B0, "Member 'UW_LoadoutSlot_Attachment_C::NameTextStyle' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, NormalNamePadding) == 0x000478, "Member 'UW_LoadoutSlot_Attachment_C::NormalNamePadding' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, NormalButtonStyle) == 0x000490, "Member 'UW_LoadoutSlot_Attachment_C::NormalButtonStyle' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, NameTextStyle_Active) == 0x000880, "Member 'UW_LoadoutSlot_Attachment_C::NameTextStyle_Active' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, ActiveButtonStyle) == 0x000950, "Member 'UW_LoadoutSlot_Attachment_C::ActiveButtonStyle' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, OnClicked) == 0x000D40, "Member 'UW_LoadoutSlot_Attachment_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, OnHovered) == 0x000D50, "Member 'UW_LoadoutSlot_Attachment_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, OnUnhovered) == 0x000D60, "Member 'UW_LoadoutSlot_Attachment_C::OnUnhovered' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Item_Class) == 0x000D70, "Member 'UW_LoadoutSlot_Attachment_C::Item_Class' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Item_Categories) == 0x000D78, "Member 'UW_LoadoutSlot_Attachment_C::Item_Categories' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Visuals) == 0x000D88, "Member 'UW_LoadoutSlot_Attachment_C::Visuals' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Icon) == 0x000DB8, "Member 'UW_LoadoutSlot_Attachment_C::Icon' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, OnDoubleClicked) == 0x000DC0, "Member 'UW_LoadoutSlot_Attachment_C::OnDoubleClicked' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Gear_Category_Classes) == 0x000DD0, "Member 'UW_LoadoutSlot_Attachment_C::Gear_Category_Classes' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, MinimalNameTextStyle) == 0x000DE0, "Member 'UW_LoadoutSlot_Attachment_C::MinimalNameTextStyle' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, MinimalNamePadding) == 0x000EA8, "Member 'UW_LoadoutSlot_Attachment_C::MinimalNamePadding' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, MinimalNameTextStyle_Active) == 0x000EB8, "Member 'UW_LoadoutSlot_Attachment_C::MinimalNameTextStyle_Active' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, IsListItem) == 0x000F80, "Member 'UW_LoadoutSlot_Attachment_C::IsListItem' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Equipped) == 0x000F81, "Member 'UW_LoadoutSlot_Attachment_C::Equipped' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, EquippedColor) == 0x000F84, "Member 'UW_LoadoutSlot_Attachment_C::EquippedColor' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, AugmentTextColor) == 0x000F94, "Member 'UW_LoadoutSlot_Attachment_C::AugmentTextColor' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, EquippedButtonStyle) == 0x000FB0, "Member 'UW_LoadoutSlot_Attachment_C::EquippedButtonStyle' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, ItemType) == 0x0013A0, "Member 'UW_LoadoutSlot_Attachment_C::ItemType' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, AttachmentType) == 0x0013A1, "Member 'UW_LoadoutSlot_Attachment_C::AttachmentType' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, SlotWidth) == 0x0013A8, "Member 'UW_LoadoutSlot_Attachment_C::SlotWidth' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, EmptySlotWidth) == 0x0013B0, "Member 'UW_LoadoutSlot_Attachment_C::EmptySlotWidth' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, NameTextStyleNull) == 0x0013B8, "Member 'UW_LoadoutSlot_Attachment_C::NameTextStyleNull' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, ActiveLoadout) == 0x001480, "Member 'UW_LoadoutSlot_Attachment_C::ActiveLoadout' has a wrong offset!");

}

