#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PlanningMap_BreachPoint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PlanningMap_BreachPoint.W_PlanningMap_BreachPoint_C
// 0x0058 (0x0318 - 0x02C0)
class UW_PlanningMap_BreachPoint_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Fade;                                              // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            btn_BreachPoint;                                   // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_SpawnMark;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_SpawnSelect;                                   // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Hidden;                                            // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UW_PlanningMap_BreachPoint_C* HoveredPoint)> OnBreachPointHovered; // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UW_PlanningMap_BreachPoint_C* ClickedPoint)> OnBreachPointClicked; // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Selected;                                          // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__btn_BreachPoint_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__btn_BreachPoint_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature(class UW_Button_C* Button);
	void Construct();
	void ExecuteUbergraph_W_PlanningMap_BreachPoint(int32 EntryPoint);
	void FadeIn();
	void FadeOut();
	void SetSelected(bool Selected_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_PlanningMap_BreachPoint_C">();
	}
	static class UW_PlanningMap_BreachPoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PlanningMap_BreachPoint_C>();
	}
};
static_assert(alignof(UW_PlanningMap_BreachPoint_C) == 0x000008, "Wrong alignment on UW_PlanningMap_BreachPoint_C");
static_assert(sizeof(UW_PlanningMap_BreachPoint_C) == 0x000318, "Wrong size on UW_PlanningMap_BreachPoint_C");
static_assert(offsetof(UW_PlanningMap_BreachPoint_C, UberGraphFrame) == 0x0002C0, "Member 'UW_PlanningMap_BreachPoint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_PlanningMap_BreachPoint_C, Fade) == 0x0002C8, "Member 'UW_PlanningMap_BreachPoint_C::Fade' has a wrong offset!");
static_assert(offsetof(UW_PlanningMap_BreachPoint_C, btn_BreachPoint) == 0x0002D0, "Member 'UW_PlanningMap_BreachPoint_C::btn_BreachPoint' has a wrong offset!");
static_assert(offsetof(UW_PlanningMap_BreachPoint_C, img_SpawnMark) == 0x0002D8, "Member 'UW_PlanningMap_BreachPoint_C::img_SpawnMark' has a wrong offset!");
static_assert(offsetof(UW_PlanningMap_BreachPoint_C, img_SpawnSelect) == 0x0002E0, "Member 'UW_PlanningMap_BreachPoint_C::img_SpawnSelect' has a wrong offset!");
static_assert(offsetof(UW_PlanningMap_BreachPoint_C, Hidden) == 0x0002E8, "Member 'UW_PlanningMap_BreachPoint_C::Hidden' has a wrong offset!");
static_assert(offsetof(UW_PlanningMap_BreachPoint_C, OnBreachPointHovered) == 0x0002F0, "Member 'UW_PlanningMap_BreachPoint_C::OnBreachPointHovered' has a wrong offset!");
static_assert(offsetof(UW_PlanningMap_BreachPoint_C, OnBreachPointClicked) == 0x000300, "Member 'UW_PlanningMap_BreachPoint_C::OnBreachPointClicked' has a wrong offset!");
static_assert(offsetof(UW_PlanningMap_BreachPoint_C, Selected) == 0x000310, "Member 'UW_PlanningMap_BreachPoint_C::Selected' has a wrong offset!");

}

