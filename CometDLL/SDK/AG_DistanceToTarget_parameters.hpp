#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AG_DistanceToTarget

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AG_DistanceToTarget.AG_DistanceToTarget_C.CanOpen
// 0x0070 (0x0070 - 0x0000)
struct AG_DistanceToTarget_C_CanOpen final
{
public:
	struct FAIActionDecisionContext               Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotCharacter*                   CallFunc_GetTrackedTarget_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTrackedInKnownNeutrals_ReturnValue;     // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTrackedInKnownFriendlies_ReturnValue;   // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTrackedInKnownEnemies_ReturnValue;      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AG_DistanceToTarget_C_CanOpen) == 0x000008, "Wrong alignment on AG_DistanceToTarget_C_CanOpen");
static_assert(sizeof(AG_DistanceToTarget_C_CanOpen) == 0x000070, "Wrong size on AG_DistanceToTarget_C_CanOpen");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, Context) == 0x000000, "Member 'AG_DistanceToTarget_C_CanOpen::Context' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, ReturnValue) == 0x000010, "Member 'AG_DistanceToTarget_C_CanOpen::ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_K2_GetPawn_ReturnValue) == 0x000018, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_GetTrackedTarget_ReturnValue) == 0x000020, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_GetTrackedTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_IsTrackedInKnownNeutrals_ReturnValue) == 0x000041, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_IsTrackedInKnownNeutrals_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_BooleanAND_ReturnValue) == 0x000042, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_IsTrackedInKnownFriendlies_ReturnValue) == 0x000043, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_IsTrackedInKnownFriendlies_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_IsTrackedInKnownEnemies_ReturnValue) == 0x000044, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_IsTrackedInKnownEnemies_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000048, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_Vector_Distance_ReturnValue) == 0x000060, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_BooleanAND_ReturnValue_1) == 0x000068, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_BooleanAND_ReturnValue_2) == 0x000069, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x00006A, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_BooleanOR_ReturnValue) == 0x00006B, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_BooleanOR_ReturnValue_1) == 0x00006C, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

}

