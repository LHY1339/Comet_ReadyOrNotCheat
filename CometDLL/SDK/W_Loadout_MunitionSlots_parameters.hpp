#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Loadout_MunitionSlots

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.AddGrenadeType
// 0x0118 (0x0118 - 0x0000)
struct W_Loadout_MunitionSlots_C_AddGrenadeType final
{
public:
	class UClass*                                 InitialItem;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0018)()
	class UW_Loadout_MunitionSlots_Deployable_C*  CallFunc_CreateDeployableSlot_OutputPin;           // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_Loadout_MunitionSlots_Deployable_C*> CallFunc_Map_Keys_Keys;                     // 0x00E0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_MunitionSlots_Deployable_C*  CallFunc_Array_Get_Item_1;                         // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Map_Find_Value;                           // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_AddGrenadeType) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_AddGrenadeType");
static_assert(sizeof(W_Loadout_MunitionSlots_C_AddGrenadeType) == 0x000118, "Wrong size on W_Loadout_MunitionSlots_C_AddGrenadeType");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, InitialItem) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::InitialItem' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, Temp_int_Array_Index_Variable) == 0x000014, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, CallFunc_Array_Get_Item) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, CallFunc_Map_Length_ReturnValue) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, CallFunc_Less_IntInt_ReturnValue_1) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000040, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, CallFunc_BooleanAND_ReturnValue) == 0x000048, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, K2Node_MakeArray_Array) == 0x0000A0, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000B0, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, CallFunc_CreateDeployableSlot_OutputPin) == 0x0000D0, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::CallFunc_CreateDeployableSlot_OutputPin' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, CallFunc_Array_Contains_ReturnValue) == 0x0000D8, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000D9, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, CallFunc_Map_Keys_Keys) == 0x0000E0, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, CallFunc_Array_Length_ReturnValue_1) == 0x0000F0, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, CallFunc_Array_Get_Item_1) == 0x0000F8, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, CallFunc_Less_IntInt_ReturnValue_2) == 0x000100, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, CallFunc_Map_Find_Value) == 0x000108, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, CallFunc_Map_Find_ReturnValue) == 0x000110, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddGrenadeType, CallFunc_Array_Add_ReturnValue) == 0x000114, "Member 'W_Loadout_MunitionSlots_C_AddGrenadeType::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.AddTacticalType
// 0x0118 (0x0118 - 0x0000)
struct W_Loadout_MunitionSlots_C_AddTacticalType final
{
public:
	class UClass*                                 InitialItem;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0018)()
	class UW_Loadout_MunitionSlots_Deployable_C*  CallFunc_CreateDeployableSlot_OutputPin;           // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_Loadout_MunitionSlots_Deployable_C*> CallFunc_Map_Keys_Keys;                     // 0x00E0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_MunitionSlots_Deployable_C*  CallFunc_Array_Get_Item_1;                         // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Map_Find_Value;                           // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_AddTacticalType) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_AddTacticalType");
static_assert(sizeof(W_Loadout_MunitionSlots_C_AddTacticalType) == 0x000118, "Wrong size on W_Loadout_MunitionSlots_C_AddTacticalType");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, InitialItem) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::InitialItem' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, Temp_int_Array_Index_Variable) == 0x000014, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, CallFunc_Array_Get_Item) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, CallFunc_Map_Length_ReturnValue) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, CallFunc_Less_IntInt_ReturnValue_1) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000040, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, CallFunc_BooleanAND_ReturnValue) == 0x000048, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, K2Node_MakeArray_Array) == 0x0000A0, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000B0, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, CallFunc_CreateDeployableSlot_OutputPin) == 0x0000D0, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::CallFunc_CreateDeployableSlot_OutputPin' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, CallFunc_Array_Contains_ReturnValue) == 0x0000D8, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000D9, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, CallFunc_Map_Keys_Keys) == 0x0000E0, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, CallFunc_Array_Length_ReturnValue_1) == 0x0000F0, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, CallFunc_Array_Get_Item_1) == 0x0000F8, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, CallFunc_Less_IntInt_ReturnValue_2) == 0x000100, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, CallFunc_Map_Find_Value) == 0x000108, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, CallFunc_Map_Find_ReturnValue) == 0x000110, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AddTacticalType, CallFunc_Array_Add_ReturnValue) == 0x000114, "Member 'W_Loadout_MunitionSlots_C_AddTacticalType::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.AmmoSelected
// 0x0010 (0x0010 - 0x0000)
struct W_Loadout_MunitionSlots_C_AmmoSelected final
{
public:
	class FName                                   NewAmmoType;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Weapon;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_AmmoSelected) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_AmmoSelected");
static_assert(sizeof(W_Loadout_MunitionSlots_C_AmmoSelected) == 0x000010, "Wrong size on W_Loadout_MunitionSlots_C_AmmoSelected");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AmmoSelected, NewAmmoType) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_AmmoSelected::NewAmmoType' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_AmmoSelected, Weapon) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_AmmoSelected::Weapon' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_MunitionSlots_C_BackPage final
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_BackPage) == 0x000001, "Wrong alignment on W_Loadout_MunitionSlots_C_BackPage");
static_assert(sizeof(W_Loadout_MunitionSlots_C_BackPage) == 0x000001, "Wrong size on W_Loadout_MunitionSlots_C_BackPage");
static_assert(offsetof(W_Loadout_MunitionSlots_C_BackPage, Handled) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_BackPage::Handled' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.BndEvt__W_Loadout_MunitionSlots_ArmorSlotGrenadeCount_K2Node_ComponentBoundEvent_15_OnSlotCountChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotGrenadeCount_K2Node_ComponentBoundEvent_15_OnSlotCountChanged__DelegateSignature final
{
public:
	class UW_Loadout_MunitionCountSlot_C*         TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotGrenadeCount_K2Node_ComponentBoundEvent_15_OnSlotCountChanged__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotGrenadeCount_K2Node_ComponentBoundEvent_15_OnSlotCountChanged__DelegateSignature");
static_assert(sizeof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotGrenadeCount_K2Node_ComponentBoundEvent_15_OnSlotCountChanged__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotGrenadeCount_K2Node_ComponentBoundEvent_15_OnSlotCountChanged__DelegateSignature");
static_assert(offsetof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotGrenadeCount_K2Node_ComponentBoundEvent_15_OnSlotCountChanged__DelegateSignature, TriggeringSlot) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotGrenadeCount_K2Node_ComponentBoundEvent_15_OnSlotCountChanged__DelegateSignature::TriggeringSlot' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.BndEvt__W_Loadout_MunitionSlots_ArmorSlotPrimaryAmmoCount_K2Node_ComponentBoundEvent_13_OnSlotCountChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotPrimaryAmmoCount_K2Node_ComponentBoundEvent_13_OnSlotCountChanged__DelegateSignature final
{
public:
	class UW_Loadout_MunitionCountSlot_C*         TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotPrimaryAmmoCount_K2Node_ComponentBoundEvent_13_OnSlotCountChanged__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotPrimaryAmmoCount_K2Node_ComponentBoundEvent_13_OnSlotCountChanged__DelegateSignature");
static_assert(sizeof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotPrimaryAmmoCount_K2Node_ComponentBoundEvent_13_OnSlotCountChanged__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotPrimaryAmmoCount_K2Node_ComponentBoundEvent_13_OnSlotCountChanged__DelegateSignature");
static_assert(offsetof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotPrimaryAmmoCount_K2Node_ComponentBoundEvent_13_OnSlotCountChanged__DelegateSignature, TriggeringSlot) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotPrimaryAmmoCount_K2Node_ComponentBoundEvent_13_OnSlotCountChanged__DelegateSignature::TriggeringSlot' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.BndEvt__W_Loadout_MunitionSlots_ArmorSlotSidearmAmmoCount_K2Node_ComponentBoundEvent_14_OnSlotCountChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotSidearmAmmoCount_K2Node_ComponentBoundEvent_14_OnSlotCountChanged__DelegateSignature final
{
public:
	class UW_Loadout_MunitionCountSlot_C*         TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotSidearmAmmoCount_K2Node_ComponentBoundEvent_14_OnSlotCountChanged__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotSidearmAmmoCount_K2Node_ComponentBoundEvent_14_OnSlotCountChanged__DelegateSignature");
static_assert(sizeof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotSidearmAmmoCount_K2Node_ComponentBoundEvent_14_OnSlotCountChanged__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotSidearmAmmoCount_K2Node_ComponentBoundEvent_14_OnSlotCountChanged__DelegateSignature");
static_assert(offsetof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotSidearmAmmoCount_K2Node_ComponentBoundEvent_14_OnSlotCountChanged__DelegateSignature, TriggeringSlot) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotSidearmAmmoCount_K2Node_ComponentBoundEvent_14_OnSlotCountChanged__DelegateSignature::TriggeringSlot' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.BndEvt__W_Loadout_MunitionSlots_ArmorSlotTacticalCount_K2Node_ComponentBoundEvent_16_OnSlotCountChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotTacticalCount_K2Node_ComponentBoundEvent_16_OnSlotCountChanged__DelegateSignature final
{
public:
	class UW_Loadout_MunitionCountSlot_C*         TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotTacticalCount_K2Node_ComponentBoundEvent_16_OnSlotCountChanged__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotTacticalCount_K2Node_ComponentBoundEvent_16_OnSlotCountChanged__DelegateSignature");
static_assert(sizeof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotTacticalCount_K2Node_ComponentBoundEvent_16_OnSlotCountChanged__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotTacticalCount_K2Node_ComponentBoundEvent_16_OnSlotCountChanged__DelegateSignature");
static_assert(offsetof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotTacticalCount_K2Node_ComponentBoundEvent_16_OnSlotCountChanged__DelegateSignature, TriggeringSlot) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_ArmorSlotTacticalCount_K2Node_ComponentBoundEvent_16_OnSlotCountChanged__DelegateSignature::TriggeringSlot' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.BndEvt__W_Loadout_MunitionSlots_btn_Add_PrimaryAmmo1_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_PrimaryAmmo1_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_PrimaryAmmo1_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_PrimaryAmmo1_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature");
static_assert(sizeof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_PrimaryAmmo1_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_PrimaryAmmo1_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature");
static_assert(offsetof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_PrimaryAmmo1_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_PrimaryAmmo1_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.BndEvt__W_Loadout_MunitionSlots_btn_Add_PrimaryAmmo2_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_PrimaryAmmo2_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_PrimaryAmmo2_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_PrimaryAmmo2_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature");
static_assert(sizeof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_PrimaryAmmo2_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_PrimaryAmmo2_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature");
static_assert(offsetof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_PrimaryAmmo2_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_PrimaryAmmo2_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.BndEvt__W_Loadout_MunitionSlots_btn_Add_SidearmAmmo1_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_SidearmAmmo1_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_SidearmAmmo1_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_SidearmAmmo1_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature");
static_assert(sizeof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_SidearmAmmo1_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_SidearmAmmo1_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature");
static_assert(offsetof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_SidearmAmmo1_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_SidearmAmmo1_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.BndEvt__W_Loadout_MunitionSlots_btn_Add_SidearmAmmo2_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_SidearmAmmo2_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_SidearmAmmo2_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_SidearmAmmo2_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature");
static_assert(sizeof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_SidearmAmmo2_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_SidearmAmmo2_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature");
static_assert(offsetof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_SidearmAmmo2_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Add_SidearmAmmo2_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.BndEvt__W_Loadout_MunitionSlots_btn_Minimize_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Minimize_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Minimize_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Minimize_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");
static_assert(sizeof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Minimize_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Minimize_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");
static_assert(offsetof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Minimize_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Minimize_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.BndEvt__W_Loadout_MunitionSlots_btn_NewGrenadeType_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewGrenadeType_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewGrenadeType_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewGrenadeType_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature");
static_assert(sizeof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewGrenadeType_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewGrenadeType_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature");
static_assert(offsetof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewGrenadeType_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewGrenadeType_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.BndEvt__W_Loadout_MunitionSlots_btn_NewPrimaryAmmoType_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewPrimaryAmmoType_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewPrimaryAmmoType_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewPrimaryAmmoType_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature");
static_assert(sizeof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewPrimaryAmmoType_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewPrimaryAmmoType_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature");
static_assert(offsetof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewPrimaryAmmoType_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewPrimaryAmmoType_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.BndEvt__W_Loadout_MunitionSlots_btn_NewSidearmAmmoType_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewSidearmAmmoType_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewSidearmAmmoType_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewSidearmAmmoType_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature");
static_assert(sizeof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewSidearmAmmoType_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewSidearmAmmoType_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature");
static_assert(offsetof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewSidearmAmmoType_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewSidearmAmmoType_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.BndEvt__W_Loadout_MunitionSlots_btn_NewTacticalType_K2Node_ComponentBoundEvent_17_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewTacticalType_K2Node_ComponentBoundEvent_17_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewTacticalType_K2Node_ComponentBoundEvent_17_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewTacticalType_K2Node_ComponentBoundEvent_17_Clicked__DelegateSignature");
static_assert(sizeof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewTacticalType_K2Node_ComponentBoundEvent_17_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewTacticalType_K2Node_ComponentBoundEvent_17_Clicked__DelegateSignature");
static_assert(offsetof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewTacticalType_K2Node_ComponentBoundEvent_17_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_NewTacticalType_K2Node_ComponentBoundEvent_17_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.BndEvt__W_Loadout_MunitionSlots_btn_SlotEdit_K2Node_ComponentBoundEvent_18_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_SlotEdit_K2Node_ComponentBoundEvent_18_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_SlotEdit_K2Node_ComponentBoundEvent_18_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_SlotEdit_K2Node_ComponentBoundEvent_18_Clicked__DelegateSignature");
static_assert(sizeof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_SlotEdit_K2Node_ComponentBoundEvent_18_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_SlotEdit_K2Node_ComponentBoundEvent_18_Clicked__DelegateSignature");
static_assert(offsetof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_SlotEdit_K2Node_ComponentBoundEvent_18_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_SlotEdit_K2Node_ComponentBoundEvent_18_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.BndEvt__W_Loadout_MunitionSlots_btn_Summary_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Summary_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Summary_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Summary_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(sizeof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Summary_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Summary_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(offsetof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Summary_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_btn_Summary_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.BndEvt__W_Loadout_MunitionSlots_PrimaryAmmo1_K2Node_ComponentBoundEvent_9_OnSlotClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_PrimaryAmmo1_K2Node_ComponentBoundEvent_9_OnSlotClicked__DelegateSignature final
{
public:
	class UW_LoadoutSlot_C*                       TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_PrimaryAmmo1_K2Node_ComponentBoundEvent_9_OnSlotClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_PrimaryAmmo1_K2Node_ComponentBoundEvent_9_OnSlotClicked__DelegateSignature");
static_assert(sizeof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_PrimaryAmmo1_K2Node_ComponentBoundEvent_9_OnSlotClicked__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_PrimaryAmmo1_K2Node_ComponentBoundEvent_9_OnSlotClicked__DelegateSignature");
static_assert(offsetof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_PrimaryAmmo1_K2Node_ComponentBoundEvent_9_OnSlotClicked__DelegateSignature, TriggeringSlot) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_PrimaryAmmo1_K2Node_ComponentBoundEvent_9_OnSlotClicked__DelegateSignature::TriggeringSlot' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.BndEvt__W_Loadout_MunitionSlots_PrimaryAmmo2_K2Node_ComponentBoundEvent_10_OnSlotClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_PrimaryAmmo2_K2Node_ComponentBoundEvent_10_OnSlotClicked__DelegateSignature final
{
public:
	class UW_LoadoutSlot_C*                       TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_PrimaryAmmo2_K2Node_ComponentBoundEvent_10_OnSlotClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_PrimaryAmmo2_K2Node_ComponentBoundEvent_10_OnSlotClicked__DelegateSignature");
static_assert(sizeof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_PrimaryAmmo2_K2Node_ComponentBoundEvent_10_OnSlotClicked__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_PrimaryAmmo2_K2Node_ComponentBoundEvent_10_OnSlotClicked__DelegateSignature");
static_assert(offsetof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_PrimaryAmmo2_K2Node_ComponentBoundEvent_10_OnSlotClicked__DelegateSignature, TriggeringSlot) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_PrimaryAmmo2_K2Node_ComponentBoundEvent_10_OnSlotClicked__DelegateSignature::TriggeringSlot' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.BndEvt__W_Loadout_MunitionSlots_SidearmAmmo1_K2Node_ComponentBoundEvent_11_OnSlotClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_SidearmAmmo1_K2Node_ComponentBoundEvent_11_OnSlotClicked__DelegateSignature final
{
public:
	class UW_LoadoutSlot_C*                       TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_SidearmAmmo1_K2Node_ComponentBoundEvent_11_OnSlotClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_SidearmAmmo1_K2Node_ComponentBoundEvent_11_OnSlotClicked__DelegateSignature");
static_assert(sizeof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_SidearmAmmo1_K2Node_ComponentBoundEvent_11_OnSlotClicked__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_SidearmAmmo1_K2Node_ComponentBoundEvent_11_OnSlotClicked__DelegateSignature");
static_assert(offsetof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_SidearmAmmo1_K2Node_ComponentBoundEvent_11_OnSlotClicked__DelegateSignature, TriggeringSlot) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_SidearmAmmo1_K2Node_ComponentBoundEvent_11_OnSlotClicked__DelegateSignature::TriggeringSlot' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.BndEvt__W_Loadout_MunitionSlots_SidearmAmmo2_K2Node_ComponentBoundEvent_12_OnSlotClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_SidearmAmmo2_K2Node_ComponentBoundEvent_12_OnSlotClicked__DelegateSignature final
{
public:
	class UW_LoadoutSlot_C*                       TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_SidearmAmmo2_K2Node_ComponentBoundEvent_12_OnSlotClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_SidearmAmmo2_K2Node_ComponentBoundEvent_12_OnSlotClicked__DelegateSignature");
static_assert(sizeof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_SidearmAmmo2_K2Node_ComponentBoundEvent_12_OnSlotClicked__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_SidearmAmmo2_K2Node_ComponentBoundEvent_12_OnSlotClicked__DelegateSignature");
static_assert(offsetof(W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_SidearmAmmo2_K2Node_ComponentBoundEvent_12_OnSlotClicked__DelegateSignature, TriggeringSlot) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_BndEvt__W_Loadout_MunitionSlots_SidearmAmmo2_K2Node_ComponentBoundEvent_12_OnSlotClicked__DelegateSignature::TriggeringSlot' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_ChangePage final
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_ChangePage) == 0x000004, "Wrong alignment on W_Loadout_MunitionSlots_C_ChangePage");
static_assert(sizeof(W_Loadout_MunitionSlots_C_ChangePage) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_ChangePage");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ChangePage, PageName) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_ChangePage::PageName' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.CreateAmmoSummaryEntry
// 0x0028 (0x0028 - 0x0000)
struct W_Loadout_MunitionSlots_C_CreateAmmoSummaryEntry final
{
public:
	class UClass*                                 Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   AmmoType;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_Munition_SummaryEntry_C*     EntryWidget;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_Munition_SummaryEntry_C*     CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_CreateAmmoSummaryEntry) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_CreateAmmoSummaryEntry");
static_assert(sizeof(W_Loadout_MunitionSlots_C_CreateAmmoSummaryEntry) == 0x000028, "Wrong size on W_Loadout_MunitionSlots_C_CreateAmmoSummaryEntry");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateAmmoSummaryEntry, Weapon) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_CreateAmmoSummaryEntry::Weapon' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateAmmoSummaryEntry, AmmoType) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_CreateAmmoSummaryEntry::AmmoType' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateAmmoSummaryEntry, Count) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_CreateAmmoSummaryEntry::Count' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateAmmoSummaryEntry, EntryWidget) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_CreateAmmoSummaryEntry::EntryWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateAmmoSummaryEntry, CallFunc_Create_ReturnValue) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_CreateAmmoSummaryEntry::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.CreateDeployableSlot
// 0x0110 (0x0110 - 0x0000)
struct W_Loadout_MunitionSlots_C_CreateDeployableSlot final
{
public:
	bool                                          IsGrenade;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ItemData;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CategoryText;                                      // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UW_Loadout_MunitionSlots_Deployable_C*  OutputPin;                                         // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate; // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_2; // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_3; // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_MunitionSlots_Deployable_C*  CallFunc_Create_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_LoadoutSlot_C* LoadoutSlot, class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_4; // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_LoadoutSlot_C* LoadoutSlot, class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_5; // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot, class UW_LoadoutSlot_C* LoadoutSlot)> K2Node_CreateDelegate_OutputDelegate_6; // 0x0098(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBox*                           K2Node_Select_Default;                             // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMap<class UW_Loadout_MunitionSlots_Deployable_C*, class UClass*> K2Node_Select_Default_1;       // 0x00B8(0x0050)(ContainsInstancedReference)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_CreateDeployableSlot) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_CreateDeployableSlot");
static_assert(sizeof(W_Loadout_MunitionSlots_C_CreateDeployableSlot) == 0x000110, "Wrong size on W_Loadout_MunitionSlots_C_CreateDeployableSlot");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateDeployableSlot, IsGrenade) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_CreateDeployableSlot::IsGrenade' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateDeployableSlot, ItemData) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_CreateDeployableSlot::ItemData' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateDeployableSlot, CategoryText) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_CreateDeployableSlot::CategoryText' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateDeployableSlot, OutputPin) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_CreateDeployableSlot::OutputPin' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateDeployableSlot, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_CreateDeployableSlot::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateDeployableSlot, K2Node_CreateDelegate_OutputDelegate_1) == 0x000040, "Member 'W_Loadout_MunitionSlots_C_CreateDeployableSlot::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateDeployableSlot, K2Node_CreateDelegate_OutputDelegate_2) == 0x000050, "Member 'W_Loadout_MunitionSlots_C_CreateDeployableSlot::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateDeployableSlot, K2Node_CreateDelegate_OutputDelegate_3) == 0x000060, "Member 'W_Loadout_MunitionSlots_C_CreateDeployableSlot::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateDeployableSlot, CallFunc_Create_ReturnValue) == 0x000070, "Member 'W_Loadout_MunitionSlots_C_CreateDeployableSlot::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateDeployableSlot, K2Node_CreateDelegate_OutputDelegate_4) == 0x000078, "Member 'W_Loadout_MunitionSlots_C_CreateDeployableSlot::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateDeployableSlot, K2Node_CreateDelegate_OutputDelegate_5) == 0x000088, "Member 'W_Loadout_MunitionSlots_C_CreateDeployableSlot::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateDeployableSlot, K2Node_CreateDelegate_OutputDelegate_6) == 0x000098, "Member 'W_Loadout_MunitionSlots_C_CreateDeployableSlot::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateDeployableSlot, Temp_bool_Variable) == 0x0000A8, "Member 'W_Loadout_MunitionSlots_C_CreateDeployableSlot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateDeployableSlot, Temp_bool_Variable_1) == 0x0000A9, "Member 'W_Loadout_MunitionSlots_C_CreateDeployableSlot::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateDeployableSlot, K2Node_Select_Default) == 0x0000B0, "Member 'W_Loadout_MunitionSlots_C_CreateDeployableSlot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateDeployableSlot, K2Node_Select_Default_1) == 0x0000B8, "Member 'W_Loadout_MunitionSlots_C_CreateDeployableSlot::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateDeployableSlot, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000108, "Member 'W_Loadout_MunitionSlots_C_CreateDeployableSlot::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.CreateItemSummaryEntry
// 0x0020 (0x0020 - 0x0000)
struct W_Loadout_MunitionSlots_C_CreateItemSummaryEntry final
{
public:
	class UClass*                                 ItemData;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_Munition_SummaryEntry_C*     EntryWidget;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_Munition_SummaryEntry_C*     CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_CreateItemSummaryEntry) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_CreateItemSummaryEntry");
static_assert(sizeof(W_Loadout_MunitionSlots_C_CreateItemSummaryEntry) == 0x000020, "Wrong size on W_Loadout_MunitionSlots_C_CreateItemSummaryEntry");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateItemSummaryEntry, ItemData) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_CreateItemSummaryEntry::ItemData' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateItemSummaryEntry, Count) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_CreateItemSummaryEntry::Count' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateItemSummaryEntry, EntryWidget) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_CreateItemSummaryEntry::EntryWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateItemSummaryEntry, CallFunc_Create_ReturnValue) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_CreateItemSummaryEntry::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.CreateTacticalSlot
// 0x0080 (0x0080 - 0x0000)
struct W_Loadout_MunitionSlots_C_CreateTacticalSlot final
{
public:
	class UClass*                                 Tactical;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CategoryText;                                      // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate; // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_LoadoutSlot_C* LoadoutSlot, class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_2; // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_LoadoutSlot_C* LoadoutSlot, class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_3; // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot, class UW_LoadoutSlot_C* LoadoutSlot)> K2Node_CreateDelegate_OutputDelegate_4; // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_MunitionSlots_Deployable_C*  CallFunc_Create_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_CreateTacticalSlot) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_CreateTacticalSlot");
static_assert(sizeof(W_Loadout_MunitionSlots_C_CreateTacticalSlot) == 0x000080, "Wrong size on W_Loadout_MunitionSlots_C_CreateTacticalSlot");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateTacticalSlot, Tactical) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_CreateTacticalSlot::Tactical' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateTacticalSlot, CategoryText) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_CreateTacticalSlot::CategoryText' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateTacticalSlot, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_CreateTacticalSlot::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateTacticalSlot, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_CreateTacticalSlot::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateTacticalSlot, K2Node_CreateDelegate_OutputDelegate_2) == 0x000040, "Member 'W_Loadout_MunitionSlots_C_CreateTacticalSlot::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateTacticalSlot, K2Node_CreateDelegate_OutputDelegate_3) == 0x000050, "Member 'W_Loadout_MunitionSlots_C_CreateTacticalSlot::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateTacticalSlot, K2Node_CreateDelegate_OutputDelegate_4) == 0x000060, "Member 'W_Loadout_MunitionSlots_C_CreateTacticalSlot::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateTacticalSlot, CallFunc_Create_ReturnValue) == 0x000070, "Member 'W_Loadout_MunitionSlots_C_CreateTacticalSlot::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_CreateTacticalSlot, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000078, "Member 'W_Loadout_MunitionSlots_C_CreateTacticalSlot::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.DeployableSlotClicked
// 0x0010 (0x0010 - 0x0000)
struct W_Loadout_MunitionSlots_C_DeployableSlotClicked final
{
public:
	class UW_Loadout_MunitionSlots_Deployable_C*  TriggeringDeployableSlot;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       LoadoutSlot;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_DeployableSlotClicked) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_DeployableSlotClicked");
static_assert(sizeof(W_Loadout_MunitionSlots_C_DeployableSlotClicked) == 0x000010, "Wrong size on W_Loadout_MunitionSlots_C_DeployableSlotClicked");
static_assert(offsetof(W_Loadout_MunitionSlots_C_DeployableSlotClicked, TriggeringDeployableSlot) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_DeployableSlotClicked::TriggeringDeployableSlot' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_DeployableSlotClicked, LoadoutSlot) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_DeployableSlotClicked::LoadoutSlot' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.DeployableSlotHovered
// 0x0010 (0x0010 - 0x0000)
struct W_Loadout_MunitionSlots_C_DeployableSlotHovered final
{
public:
	class UW_LoadoutSlot_C*                       LoadoutSlot;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_MunitionSlots_Deployable_C*  TriggeringDeployableSlot;                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_DeployableSlotHovered) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_DeployableSlotHovered");
static_assert(sizeof(W_Loadout_MunitionSlots_C_DeployableSlotHovered) == 0x000010, "Wrong size on W_Loadout_MunitionSlots_C_DeployableSlotHovered");
static_assert(offsetof(W_Loadout_MunitionSlots_C_DeployableSlotHovered, LoadoutSlot) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_DeployableSlotHovered::LoadoutSlot' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_DeployableSlotHovered, TriggeringDeployableSlot) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_DeployableSlotHovered::TriggeringDeployableSlot' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.DeployableSlotUnhovered
// 0x0010 (0x0010 - 0x0000)
struct W_Loadout_MunitionSlots_C_DeployableSlotUnhovered final
{
public:
	class UW_LoadoutSlot_C*                       LoadoutSlot;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_MunitionSlots_Deployable_C*  TriggeringDeployableSlot;                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_DeployableSlotUnhovered) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_DeployableSlotUnhovered");
static_assert(sizeof(W_Loadout_MunitionSlots_C_DeployableSlotUnhovered) == 0x000010, "Wrong size on W_Loadout_MunitionSlots_C_DeployableSlotUnhovered");
static_assert(offsetof(W_Loadout_MunitionSlots_C_DeployableSlotUnhovered, LoadoutSlot) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_DeployableSlotUnhovered::LoadoutSlot' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_DeployableSlotUnhovered, TriggeringDeployableSlot) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_DeployableSlotUnhovered::TriggeringDeployableSlot' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.DisplayPrimary2
// 0x02E8 (0x02E8 - 0x0000)
struct W_Loadout_MunitionSlots_C_DisplayPrimary2 final
{
public:
	struct FSavedLoadout                          CallFunc_GetActiveLoadout_Active_Loadout;          // 0x0000(0x02E8)()
};
static_assert(alignof(W_Loadout_MunitionSlots_C_DisplayPrimary2) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_DisplayPrimary2");
static_assert(sizeof(W_Loadout_MunitionSlots_C_DisplayPrimary2) == 0x0002E8, "Wrong size on W_Loadout_MunitionSlots_C_DisplayPrimary2");
static_assert(offsetof(W_Loadout_MunitionSlots_C_DisplayPrimary2, CallFunc_GetActiveLoadout_Active_Loadout) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_DisplayPrimary2::CallFunc_GetActiveLoadout_Active_Loadout' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.DisplaySidearm2
// 0x02E8 (0x02E8 - 0x0000)
struct W_Loadout_MunitionSlots_C_DisplaySidearm2 final
{
public:
	struct FSavedLoadout                          CallFunc_GetActiveLoadout_Active_Loadout;          // 0x0000(0x02E8)()
};
static_assert(alignof(W_Loadout_MunitionSlots_C_DisplaySidearm2) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_DisplaySidearm2");
static_assert(sizeof(W_Loadout_MunitionSlots_C_DisplaySidearm2) == 0x0002E8, "Wrong size on W_Loadout_MunitionSlots_C_DisplaySidearm2");
static_assert(offsetof(W_Loadout_MunitionSlots_C_DisplaySidearm2, CallFunc_GetActiveLoadout_Active_Loadout) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_DisplaySidearm2::CallFunc_GetActiveLoadout_Active_Loadout' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.EquipGrenades
// 0x0028 (0x0028 - 0x0000)
struct W_Loadout_MunitionSlots_C_EquipGrenades final
{
public:
	class UClass*                                 ItemData;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_EquipGrenades) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_EquipGrenades");
static_assert(sizeof(W_Loadout_MunitionSlots_C_EquipGrenades) == 0x000028, "Wrong size on W_Loadout_MunitionSlots_C_EquipGrenades");
static_assert(offsetof(W_Loadout_MunitionSlots_C_EquipGrenades, ItemData) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_EquipGrenades::ItemData' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_EquipGrenades, Count) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_EquipGrenades::Count' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_EquipGrenades, CallFunc_GetLoadoutWidget_LoadoutWidget) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_EquipGrenades::CallFunc_GetLoadoutWidget_LoadoutWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_EquipGrenades, CallFunc_Array_Add_ReturnValue) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_EquipGrenades::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_EquipGrenades, Temp_int_Variable) == 0x00001C, "Member 'W_Loadout_MunitionSlots_C_EquipGrenades::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_EquipGrenades, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_EquipGrenades::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_EquipGrenades, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'W_Loadout_MunitionSlots_C_EquipGrenades::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.EquipTactical
// 0x0028 (0x0028 - 0x0000)
struct W_Loadout_MunitionSlots_C_EquipTactical final
{
public:
	class UClass*                                 ItemData;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_EquipTactical) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_EquipTactical");
static_assert(sizeof(W_Loadout_MunitionSlots_C_EquipTactical) == 0x000028, "Wrong size on W_Loadout_MunitionSlots_C_EquipTactical");
static_assert(offsetof(W_Loadout_MunitionSlots_C_EquipTactical, ItemData) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_EquipTactical::ItemData' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_EquipTactical, Count) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_EquipTactical::Count' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_EquipTactical, CallFunc_GetLoadoutWidget_LoadoutWidget) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_EquipTactical::CallFunc_GetLoadoutWidget_LoadoutWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_EquipTactical, CallFunc_Array_Add_ReturnValue) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_EquipTactical::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_EquipTactical, Temp_int_Variable) == 0x00001C, "Member 'W_Loadout_MunitionSlots_C_EquipTactical::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_EquipTactical, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_EquipTactical::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_EquipTactical, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'W_Loadout_MunitionSlots_C_EquipTactical::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.ExecuteUbergraph_W_Loadout_MunitionSlots
// 0x09C0 (0x09C0 - 0x0000)
struct W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_2;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_MunitionSlots_Deployable_C*  K2Node_CustomEvent_TriggeringDeployableSlot_2;     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       K2Node_CustomEvent_LoadoutSlot_2;                  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       K2Node_CustomEvent_LoadoutSlot_1;                  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_MunitionSlots_Deployable_C*  K2Node_CustomEvent_TriggeringDeployableSlot_1;     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       K2Node_CustomEvent_LoadoutSlot;                    // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_MunitionSlots_Deployable_C*  K2Node_CustomEvent_TriggeringDeployableSlot;       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_3;               // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_4;               // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_5;               // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_LoadoutSlot_C*                       K2Node_ComponentBoundEvent_TriggeringSlot_7;       // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       K2Node_ComponentBoundEvent_TriggeringSlot_6;       // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       K2Node_ComponentBoundEvent_TriggeringSlot_5;       // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       K2Node_ComponentBoundEvent_TriggeringSlot_4;       // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_6;               // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_7;               // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_8;               // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       K2Node_Event_CurrentSlot;                          // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_MunitionCountSlot_C*         K2Node_ComponentBoundEvent_TriggeringSlot_3;       // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_C*                           K2Node_Event_LoadoutWidget;                        // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Delay;                                // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_MunitionCountSlot_C*         K2Node_ComponentBoundEvent_TriggeringSlot_2;       // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_MunitionCountSlot_C*         K2Node_ComponentBoundEvent_TriggeringSlot_1;       // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_MunitionCountSlot_C*         K2Node_ComponentBoundEvent_TriggeringSlot;         // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       K2Node_CustomEvent_TriggeringSlot;                 // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       K2Node_CustomEvent_TriggeringSlot_1;               // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       K2Node_CustomEvent_TriggeringSlot_2;               // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_9;               // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_10;              // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMap<EItemCategory, class UClass*>            K2Node_Event_ItemCategory;                         // 0x0148(0x0050)()
	int32                                         Temp_int_Variable_2;                               // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSavedLoadout                          K2Node_Event_ActiveLoadout;                        // 0x01A0(0x02E8)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_489[0x3];                                      // 0x0489(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x048C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x049C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D[0x3];                                      // 0x049D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_OptionNameID;                         // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_6;            // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B1[0x3];                                      // 0x04B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_7;            // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_8;            // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_9;            // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPrimaryDefaultAmmoType_Output;         // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPrimaryDefaultAmmoType_SingleAmmoType; // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D9[0x3];                                      // 0x04D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetSidearmDefaultAmmoType_Output;         // 0x04E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSidearmDefaultAmmoType_SingleAmmoType; // 0x04EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED[0x3];                                      // 0x04ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget;           // 0x04F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget_1;         // 0x04F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget_2;         // 0x0500(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget_3;         // 0x0508(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget_4;         // 0x0510(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget_5;         // 0x0518(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget_6;         // 0x0520(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_1;               // 0x0528(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget_7;         // 0x0530(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget_8;         // 0x0538(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x0540(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RevealSlotEditorChildren_Delay;           // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RevealSlotEditorChildren_Delay_1;         // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_HideSlotEditorChildren_Delay;             // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_564[0x4];                                      // 0x0564(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget_9;         // 0x0568(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<TSubclassOf<class ABaseItem>>          K2Node_Select_Default;                             // 0x0570(0x0010)(ReferenceParm)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0580(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x058C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58D[0x3];                                      // 0x058D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_594[0x4];                                      // 0x0594(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget_10;        // 0x0598(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget_11;        // 0x05A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget_12;        // 0x05A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x05B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B5[0x3];                                      // 0x05B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x05B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NewAmmoType;                    // 0x05BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C4[0x4];                                      // 0x05C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_Weapon;                         // 0x05C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSavedLoadout                          CallFunc_GetActiveLoadout_Active_Loadout;          // 0x05D0(0x02E8)()
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget_13;        // 0x08B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C1[0x3];                                      // 0x08C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_7;                               // 0x08C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x08C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CC[0x4];                                      // 0x08CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget_14;        // 0x08D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget_15;        // 0x08D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x08E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E4[0x4];                                      // 0x08E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GroupAmmo_GroupedAmmo;                    // 0x08E8(0x0010)(ReferenceParm)
	TArray<class FName>                           CallFunc_GroupAmmo_GroupedAmmo_1;                  // 0x08F8(0x0010)(ReferenceParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0908(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0910(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0918(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_2;       // 0x0920(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_3;       // 0x0928(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x0930(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_2;       // 0x0938(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_4;       // 0x0940(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_3;       // 0x0948(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_4;       // 0x0950(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_5;       // 0x0958(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_6;       // 0x0960(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_5;       // 0x0968(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_6;       // 0x0970(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0978(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x097C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_2;            // 0x0980(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast; // 0x0984(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast; // 0x0988(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast_1; // 0x098C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast_1; // 0x0990(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast_2; // 0x0994(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast_3; // 0x0998(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast_2; // 0x099C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast_3; // 0x09A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast_4; // 0x09A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast_4; // 0x09A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast_5; // 0x09AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast_5; // 0x09B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast_6; // 0x09B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast_6; // 0x09B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots");
static_assert(sizeof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots) == 0x0009C0, "Wrong size on W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, EntryPoint) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_Event_Delay_1) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_ComponentBoundEvent_Button_2) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_CustomEvent_TriggeringDeployableSlot_2) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_CustomEvent_TriggeringDeployableSlot_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_CustomEvent_LoadoutSlot_2) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_CustomEvent_LoadoutSlot_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_CustomEvent_LoadoutSlot_1) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_CustomEvent_LoadoutSlot_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_CustomEvent_TriggeringDeployableSlot_1) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_CustomEvent_TriggeringDeployableSlot_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_CustomEvent_LoadoutSlot) == 0x000040, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_CustomEvent_LoadoutSlot' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_CustomEvent_TriggeringDeployableSlot) == 0x000048, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_CustomEvent_TriggeringDeployableSlot' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000050, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_ComponentBoundEvent_Button_3) == 0x000058, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_ComponentBoundEvent_Button_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_ComponentBoundEvent_Button_4) == 0x000060, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_ComponentBoundEvent_Button_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_ComponentBoundEvent_Button_5) == 0x000068, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_ComponentBoundEvent_Button_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000070, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000074, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Add_IntInt_ReturnValue_2) == 0x000078, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_ComponentBoundEvent_TriggeringSlot_7) == 0x000080, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_ComponentBoundEvent_TriggeringSlot_7' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_ComponentBoundEvent_TriggeringSlot_6) == 0x000088, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_ComponentBoundEvent_TriggeringSlot_6' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_ComponentBoundEvent_TriggeringSlot_5) == 0x000090, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_ComponentBoundEvent_TriggeringSlot_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_ComponentBoundEvent_TriggeringSlot_4) == 0x000098, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_ComponentBoundEvent_TriggeringSlot_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_ComponentBoundEvent_Button_6) == 0x0000A0, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_ComponentBoundEvent_Button_6' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, Temp_int_Variable) == 0x0000A8, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x0000AC, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_ComponentBoundEvent_Button_7) == 0x0000B0, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_ComponentBoundEvent_Button_7' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000B8, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_ComponentBoundEvent_Button_8) == 0x0000C0, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_ComponentBoundEvent_Button_8' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_Event_CurrentSlot) == 0x0000C8, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_Event_CurrentSlot' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_ComponentBoundEvent_TriggeringSlot_3) == 0x0000D0, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_ComponentBoundEvent_TriggeringSlot_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_Event_LoadoutWidget) == 0x0000D8, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_Event_LoadoutWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_Event_Delay) == 0x0000E0, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_Event_Collapse) == 0x0000E8, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, Temp_int_Variable_1) == 0x0000EC, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Not_PreBool_ReturnValue) == 0x0000F0, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_ComponentBoundEvent_TriggeringSlot_2) == 0x0000F8, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_ComponentBoundEvent_TriggeringSlot_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_ComponentBoundEvent_TriggeringSlot_1) == 0x000100, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_ComponentBoundEvent_TriggeringSlot_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_ComponentBoundEvent_TriggeringSlot) == 0x000108, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_ComponentBoundEvent_TriggeringSlot' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_CustomEvent_TriggeringSlot) == 0x000110, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_CustomEvent_TriggeringSlot' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_CustomEvent_TriggeringSlot_1) == 0x000118, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_CustomEvent_TriggeringSlot_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_CustomEvent_TriggeringSlot_2) == 0x000120, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_CustomEvent_TriggeringSlot_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_IsValid_ReturnValue) == 0x000128, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000129, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_ComponentBoundEvent_Button_9) == 0x000130, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_ComponentBoundEvent_Button_9' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000138, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_BooleanAND_ReturnValue) == 0x000139, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_ComponentBoundEvent_Button_10) == 0x000140, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_ComponentBoundEvent_Button_10' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_Event_ItemCategory) == 0x000148, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_Event_ItemCategory' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, Temp_int_Variable_2) == 0x000198, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_Event_ActiveLoadout) == 0x0001A0, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_Event_ActiveLoadout' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_Event_IsDesignTime) == 0x000488, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_Event_PageName) == 0x00048C, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, Temp_int_Variable_3) == 0x000494, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x000498, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_Event_IsGamepad) == 0x00049C, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_Event_OptionNameID) == 0x0004A0, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_Event_OptionNameID' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Subtract_IntInt_ReturnValue_6) == 0x0004A8, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Subtract_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Add_IntInt_ReturnValue_4) == 0x0004AC, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, Temp_bool_Variable) == 0x0004B0, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, Temp_int_Variable_4) == 0x0004B4, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Subtract_IntInt_ReturnValue_7) == 0x0004B8, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Subtract_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Add_IntInt_ReturnValue_5) == 0x0004BC, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Subtract_IntInt_ReturnValue_8) == 0x0004C0, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Subtract_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Add_IntInt_ReturnValue_6) == 0x0004C4, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Subtract_IntInt_ReturnValue_9) == 0x0004C8, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Subtract_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Add_IntInt_ReturnValue_7) == 0x0004CC, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_GetPrimaryDefaultAmmoType_Output) == 0x0004D0, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_GetPrimaryDefaultAmmoType_Output' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_GetPrimaryDefaultAmmoType_SingleAmmoType) == 0x0004D8, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_GetPrimaryDefaultAmmoType_SingleAmmoType' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, Temp_int_Array_Index_Variable) == 0x0004DC, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, Temp_int_Variable_5) == 0x0004E0, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_GetSidearmDefaultAmmoType_Output) == 0x0004E4, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_GetSidearmDefaultAmmoType_Output' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_GetSidearmDefaultAmmoType_SingleAmmoType) == 0x0004EC, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_GetSidearmDefaultAmmoType_SingleAmmoType' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_GetLoadoutWidget_LoadoutWidget) == 0x0004F0, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_GetLoadoutWidget_LoadoutWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_GetLoadoutWidget_LoadoutWidget_1) == 0x0004F8, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_GetLoadoutWidget_LoadoutWidget_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_GetLoadoutWidget_LoadoutWidget_2) == 0x000500, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_GetLoadoutWidget_LoadoutWidget_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_GetLoadoutWidget_LoadoutWidget_3) == 0x000508, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_GetLoadoutWidget_LoadoutWidget_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_GetLoadoutWidget_LoadoutWidget_4) == 0x000510, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_GetLoadoutWidget_LoadoutWidget_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_GetLoadoutWidget_LoadoutWidget_5) == 0x000518, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_GetLoadoutWidget_LoadoutWidget_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_GetLoadoutWidget_LoadoutWidget_6) == 0x000520, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_GetLoadoutWidget_LoadoutWidget_6' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_ComponentBoundEvent_Button_1) == 0x000528, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_GetLoadoutWidget_LoadoutWidget_7) == 0x000530, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_GetLoadoutWidget_LoadoutWidget_7' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_GetLoadoutWidget_LoadoutWidget_8) == 0x000538, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_GetLoadoutWidget_LoadoutWidget_8' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_ComponentBoundEvent_Button) == 0x000540, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_RevealSlotEditorChildren_Delay) == 0x000548, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_RevealSlotEditorChildren_Delay' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_RevealSlotEditorChildren_Delay_1) == 0x000550, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_RevealSlotEditorChildren_Delay_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_HideSlotEditorChildren_Delay) == 0x000558, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_HideSlotEditorChildren_Delay' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, Temp_int_Variable_6) == 0x000560, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_GetLoadoutWidget_LoadoutWidget_9) == 0x000568, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_GetLoadoutWidget_LoadoutWidget_9' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_Select_Default) == 0x000570, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Array_Get_Item) == 0x000580, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Array_Length_ReturnValue) == 0x000588, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x00058C, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Array_Add_ReturnValue) == 0x000590, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_GetLoadoutWidget_LoadoutWidget_10) == 0x000598, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_GetLoadoutWidget_LoadoutWidget_10' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_GetLoadoutWidget_LoadoutWidget_11) == 0x0005A0, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_GetLoadoutWidget_LoadoutWidget_11' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_GetLoadoutWidget_LoadoutWidget_12) == 0x0005A8, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_GetLoadoutWidget_LoadoutWidget_12' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, Temp_int_Loop_Counter_Variable) == 0x0005B0, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Less_IntInt_ReturnValue) == 0x0005B4, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Add_IntInt_ReturnValue_8) == 0x0005B8, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_CustomEvent_NewAmmoType) == 0x0005BC, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_CustomEvent_NewAmmoType' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, K2Node_CustomEvent_Weapon) == 0x0005C8, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::K2Node_CustomEvent_Weapon' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_GetActiveLoadout_Active_Loadout) == 0x0005D0, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_GetActiveLoadout_Active_Loadout' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_GetLoadoutWidget_LoadoutWidget_13) == 0x0008B8, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_GetLoadoutWidget_LoadoutWidget_13' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0008C0, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, Temp_int_Variable_7) == 0x0008C4, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, Temp_int_Variable_8) == 0x0008C8, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_GetLoadoutWidget_LoadoutWidget_14) == 0x0008D0, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_GetLoadoutWidget_LoadoutWidget_14' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_GetLoadoutWidget_LoadoutWidget_15) == 0x0008D8, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_GetLoadoutWidget_LoadoutWidget_15' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, Temp_int_Variable_9) == 0x0008E0, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_GroupAmmo_GroupedAmmo) == 0x0008E8, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_GroupAmmo_GroupedAmmo' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_GroupAmmo_GroupedAmmo_1) == 0x0008F8, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_GroupAmmo_GroupedAmmo_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000908, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationForward_ReturnValue) == 0x000910, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000918, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationForward_ReturnValue_2) == 0x000920, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationForward_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationForward_ReturnValue_3) == 0x000928, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationForward_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x000930, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationReverse_ReturnValue_2) == 0x000938, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationReverse_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationForward_ReturnValue_4) == 0x000940, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationForward_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationReverse_ReturnValue_3) == 0x000948, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationReverse_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationReverse_ReturnValue_4) == 0x000950, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationReverse_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationForward_ReturnValue_5) == 0x000958, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationForward_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationForward_ReturnValue_6) == 0x000960, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationForward_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationReverse_ReturnValue_5) == 0x000968, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationReverse_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationReverse_ReturnValue_6) == 0x000970, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationReverse_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Delay_Duration_ImplicitCast) == 0x000978, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Delay_Duration_ImplicitCast_1) == 0x00097C, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_Delay_Duration_ImplicitCast_2) == 0x000980, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_Delay_Duration_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast) == 0x000984, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast) == 0x000988, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast_1) == 0x00098C, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast_1) == 0x000990, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast_2) == 0x000994, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast_3) == 0x000998, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast_2) == 0x00099C, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast_3) == 0x0009A0, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast_4) == 0x0009A4, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast_4) == 0x0009A8, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast_5) == 0x0009AC, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast_5) == 0x0009B0, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast_6) == 0x0009B4, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots, CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast_6) == 0x0009B8, "Member 'W_Loadout_MunitionSlots_C_ExecuteUbergraph_W_Loadout_MunitionSlots::CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast_6' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.FreeUpGrenadeSlot
// 0x0060 (0x0060 - 0x0000)
struct W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot final
{
public:
	int32                                         HighCount;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReductionCount;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ReductionItem;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         CallFunc_Map_Keys_Keys;                            // 0x0038(0x0010)(ReferenceParm)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot");
static_assert(sizeof(W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot) == 0x000060, "Wrong size on W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot, HighCount) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot::HighCount' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot, ReductionCount) == 0x000004, "Member 'W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot::ReductionCount' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot, ReductionItem) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot::ReductionItem' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot, Temp_int_Array_Index_Variable) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot, Temp_int_Variable) == 0x00001C, "Member 'W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot, Temp_int_Variable_1) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot, CallFunc_Map_Remove_ReturnValue) == 0x00002C, "Member 'W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot, CallFunc_Array_Find_ReturnValue) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot, CallFunc_Map_Keys_Keys) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot, CallFunc_Array_Get_Item) == 0x000048, "Member 'W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot, CallFunc_Map_Find_Value) == 0x000054, "Member 'W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot, CallFunc_Greater_IntInt_ReturnValue) == 0x00005A, "Member 'W_Loadout_MunitionSlots_C_FreeUpGrenadeSlot::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.FreeUpTacticalSlot
// 0x0060 (0x0060 - 0x0000)
struct W_Loadout_MunitionSlots_C_FreeUpTacticalSlot final
{
public:
	int32                                         HighCount;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReductionCount;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ReductionItem;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         CallFunc_Map_Keys_Keys;                            // 0x0038(0x0010)(ReferenceParm)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_FreeUpTacticalSlot) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_FreeUpTacticalSlot");
static_assert(sizeof(W_Loadout_MunitionSlots_C_FreeUpTacticalSlot) == 0x000060, "Wrong size on W_Loadout_MunitionSlots_C_FreeUpTacticalSlot");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpTacticalSlot, HighCount) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_FreeUpTacticalSlot::HighCount' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpTacticalSlot, ReductionCount) == 0x000004, "Member 'W_Loadout_MunitionSlots_C_FreeUpTacticalSlot::ReductionCount' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpTacticalSlot, ReductionItem) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_FreeUpTacticalSlot::ReductionItem' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpTacticalSlot, Temp_int_Array_Index_Variable) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_FreeUpTacticalSlot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpTacticalSlot, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'W_Loadout_MunitionSlots_C_FreeUpTacticalSlot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpTacticalSlot, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_FreeUpTacticalSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpTacticalSlot, Temp_int_Variable) == 0x00001C, "Member 'W_Loadout_MunitionSlots_C_FreeUpTacticalSlot::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpTacticalSlot, Temp_int_Variable_1) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_FreeUpTacticalSlot::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpTacticalSlot, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'W_Loadout_MunitionSlots_C_FreeUpTacticalSlot::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpTacticalSlot, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_FreeUpTacticalSlot::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpTacticalSlot, CallFunc_Map_Remove_ReturnValue) == 0x00002C, "Member 'W_Loadout_MunitionSlots_C_FreeUpTacticalSlot::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpTacticalSlot, CallFunc_Array_Find_ReturnValue) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_FreeUpTacticalSlot::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpTacticalSlot, CallFunc_Map_Keys_Keys) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_FreeUpTacticalSlot::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpTacticalSlot, CallFunc_Array_Get_Item) == 0x000048, "Member 'W_Loadout_MunitionSlots_C_FreeUpTacticalSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpTacticalSlot, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'W_Loadout_MunitionSlots_C_FreeUpTacticalSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpTacticalSlot, CallFunc_Map_Find_Value) == 0x000054, "Member 'W_Loadout_MunitionSlots_C_FreeUpTacticalSlot::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpTacticalSlot, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'W_Loadout_MunitionSlots_C_FreeUpTacticalSlot::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpTacticalSlot, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'W_Loadout_MunitionSlots_C_FreeUpTacticalSlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_FreeUpTacticalSlot, CallFunc_Greater_IntInt_ReturnValue) == 0x00005A, "Member 'W_Loadout_MunitionSlots_C_FreeUpTacticalSlot::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.GetActiveLoadout
// 0x02F0 (0x02F0 - 0x0000)
struct W_Loadout_MunitionSlots_C_GetActiveLoadout final
{
public:
	struct FSavedLoadout                          Active_Loadout;                                    // 0x0000(0x02E8)(Parm, OutParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_GetActiveLoadout) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_GetActiveLoadout");
static_assert(sizeof(W_Loadout_MunitionSlots_C_GetActiveLoadout) == 0x0002F0, "Wrong size on W_Loadout_MunitionSlots_C_GetActiveLoadout");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetActiveLoadout, Active_Loadout) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_GetActiveLoadout::Active_Loadout' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetActiveLoadout, CallFunc_IsValid_ReturnValue) == 0x0002E8, "Member 'W_Loadout_MunitionSlots_C_GetActiveLoadout::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.GetAllDeployableItems
// 0x0050 (0x0050 - 0x0000)
struct W_Loadout_MunitionSlots_C_GetAllDeployableItems final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemCategory                                 Temp_byte_Variable;                                // 0x000C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULoadoutManager*                        CallFunc_Get_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABaseItem*>                      CallFunc_GetTacticalItems_ReturnValue;             // 0x0018(0x0010)(ConstParm, ReferenceParm)
	class ABaseItem*                              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemCategory                                 Temp_byte_Variable_1;                              // 0x0044(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_GetAllDeployableItems) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_GetAllDeployableItems");
static_assert(sizeof(W_Loadout_MunitionSlots_C_GetAllDeployableItems) == 0x000050, "Wrong size on W_Loadout_MunitionSlots_C_GetAllDeployableItems");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllDeployableItems, Temp_int_Array_Index_Variable) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_GetAllDeployableItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllDeployableItems, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'W_Loadout_MunitionSlots_C_GetAllDeployableItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllDeployableItems, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_GetAllDeployableItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllDeployableItems, Temp_byte_Variable) == 0x00000C, "Member 'W_Loadout_MunitionSlots_C_GetAllDeployableItems::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllDeployableItems, CallFunc_Get_ReturnValue) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_GetAllDeployableItems::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllDeployableItems, CallFunc_GetTacticalItems_ReturnValue) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_GetAllDeployableItems::CallFunc_GetTacticalItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllDeployableItems, CallFunc_Array_Get_Item) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_GetAllDeployableItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllDeployableItems, CallFunc_GetObjectClass_ReturnValue) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_GetAllDeployableItems::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllDeployableItems, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_GetAllDeployableItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllDeployableItems, CallFunc_Array_Contains_ReturnValue) == 0x00003C, "Member 'W_Loadout_MunitionSlots_C_GetAllDeployableItems::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllDeployableItems, CallFunc_Less_IntInt_ReturnValue) == 0x00003D, "Member 'W_Loadout_MunitionSlots_C_GetAllDeployableItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllDeployableItems, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'W_Loadout_MunitionSlots_C_GetAllDeployableItems::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllDeployableItems, Temp_byte_Variable_1) == 0x000044, "Member 'W_Loadout_MunitionSlots_C_GetAllDeployableItems::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllDeployableItems, CallFunc_Array_Add_ReturnValue_1) == 0x000048, "Member 'W_Loadout_MunitionSlots_C_GetAllDeployableItems::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllDeployableItems, CallFunc_Array_Contains_ReturnValue_1) == 0x00004C, "Member 'W_Loadout_MunitionSlots_C_GetAllDeployableItems::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.GetAllGrenadeTypes
// 0x0050 (0x0050 - 0x0000)
struct W_Loadout_MunitionSlots_C_GetAllGrenadeTypes final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULoadoutManager*                        CallFunc_Get_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABaseItem*>                      CallFunc_GetTacticalItems_ReturnValue;             // 0x0018(0x0010)(ConstParm, ReferenceParm)
	EItemCategory                                 Temp_byte_Variable;                                // 0x0028(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_GetAllGrenadeTypes) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_GetAllGrenadeTypes");
static_assert(sizeof(W_Loadout_MunitionSlots_C_GetAllGrenadeTypes) == 0x000050, "Wrong size on W_Loadout_MunitionSlots_C_GetAllGrenadeTypes");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllGrenadeTypes, Temp_int_Array_Index_Variable) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_GetAllGrenadeTypes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllGrenadeTypes, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'W_Loadout_MunitionSlots_C_GetAllGrenadeTypes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllGrenadeTypes, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_GetAllGrenadeTypes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllGrenadeTypes, CallFunc_Get_ReturnValue) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_GetAllGrenadeTypes::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllGrenadeTypes, CallFunc_GetTacticalItems_ReturnValue) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_GetAllGrenadeTypes::CallFunc_GetTacticalItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllGrenadeTypes, Temp_byte_Variable) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_GetAllGrenadeTypes::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllGrenadeTypes, CallFunc_Array_Get_Item) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_GetAllGrenadeTypes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllGrenadeTypes, CallFunc_GetObjectClass_ReturnValue) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_GetAllGrenadeTypes::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllGrenadeTypes, CallFunc_Array_Contains_ReturnValue) == 0x000040, "Member 'W_Loadout_MunitionSlots_C_GetAllGrenadeTypes::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllGrenadeTypes, CallFunc_Array_Add_ReturnValue) == 0x000044, "Member 'W_Loadout_MunitionSlots_C_GetAllGrenadeTypes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllGrenadeTypes, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'W_Loadout_MunitionSlots_C_GetAllGrenadeTypes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetAllGrenadeTypes, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'W_Loadout_MunitionSlots_C_GetAllGrenadeTypes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.GetLoadoutWidget
// 0x0028 (0x0028 - 0x0000)
struct W_Loadout_MunitionSlots_C_GetLoadoutWidget final
{
public:
	class UW_Loadout_C*                           LoadoutWidget_0;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_Loadout_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UW_Loadout_C*                           CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_GetLoadoutWidget) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_GetLoadoutWidget");
static_assert(sizeof(W_Loadout_MunitionSlots_C_GetLoadoutWidget) == 0x000028, "Wrong size on W_Loadout_MunitionSlots_C_GetLoadoutWidget");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetLoadoutWidget, LoadoutWidget_0) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_GetLoadoutWidget::LoadoutWidget_0' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetLoadoutWidget, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_GetLoadoutWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetLoadoutWidget, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_GetLoadoutWidget::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetLoadoutWidget, CallFunc_Array_Get_Item) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_GetLoadoutWidget::CallFunc_Array_Get_Item' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.GetPrimaryDefaultAmmoType
// 0x000C (0x000C - 0x0000)
struct W_Loadout_MunitionSlots_C_GetPrimaryDefaultAmmoType final
{
public:
	class FName                                   Output;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SingleAmmoType;                                    // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_GetPrimaryDefaultAmmoType) == 0x000004, "Wrong alignment on W_Loadout_MunitionSlots_C_GetPrimaryDefaultAmmoType");
static_assert(sizeof(W_Loadout_MunitionSlots_C_GetPrimaryDefaultAmmoType) == 0x00000C, "Wrong size on W_Loadout_MunitionSlots_C_GetPrimaryDefaultAmmoType");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetPrimaryDefaultAmmoType, Output) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_GetPrimaryDefaultAmmoType::Output' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetPrimaryDefaultAmmoType, SingleAmmoType) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_GetPrimaryDefaultAmmoType::SingleAmmoType' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.GetSidearmDefaultAmmoType
// 0x000C (0x000C - 0x0000)
struct W_Loadout_MunitionSlots_C_GetSidearmDefaultAmmoType final
{
public:
	class FName                                   Output;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SingleAmmoType;                                    // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_GetSidearmDefaultAmmoType) == 0x000004, "Wrong alignment on W_Loadout_MunitionSlots_C_GetSidearmDefaultAmmoType");
static_assert(sizeof(W_Loadout_MunitionSlots_C_GetSidearmDefaultAmmoType) == 0x00000C, "Wrong size on W_Loadout_MunitionSlots_C_GetSidearmDefaultAmmoType");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetSidearmDefaultAmmoType, Output) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_GetSidearmDefaultAmmoType::Output' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetSidearmDefaultAmmoType, SingleAmmoType) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_GetSidearmDefaultAmmoType::SingleAmmoType' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.GrenadeSlotAddCount
// 0x0020 (0x0020 - 0x0000)
struct W_Loadout_MunitionSlots_C_GrenadeSlotAddCount final
{
public:
	class UW_Loadout_MunitionSlots_Deployable_C*  TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentCount;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_GrenadeSlotAddCount) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_GrenadeSlotAddCount");
static_assert(sizeof(W_Loadout_MunitionSlots_C_GrenadeSlotAddCount) == 0x000020, "Wrong size on W_Loadout_MunitionSlots_C_GrenadeSlotAddCount");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GrenadeSlotAddCount, TriggeringSlot) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_GrenadeSlotAddCount::TriggeringSlot' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GrenadeSlotAddCount, CurrentCount) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_GrenadeSlotAddCount::CurrentCount' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GrenadeSlotAddCount, CallFunc_GetLoadoutWidget_LoadoutWidget) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_GrenadeSlotAddCount::CallFunc_GetLoadoutWidget_LoadoutWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GrenadeSlotAddCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_GrenadeSlotAddCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GrenadeSlotAddCount, CallFunc_Array_Add_ReturnValue) == 0x00001C, "Member 'W_Loadout_MunitionSlots_C_GrenadeSlotAddCount::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.GrenadeSlotMinusCount
// 0x0020 (0x0020 - 0x0000)
struct W_Loadout_MunitionSlots_C_GrenadeSlotMinusCount final
{
public:
	class UW_Loadout_MunitionSlots_Deployable_C*  TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentCount;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_GrenadeSlotMinusCount) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_GrenadeSlotMinusCount");
static_assert(sizeof(W_Loadout_MunitionSlots_C_GrenadeSlotMinusCount) == 0x000020, "Wrong size on W_Loadout_MunitionSlots_C_GrenadeSlotMinusCount");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GrenadeSlotMinusCount, TriggeringSlot) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_GrenadeSlotMinusCount::TriggeringSlot' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GrenadeSlotMinusCount, CurrentCount) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_GrenadeSlotMinusCount::CurrentCount' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GrenadeSlotMinusCount, CallFunc_GetLoadoutWidget_LoadoutWidget) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_GrenadeSlotMinusCount::CallFunc_GetLoadoutWidget_LoadoutWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GrenadeSlotMinusCount, CallFunc_Array_Find_ReturnValue) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_GrenadeSlotMinusCount::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.GroupAmmo
// 0x0070 (0x0070 - 0x0000)
struct W_Loadout_MunitionSlots_C_GroupAmmo final
{
public:
	class FName                                   AmmoType1;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AmmoCount1;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AmmoType2;                                         // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AmmoCount2;                                        // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           GroupedAmmo;                                       // 0x0018(0x0010)(Parm, OutParm)
	TArray<class FName>                           Ammo2;                                             // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           Ammo1;                                             // 0x0038(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_GroupAmmo) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_GroupAmmo");
static_assert(sizeof(W_Loadout_MunitionSlots_C_GroupAmmo) == 0x000070, "Wrong size on W_Loadout_MunitionSlots_C_GroupAmmo");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GroupAmmo, AmmoType1) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_GroupAmmo::AmmoType1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GroupAmmo, AmmoCount1) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_GroupAmmo::AmmoCount1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GroupAmmo, AmmoType2) == 0x00000C, "Member 'W_Loadout_MunitionSlots_C_GroupAmmo::AmmoType2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GroupAmmo, AmmoCount2) == 0x000014, "Member 'W_Loadout_MunitionSlots_C_GroupAmmo::AmmoCount2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GroupAmmo, GroupedAmmo) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_GroupAmmo::GroupedAmmo' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GroupAmmo, Ammo2) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_GroupAmmo::Ammo2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GroupAmmo, Ammo1) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_GroupAmmo::Ammo1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GroupAmmo, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000048, "Member 'W_Loadout_MunitionSlots_C_GroupAmmo::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GroupAmmo, Temp_int_Variable) == 0x00004C, "Member 'W_Loadout_MunitionSlots_C_GroupAmmo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GroupAmmo, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'W_Loadout_MunitionSlots_C_GroupAmmo::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GroupAmmo, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'W_Loadout_MunitionSlots_C_GroupAmmo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GroupAmmo, Temp_int_Variable_1) == 0x000058, "Member 'W_Loadout_MunitionSlots_C_GroupAmmo::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GroupAmmo, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'W_Loadout_MunitionSlots_C_GroupAmmo::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GroupAmmo, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000060, "Member 'W_Loadout_MunitionSlots_C_GroupAmmo::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GroupAmmo, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'W_Loadout_MunitionSlots_C_GroupAmmo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GroupAmmo, CallFunc_Array_Add_ReturnValue_1) == 0x000068, "Member 'W_Loadout_MunitionSlots_C_GroupAmmo::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.HandleRemainderPrimaryAmmo
// 0x0050 (0x0050 - 0x0000)
struct W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo final
{
public:
	class FName                                   CallFunc_GetPrimaryDefaultAmmoType_Output;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPrimaryDefaultAmmoType_SingleAmmoType; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GroupAmmo_GroupedAmmo;                    // 0x0010(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget;           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo");
static_assert(sizeof(W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo) == 0x000050, "Wrong size on W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo, CallFunc_GetPrimaryDefaultAmmoType_Output) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo::CallFunc_GetPrimaryDefaultAmmoType_Output' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo, CallFunc_GetPrimaryDefaultAmmoType_SingleAmmoType) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo::CallFunc_GetPrimaryDefaultAmmoType_SingleAmmoType' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo, CallFunc_GroupAmmo_GroupedAmmo) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo::CallFunc_GroupAmmo_GroupedAmmo' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo, CallFunc_GetLoadoutWidget_LoadoutWidget) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo::CallFunc_GetLoadoutWidget_LoadoutWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo, Temp_int_Variable) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo, CallFunc_NotEqual_NameName_ReturnValue) == 0x000034, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo, Temp_int_Variable_1) == 0x00003C, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo, CallFunc_Add_IntInt_ReturnValue_2) == 0x000040, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000044, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo, CallFunc_Subtract_IntInt_ReturnValue) == 0x000048, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00004C, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderPrimaryAmmo::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.HandleRemainderSidearmAmmo
// 0x0058 (0x0058 - 0x0000)
struct W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo final
{
public:
	class FName                                   CallFunc_GetSidearmDefaultAmmoType_Output;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSidearmDefaultAmmoType_SingleAmmoType; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GroupAmmo_GroupedAmmo;                    // 0x0018(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget;           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo");
static_assert(sizeof(W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo) == 0x000058, "Wrong size on W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo, CallFunc_GetSidearmDefaultAmmoType_Output) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo::CallFunc_GetSidearmDefaultAmmoType_Output' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo, CallFunc_GetSidearmDefaultAmmoType_SingleAmmoType) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo::CallFunc_GetSidearmDefaultAmmoType_SingleAmmoType' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo, CallFunc_NotEqual_NameName_ReturnValue) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo, CallFunc_GroupAmmo_GroupedAmmo) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo::CallFunc_GroupAmmo_GroupedAmmo' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo, CallFunc_GetLoadoutWidget_LoadoutWidget) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo::CallFunc_GetLoadoutWidget_LoadoutWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo, Temp_int_Variable) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo, Temp_int_Variable_1) == 0x000040, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo, CallFunc_Add_IntInt_ReturnValue_2) == 0x000044, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000048, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo, CallFunc_Subtract_IntInt_ReturnValue) == 0x00004C, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'W_Loadout_MunitionSlots_C_HandleRemainderSidearmAmmo::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.HeaderSubpageNavigation
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_HeaderSubpageNavigation final
{
public:
	class FName                                   OptionNameID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_HeaderSubpageNavigation) == 0x000004, "Wrong alignment on W_Loadout_MunitionSlots_C_HeaderSubpageNavigation");
static_assert(sizeof(W_Loadout_MunitionSlots_C_HeaderSubpageNavigation) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_HeaderSubpageNavigation");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HeaderSubpageNavigation, OptionNameID) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_HeaderSubpageNavigation::OptionNameID' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.Hide
// 0x0010 (0x0010 - 0x0000)
struct W_Loadout_MunitionSlots_C_Hide final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_Hide) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_Hide");
static_assert(sizeof(W_Loadout_MunitionSlots_C_Hide) == 0x000010, "Wrong size on W_Loadout_MunitionSlots_C_Hide");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Hide, Delay) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Hide, Collapse) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_Hide::Collapse' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.HidePrimary2
// 0x0020 (0x0020 - 0x0000)
struct W_Loadout_MunitionSlots_C_HidePrimary2 final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetPrimaryDefaultAmmoType_Output;         // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPrimaryDefaultAmmoType_SingleAmmoType; // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_HidePrimary2) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_HidePrimary2");
static_assert(sizeof(W_Loadout_MunitionSlots_C_HidePrimary2) == 0x000020, "Wrong size on W_Loadout_MunitionSlots_C_HidePrimary2");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HidePrimary2, Temp_bool_Variable) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_HidePrimary2::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HidePrimary2, Temp_byte_Variable) == 0x000001, "Member 'W_Loadout_MunitionSlots_C_HidePrimary2::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HidePrimary2, Temp_byte_Variable_1) == 0x000002, "Member 'W_Loadout_MunitionSlots_C_HidePrimary2::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HidePrimary2, CallFunc_GetPrimaryDefaultAmmoType_Output) == 0x000004, "Member 'W_Loadout_MunitionSlots_C_HidePrimary2::CallFunc_GetPrimaryDefaultAmmoType_Output' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HidePrimary2, CallFunc_GetPrimaryDefaultAmmoType_SingleAmmoType) == 0x00000C, "Member 'W_Loadout_MunitionSlots_C_HidePrimary2::CallFunc_GetPrimaryDefaultAmmoType_SingleAmmoType' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HidePrimary2, CallFunc_GetLoadoutWidget_LoadoutWidget) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_HidePrimary2::CallFunc_GetLoadoutWidget_LoadoutWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HidePrimary2, K2Node_Select_Default) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_HidePrimary2::K2Node_Select_Default' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.HideSidearm2
// 0x0018 (0x0018 - 0x0000)
struct W_Loadout_MunitionSlots_C_HideSidearm2 final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetSidearmDefaultAmmoType_Output;         // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSidearmDefaultAmmoType_SingleAmmoType; // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_HideSidearm2) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_HideSidearm2");
static_assert(sizeof(W_Loadout_MunitionSlots_C_HideSidearm2) == 0x000018, "Wrong size on W_Loadout_MunitionSlots_C_HideSidearm2");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HideSidearm2, Temp_bool_Variable) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_HideSidearm2::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HideSidearm2, Temp_byte_Variable) == 0x000001, "Member 'W_Loadout_MunitionSlots_C_HideSidearm2::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HideSidearm2, Temp_byte_Variable_1) == 0x000002, "Member 'W_Loadout_MunitionSlots_C_HideSidearm2::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HideSidearm2, CallFunc_GetSidearmDefaultAmmoType_Output) == 0x000004, "Member 'W_Loadout_MunitionSlots_C_HideSidearm2::CallFunc_GetSidearmDefaultAmmoType_Output' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HideSidearm2, CallFunc_GetSidearmDefaultAmmoType_SingleAmmoType) == 0x00000C, "Member 'W_Loadout_MunitionSlots_C_HideSidearm2::CallFunc_GetSidearmDefaultAmmoType_SingleAmmoType' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HideSidearm2, K2Node_Select_Default) == 0x00000D, "Member 'W_Loadout_MunitionSlots_C_HideSidearm2::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HideSidearm2, CallFunc_GetLoadoutWidget_LoadoutWidget) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_HideSidearm2::CallFunc_GetLoadoutWidget_LoadoutWidget' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.HideSlotEditorChildren
// 0x0080 (0x0080 - 0x0000)
struct W_Loadout_MunitionSlots_C_HideSlotEditorChildren final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FadeOffset;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FadeDelay;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_MunitionCountSlot_C*         K2Node_DynamicCast_AsW_Loadout_Munition_Count_Slot; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IReadyOrNotUI_C>       CallFunc_Hide_self_CastInput;                      // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_HideSlotEditorChildren) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_HideSlotEditorChildren");
static_assert(sizeof(W_Loadout_MunitionSlots_C_HideSlotEditorChildren) == 0x000080, "Wrong size on W_Loadout_MunitionSlots_C_HideSlotEditorChildren");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HideSlotEditorChildren, Delay) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_HideSlotEditorChildren::Delay' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HideSlotEditorChildren, FadeOffset) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_HideSlotEditorChildren::FadeOffset' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HideSlotEditorChildren, FadeDelay) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_HideSlotEditorChildren::FadeDelay' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HideSlotEditorChildren, Temp_int_Array_Index_Variable) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_HideSlotEditorChildren::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HideSlotEditorChildren, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'W_Loadout_MunitionSlots_C_HideSlotEditorChildren::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HideSlotEditorChildren, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_HideSlotEditorChildren::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HideSlotEditorChildren, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000024, "Member 'W_Loadout_MunitionSlots_C_HideSlotEditorChildren::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HideSlotEditorChildren, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_HideSlotEditorChildren::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HideSlotEditorChildren, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_HideSlotEditorChildren::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HideSlotEditorChildren, CallFunc_GetAllChildren_ReturnValue) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_HideSlotEditorChildren::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HideSlotEditorChildren, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'W_Loadout_MunitionSlots_C_HideSlotEditorChildren::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HideSlotEditorChildren, CallFunc_Array_Get_Item) == 0x000050, "Member 'W_Loadout_MunitionSlots_C_HideSlotEditorChildren::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HideSlotEditorChildren, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000058, "Member 'W_Loadout_MunitionSlots_C_HideSlotEditorChildren::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HideSlotEditorChildren, K2Node_DynamicCast_AsW_Loadout_Munition_Count_Slot) == 0x000060, "Member 'W_Loadout_MunitionSlots_C_HideSlotEditorChildren::K2Node_DynamicCast_AsW_Loadout_Munition_Count_Slot' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HideSlotEditorChildren, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'W_Loadout_MunitionSlots_C_HideSlotEditorChildren::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HideSlotEditorChildren, CallFunc_Max_ReturnValue) == 0x00006C, "Member 'W_Loadout_MunitionSlots_C_HideSlotEditorChildren::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_HideSlotEditorChildren, CallFunc_Hide_self_CastInput) == 0x000070, "Member 'W_Loadout_MunitionSlots_C_HideSlotEditorChildren::CallFunc_Hide_self_CastInput' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.Initialize Deployables
// 0x0310 (0x0310 - 0x0000)
struct W_Loadout_MunitionSlots_C_Initialize_Deployables final
{
public:
	bool                                          IsGrenades;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AvailableDeployableSlots;                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalDeployableSlots;                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UClass*, int32>                    DeployableCounts;                                  // 0x0010(0x0050)(Edit, BlueprintVisible)
	TMap<class UW_Loadout_MunitionSlots_Deployable_C*, class UClass*> DeployableSlots;               // 0x0060(0x0050)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         CurrentIndex;                                      // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CurrentDeployable;                                 // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentCount;                                      // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_Loadout_MunitionSlots_Deployable_C*> CallFunc_Map_Keys_Keys;                     // 0x00E0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UW_Loadout_MunitionSlots_Deployable_C*  CallFunc_Array_Get_Item;                           // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0110(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0160(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01B0(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01C0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01D0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01E8(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue_1;                 // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         CallFunc_Map_Values_Values;                        // 0x0208(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_222[0x2];                                      // 0x0222(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x022C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         K2Node_Select_Default;                             // 0x0248(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable_2;                               // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item_1;                         // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x026D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26E[0x2];                                      // 0x026E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UW_Loadout_MunitionSlots_Deployable_C*, class UClass*> K2Node_Select_Default_1;       // 0x0278(0x0050)(ContainsInstancedReference)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x02CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CB[0x5];                                      // 0x02CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Map_Find_Value_1;                         // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_2;                         // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x02E8(0x0018)()
	class UW_Loadout_MunitionSlots_Deployable_C*  CallFunc_CreateDeployableSlot_OutputPin;           // 0x0300(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30A[0x2];                                      // 0x030A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_Initialize_Deployables) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_Initialize_Deployables");
static_assert(sizeof(W_Loadout_MunitionSlots_C_Initialize_Deployables) == 0x000310, "Wrong size on W_Loadout_MunitionSlots_C_Initialize_Deployables");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, IsGrenades) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::IsGrenades' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, AvailableDeployableSlots) == 0x000004, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::AvailableDeployableSlots' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, TotalDeployableSlots) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::TotalDeployableSlots' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, DeployableCounts) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::DeployableCounts' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, DeployableSlots) == 0x000060, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::DeployableSlots' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CurrentIndex) == 0x0000B0, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CurrentIndex' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CurrentDeployable) == 0x0000B8, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CurrentDeployable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CurrentCount) == 0x0000C0, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CurrentCount' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, Temp_int_Loop_Counter_Variable) == 0x0000C4, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Add_IntInt_ReturnValue) == 0x0000C8, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, Temp_bool_True_if_break_was_hit_Variable) == 0x0000CC, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, Temp_int_Array_Index_Variable) == 0x0000D0, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Not_PreBool_ReturnValue) == 0x0000D4, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, Temp_int_Array_Index_Variable_1) == 0x0000D8, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000DC, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000DD, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Map_Keys_Keys) == 0x0000E0, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Map_Length_ReturnValue) == 0x0000F8, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Map_Remove_ReturnValue) == 0x0000FC, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000100, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000108, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, K2Node_MakeStruct_FormatArgumentData) == 0x000110, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, K2Node_MakeStruct_FormatArgumentData_1) == 0x000160, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, K2Node_MakeArray_Array) == 0x0001B0, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, K2Node_MakeArray_Array_1) == 0x0001C0, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Format_ReturnValue) == 0x0001D0, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Format_ReturnValue_1) == 0x0001E8, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Array_Length_ReturnValue) == 0x000200, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Map_Remove_ReturnValue_1) == 0x000204, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Map_Remove_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Map_Values_Values) == 0x000208, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Array_Contains_ReturnValue) == 0x000218, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Map_Find_Value) == 0x00021C, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Map_Find_ReturnValue) == 0x000220, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Map_Contains_ReturnValue) == 0x000221, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_SelectInt_ReturnValue) == 0x000224, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, Temp_int_Variable) == 0x000228, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, Temp_int_Variable_1) == 0x00022C, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, Temp_int_Loop_Counter_Variable_1) == 0x000230, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Less_IntInt_ReturnValue) == 0x000234, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Add_IntInt_ReturnValue_1) == 0x000238, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Greater_IntInt_ReturnValue) == 0x00023C, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Add_IntInt_ReturnValue_2) == 0x000240, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, Temp_bool_Variable) == 0x000244, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, K2Node_Select_Default) == 0x000248, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, Temp_int_Variable_2) == 0x000258, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Array_Get_Item_1) == 0x000260, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Array_Length_ReturnValue_1) == 0x000268, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Less_IntInt_ReturnValue_1) == 0x00026C, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_BooleanAND_ReturnValue) == 0x00026D, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Subtract_IntInt_ReturnValue) == 0x000270, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, Temp_bool_Variable_1) == 0x000274, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, K2Node_Select_Default_1) == 0x000278, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0002C8, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_BooleanAND_ReturnValue_1) == 0x0002C9, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, Temp_bool_Variable_2) == 0x0002CA, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Map_Find_Value_1) == 0x0002D0, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Map_Find_ReturnValue_1) == 0x0002D8, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Map_Find_Value_2) == 0x0002DC, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Map_Find_ReturnValue_2) == 0x0002E0, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, K2Node_Select_Default_2) == 0x0002E8, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_CreateDeployableSlot_OutputPin) == 0x000300, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_CreateDeployableSlot_OutputPin' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000308, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_BooleanAND_ReturnValue_2) == 0x000309, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Initialize_Deployables, CallFunc_Add_IntInt_ReturnValue_3) == 0x00030C, "Member 'W_Loadout_MunitionSlots_C_Initialize_Deployables::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.InitializeMunitionSlotEditor
// 0x0010 (0x0010 - 0x0000)
struct W_Loadout_MunitionSlots_C_InitializeMunitionSlotEditor final
{
public:
	double                                        RevealDelay;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_InitializeMunitionSlotEditor) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_InitializeMunitionSlotEditor");
static_assert(sizeof(W_Loadout_MunitionSlots_C_InitializeMunitionSlotEditor) == 0x000010, "Wrong size on W_Loadout_MunitionSlots_C_InitializeMunitionSlotEditor");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeMunitionSlotEditor, RevealDelay) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_InitializeMunitionSlotEditor::RevealDelay' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeMunitionSlotEditor, Temp_bool_Variable) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_InitializeMunitionSlotEditor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeMunitionSlotEditor, Temp_byte_Variable) == 0x000009, "Member 'W_Loadout_MunitionSlots_C_InitializeMunitionSlotEditor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeMunitionSlotEditor, Temp_byte_Variable_1) == 0x00000A, "Member 'W_Loadout_MunitionSlots_C_InitializeMunitionSlotEditor::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeMunitionSlotEditor, K2Node_Select_Default) == 0x00000B, "Member 'W_Loadout_MunitionSlots_C_InitializeMunitionSlotEditor::K2Node_Select_Default' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.InitializeMunitionSlots
// 0x0002 (0x0002 - 0x0000)
struct W_Loadout_MunitionSlots_C_InitializeMunitionSlots final
{
public:
	bool                                          RemotePlayer_0;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Preview_0;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_InitializeMunitionSlots) == 0x000001, "Wrong alignment on W_Loadout_MunitionSlots_C_InitializeMunitionSlots");
static_assert(sizeof(W_Loadout_MunitionSlots_C_InitializeMunitionSlots) == 0x000002, "Wrong size on W_Loadout_MunitionSlots_C_InitializeMunitionSlots");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeMunitionSlots, RemotePlayer_0) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_InitializeMunitionSlots::RemotePlayer_0' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeMunitionSlots, Preview_0) == 0x000001, "Member 'W_Loadout_MunitionSlots_C_InitializeMunitionSlots::Preview_0' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.InitializePreviewSummary
// 0x02E8 (0x02E8 - 0x0000)
struct W_Loadout_MunitionSlots_C_InitializePreviewSummary final
{
public:
	struct FSavedLoadout                          PreviewLoadout_0;                                  // 0x0000(0x02E8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_InitializePreviewSummary) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_InitializePreviewSummary");
static_assert(sizeof(W_Loadout_MunitionSlots_C_InitializePreviewSummary) == 0x0002E8, "Wrong size on W_Loadout_MunitionSlots_C_InitializePreviewSummary");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePreviewSummary, PreviewLoadout_0) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_InitializePreviewSummary::PreviewLoadout_0' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.InitializePrimaryAmmo
// 0x03E8 (0x03E8 - 0x0000)
struct W_Loadout_MunitionSlots_C_InitializePrimaryAmmo final
{
public:
	TArray<class FName>                           AmmoTypes;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CurrentIndex;                                      // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UnaccountedAmmoCount;                              // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AmmoType;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F[0x1];                                       // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IReadyOrNotUI_C>       CallFunc_Reveal_self_CastInput;                    // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSavedLoadout                          CallFunc_GetActiveLoadout_Active_Loadout;          // 0x00C8(0x02E8)()
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_3;        // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B2[0x2];                                      // 0x03B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetPrimaryDefaultAmmoType_Output;         // 0x03B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPrimaryDefaultAmmoType_SingleAmmoType; // 0x03BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD[0x3];                                      // 0x03BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9[0x3];                                      // 0x03C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_5;                               // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x03D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D5[0x3];                                      // 0x03D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_4;        // 0x03DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_5;        // 0x03DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x03DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DF[0x1];                                      // 0x03DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_6;        // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x03E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_InitializePrimaryAmmo");
static_assert(sizeof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo) == 0x0003E8, "Wrong size on W_Loadout_MunitionSlots_C_InitializePrimaryAmmo");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, AmmoTypes) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::AmmoTypes' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CurrentIndex) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CurrentIndex' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, UnaccountedAmmoCount) == 0x000014, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::UnaccountedAmmoCount' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, AmmoType) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::AmmoType' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, Temp_bool_True_if_break_was_hit_Variable) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000029, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_Array_Get_Item) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, Temp_int_Variable) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, Temp_bool_Variable) == 0x00003C, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00003D, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_BooleanAND_ReturnValue) == 0x00004C, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_Array_LastIndex_ReturnValue) == 0x000050, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000054, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000055, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_Subtract_IntInt_ReturnValue) == 0x000058, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00005C, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, Temp_int_Variable_1) == 0x000060, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_BooleanAND_ReturnValue_1) == 0x000064, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, Temp_int_Array_Index_Variable_1) == 0x000068, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00006C, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x00006D, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00006E, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_Array_Get_Item_1) == 0x000074, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_Array_Length_ReturnValue_1) == 0x00007C, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_Add_IntInt_ReturnValue_2) == 0x000080, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000084, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, Temp_int_Loop_Counter_Variable_1) == 0x000088, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_Less_IntInt_ReturnValue_1) == 0x00008C, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_Add_IntInt_ReturnValue_3) == 0x000090, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, Temp_int_Variable_2) == 0x000094, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000098, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_Add_IntInt_ReturnValue_4) == 0x00009C, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, Temp_int_Variable_3) == 0x0000A0, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000A4, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_Reveal_self_CastInput) == 0x0000A8, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_Reveal_self_CastInput' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, Temp_int_Variable_4) == 0x0000B8, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x0000BC, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000C0, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_GetActiveLoadout_Active_Loadout) == 0x0000C8, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_GetActiveLoadout_Active_Loadout' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x0003B0, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_EqualEqual_NameName_ReturnValue_3) == 0x0003B1, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_EqualEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_GetPrimaryDefaultAmmoType_Output) == 0x0003B4, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_GetPrimaryDefaultAmmoType_Output' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_GetPrimaryDefaultAmmoType_SingleAmmoType) == 0x0003BC, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_GetPrimaryDefaultAmmoType_SingleAmmoType' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, K2Node_Select_Default) == 0x0003C0, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_Greater_IntInt_ReturnValue) == 0x0003C8, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, Temp_int_Variable_5) == 0x0003CC, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_Add_IntInt_ReturnValue_6) == 0x0003D0, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0003D4, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_Add_IntInt_ReturnValue_7) == 0x0003D8, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_EqualEqual_NameName_ReturnValue_4) == 0x0003DC, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_EqualEqual_NameName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_EqualEqual_NameName_ReturnValue_5) == 0x0003DD, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_EqualEqual_NameName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_BooleanOR_ReturnValue) == 0x0003DE, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_Add_IntInt_ReturnValue_8) == 0x0003E0, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_EqualEqual_NameName_ReturnValue_6) == 0x0003E4, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_EqualEqual_NameName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializePrimaryAmmo, CallFunc_BooleanOR_ReturnValue_1) == 0x0003E5, "Member 'W_Loadout_MunitionSlots_C_InitializePrimaryAmmo::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.InitializeSidearmAmmo
// 0x03D8 (0x03D8 - 0x0000)
struct W_Loadout_MunitionSlots_C_InitializeSidearmAmmo final
{
public:
	TArray<class FName>                           AmmoTypes;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CurrentIndex;                                      // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UnaccountedAmmoCount;                              // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AmmoType;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSavedLoadout                          CallFunc_GetActiveLoadout_Active_Loadout;          // 0x00A0(0x02E8)()
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A[0x2];                                      // 0x038A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetSidearmDefaultAmmoType_Output;         // 0x038C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSidearmDefaultAmmoType_SingleAmmoType; // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_3;        // 0x0395(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_396[0x2];                                      // 0x0396(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x03A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A5[0x3];                                      // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_5;                               // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IReadyOrNotUI_C>       CallFunc_Reveal_self_CastInput;                    // 0x03B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_4;        // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD[0x3];                                      // 0x03CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_5;        // 0x03D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x03D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_6;        // 0x03D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x03D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_InitializeSidearmAmmo");
static_assert(sizeof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo) == 0x0003D8, "Wrong size on W_Loadout_MunitionSlots_C_InitializeSidearmAmmo");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, AmmoTypes) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::AmmoTypes' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CurrentIndex) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CurrentIndex' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, UnaccountedAmmoCount) == 0x000014, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::UnaccountedAmmoCount' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, AmmoType) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::AmmoType' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, Temp_int_Variable) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, Temp_int_Variable_1) == 0x00002C, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, Temp_bool_True_if_break_was_hit_Variable) == 0x00003C, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, Temp_int_Array_Index_Variable) == 0x000040, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_Array_Get_Item) == 0x000044, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_Not_PreBool_ReturnValue) == 0x00004C, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_BooleanAND_ReturnValue) == 0x00004D, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, Temp_bool_Variable) == 0x00004E, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000054, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000055, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_Array_LastIndex_ReturnValue) == 0x000058, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_Subtract_IntInt_ReturnValue) == 0x00005C, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000060, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000061, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_BooleanAND_ReturnValue_1) == 0x000062, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_Array_Get_Item_1) == 0x000064, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_Array_Length_ReturnValue_1) == 0x00006C, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_Not_PreBool_ReturnValue_1) == 0x000070, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000071, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000072, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000073, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, Temp_int_Loop_Counter_Variable_1) == 0x000074, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_Add_IntInt_ReturnValue_1) == 0x000078, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_Less_IntInt_ReturnValue_1) == 0x00007C, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_Add_IntInt_ReturnValue_2) == 0x000080, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, Temp_int_Variable_2) == 0x000084, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_Add_IntInt_ReturnValue_3) == 0x000088, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00008C, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x00008D, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_Add_IntInt_ReturnValue_4) == 0x000090, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, Temp_int_Variable_3) == 0x000094, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_Add_IntInt_ReturnValue_5) == 0x000098, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_GetActiveLoadout_Active_Loadout) == 0x0000A0, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_GetActiveLoadout_Active_Loadout' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000388, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x000389, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_GetSidearmDefaultAmmoType_Output) == 0x00038C, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_GetSidearmDefaultAmmoType_Output' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_GetSidearmDefaultAmmoType_SingleAmmoType) == 0x000394, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_GetSidearmDefaultAmmoType_SingleAmmoType' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_EqualEqual_NameName_ReturnValue_3) == 0x000395, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_EqualEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, K2Node_Select_Default) == 0x000398, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, Temp_int_Variable_4) == 0x0003A0, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_Greater_IntInt_ReturnValue) == 0x0003A4, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, Temp_int_Variable_5) == 0x0003A8, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_Add_IntInt_ReturnValue_6) == 0x0003AC, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0003B0, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_Reveal_self_CastInput) == 0x0003B8, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_Reveal_self_CastInput' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_Add_IntInt_ReturnValue_7) == 0x0003C8, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_EqualEqual_NameName_ReturnValue_4) == 0x0003CC, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_EqualEqual_NameName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_Add_IntInt_ReturnValue_8) == 0x0003D0, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_EqualEqual_NameName_ReturnValue_5) == 0x0003D4, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_EqualEqual_NameName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_BooleanOR_ReturnValue) == 0x0003D5, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_EqualEqual_NameName_ReturnValue_6) == 0x0003D6, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_EqualEqual_NameName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeSidearmAmmo, CallFunc_BooleanOR_ReturnValue_1) == 0x0003D7, "Member 'W_Loadout_MunitionSlots_C_InitializeSidearmAmmo::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.InitializeTacticals
// 0x0158 (0x0158 - 0x0000)
struct W_Loadout_MunitionSlots_C_InitializeTacticals final
{
public:
	TArray<TSubclassOf<class ABaseItem>>          Tacticals;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UClass*                                 CurrentTactical;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CurrentGrenade;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentCount;                                      // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget;           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0018)()
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_Loadout_MunitionSlots_Deployable_C*> CallFunc_Map_Keys_Keys;                     // 0x00F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UW_Loadout_MunitionSlots_Deployable_C*  CallFunc_Array_Get_Item;                           // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item_1;                         // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_126[0x2];                                      // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x012C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Map_Find_Value;                           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_147[0x1];                                      // 0x0147(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_2;                         // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_InitializeTacticals) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_InitializeTacticals");
static_assert(sizeof(W_Loadout_MunitionSlots_C_InitializeTacticals) == 0x000158, "Wrong size on W_Loadout_MunitionSlots_C_InitializeTacticals");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, Tacticals) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::Tacticals' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CurrentTactical) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CurrentTactical' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CurrentIndex) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CurrentIndex' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CurrentGrenade) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CurrentGrenade' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CurrentCount) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CurrentCount' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, Temp_bool_True_if_break_was_hit_Variable) == 0x00003C, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, Temp_int_Array_Index_Variable) == 0x000040, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Not_PreBool_ReturnValue) == 0x000044, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, Temp_int_Variable) == 0x000048, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, Temp_int_Array_Index_Variable_1) == 0x00004C, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_GetLoadoutWidget_LoadoutWidget) == 0x000050, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_GetLoadoutWidget_LoadoutWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Map_Length_ReturnValue) == 0x000058, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000060, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B8, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, K2Node_MakeArray_Array) == 0x0000C0, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000E8, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Map_Keys_Keys) == 0x0000F0, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Array_Get_Item) == 0x000100, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Subtract_IntInt_ReturnValue) == 0x000108, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Array_Length_ReturnValue) == 0x00010C, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Less_IntInt_ReturnValue) == 0x000110, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Map_Contains_ReturnValue) == 0x000111, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Array_Get_Item_1) == 0x000118, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Array_Length_ReturnValue_1) == 0x000120, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Less_IntInt_ReturnValue_1) == 0x000124, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_BooleanAND_ReturnValue) == 0x000125, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, Temp_int_Variable_1) == 0x000128, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, Temp_int_Variable_2) == 0x00012C, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Map_Find_Value) == 0x000130, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Map_Find_ReturnValue) == 0x000138, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Add_IntInt_ReturnValue_2) == 0x00013C, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Map_Find_Value_1) == 0x000140, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Map_Find_ReturnValue_1) == 0x000144, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000145, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_BooleanAND_ReturnValue_1) == 0x000146, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Add_IntInt_ReturnValue_3) == 0x000148, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Map_Find_Value_2) == 0x00014C, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Map_Find_ReturnValue_2) == 0x000150, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_InitializeTacticals, CallFunc_Map_Remove_ReturnValue) == 0x000151, "Member 'W_Loadout_MunitionSlots_C_InitializeTacticals::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_MunitionSlots_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_PreConstruct) == 0x000001, "Wrong alignment on W_Loadout_MunitionSlots_C_PreConstruct");
static_assert(sizeof(W_Loadout_MunitionSlots_C_PreConstruct) == 0x000001, "Wrong size on W_Loadout_MunitionSlots_C_PreConstruct");
static_assert(offsetof(W_Loadout_MunitionSlots_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.ReplaceGrenades
// 0x0040 (0x0040 - 0x0000)
struct W_Loadout_MunitionSlots_C_ReplaceGrenades final
{
public:
	class UClass*                                 CurrentGrenade;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 NewGrenade;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_ReplaceGrenades) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_ReplaceGrenades");
static_assert(sizeof(W_Loadout_MunitionSlots_C_ReplaceGrenades) == 0x000040, "Wrong size on W_Loadout_MunitionSlots_C_ReplaceGrenades");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceGrenades, CurrentGrenade) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_ReplaceGrenades::CurrentGrenade' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceGrenades, NewGrenade) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_ReplaceGrenades::NewGrenade' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceGrenades, Count) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_ReplaceGrenades::Count' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceGrenades, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'W_Loadout_MunitionSlots_C_ReplaceGrenades::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceGrenades, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_ReplaceGrenades::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceGrenades, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'W_Loadout_MunitionSlots_C_ReplaceGrenades::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceGrenades, Temp_int_Array_Index_Variable) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_ReplaceGrenades::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceGrenades, Temp_int_Variable) == 0x000024, "Member 'W_Loadout_MunitionSlots_C_ReplaceGrenades::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceGrenades, CallFunc_Array_RemoveItem_ReturnValue) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_ReplaceGrenades::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceGrenades, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'W_Loadout_MunitionSlots_C_ReplaceGrenades::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceGrenades, CallFunc_Array_Get_Item) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_ReplaceGrenades::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceGrenades, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_ReplaceGrenades::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceGrenades, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x00003C, "Member 'W_Loadout_MunitionSlots_C_ReplaceGrenades::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceGrenades, CallFunc_Less_IntInt_ReturnValue) == 0x00003D, "Member 'W_Loadout_MunitionSlots_C_ReplaceGrenades::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.ReplacePrimaryAmmo
// 0x0058 (0x0058 - 0x0000)
struct W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo final
{
public:
	class FName                                   CurrentAmmoType;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NewAmmoType;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget;           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo");
static_assert(sizeof(W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo) == 0x000058, "Wrong size on W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo, CurrentAmmoType) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo::CurrentAmmoType' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo, NewAmmoType) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo::NewAmmoType' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo, Count) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo::Count' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo, Temp_int_Variable) == 0x000014, "Member 'W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo, CallFunc_NotEqual_NameName_ReturnValue) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo, Temp_int_Variable_1) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo, CallFunc_GetLoadoutWidget_LoadoutWidget) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo::CallFunc_GetLoadoutWidget_LoadoutWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo, CallFunc_Array_Add_ReturnValue) == 0x00003C, "Member 'W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo, CallFunc_Array_RemoveItem_ReturnValue) == 0x000040, "Member 'W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo, CallFunc_Add_IntInt_ReturnValue_2) == 0x000044, "Member 'W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo, CallFunc_Array_Get_Item) == 0x000048, "Member 'W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000054, "Member 'W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo, CallFunc_Less_IntInt_ReturnValue) == 0x000055, "Member 'W_Loadout_MunitionSlots_C_ReplacePrimaryAmmo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.ReplaceSidearmAmmo
// 0x0058 (0x0058 - 0x0000)
struct W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo final
{
public:
	class FName                                   CurrentAmmoType;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NewAmmoType;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget;           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo");
static_assert(sizeof(W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo) == 0x000058, "Wrong size on W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo, CurrentAmmoType) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo::CurrentAmmoType' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo, NewAmmoType) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo::NewAmmoType' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo, Count) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo::Count' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo, Temp_int_Variable) == 0x000014, "Member 'W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo, CallFunc_NotEqual_NameName_ReturnValue) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo, Temp_int_Variable_1) == 0x00001C, "Member 'W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo, CallFunc_GetLoadoutWidget_LoadoutWidget) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo::CallFunc_GetLoadoutWidget_LoadoutWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo, CallFunc_Array_Add_ReturnValue) == 0x00003C, "Member 'W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo, CallFunc_Array_RemoveItem_ReturnValue) == 0x000040, "Member 'W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo, CallFunc_Array_Get_Item) == 0x000044, "Member 'W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000050, "Member 'W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo, CallFunc_Add_IntInt_ReturnValue_2) == 0x000054, "Member 'W_Loadout_MunitionSlots_C_ReplaceSidearmAmmo::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.ReplaceTactical
// 0x0040 (0x0040 - 0x0000)
struct W_Loadout_MunitionSlots_C_ReplaceTactical final
{
public:
	class UClass*                                 CurrentTactical;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 NewTactical;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_ReplaceTactical) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_ReplaceTactical");
static_assert(sizeof(W_Loadout_MunitionSlots_C_ReplaceTactical) == 0x000040, "Wrong size on W_Loadout_MunitionSlots_C_ReplaceTactical");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceTactical, CurrentTactical) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_ReplaceTactical::CurrentTactical' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceTactical, NewTactical) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_ReplaceTactical::NewTactical' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceTactical, Count) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_ReplaceTactical::Count' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceTactical, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'W_Loadout_MunitionSlots_C_ReplaceTactical::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceTactical, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_ReplaceTactical::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceTactical, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'W_Loadout_MunitionSlots_C_ReplaceTactical::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceTactical, Temp_int_Array_Index_Variable) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_ReplaceTactical::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceTactical, Temp_int_Variable) == 0x000024, "Member 'W_Loadout_MunitionSlots_C_ReplaceTactical::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceTactical, CallFunc_Array_RemoveItem_ReturnValue) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_ReplaceTactical::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceTactical, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'W_Loadout_MunitionSlots_C_ReplaceTactical::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceTactical, CallFunc_Array_Get_Item) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_ReplaceTactical::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceTactical, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_ReplaceTactical::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceTactical, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x00003C, "Member 'W_Loadout_MunitionSlots_C_ReplaceTactical::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_ReplaceTactical, CallFunc_Less_IntInt_ReturnValue) == 0x00003D, "Member 'W_Loadout_MunitionSlots_C_ReplaceTactical::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.Reveal
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_Reveal final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_Reveal) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_Reveal");
static_assert(sizeof(W_Loadout_MunitionSlots_C_Reveal) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_Reveal");
static_assert(offsetof(W_Loadout_MunitionSlots_C_Reveal, Delay) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_Reveal::Delay' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.RevealSlotEditorChildren
// 0x0080 (0x0080 - 0x0000)
struct W_Loadout_MunitionSlots_C_RevealSlotEditorChildren final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FadeOffset;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FadeDelay;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_MunitionCountSlot_C*         K2Node_DynamicCast_AsW_Loadout_Munition_Count_Slot; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IReadyOrNotUI_C>       CallFunc_Reveal_self_CastInput;                    // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_RevealSlotEditorChildren) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_RevealSlotEditorChildren");
static_assert(sizeof(W_Loadout_MunitionSlots_C_RevealSlotEditorChildren) == 0x000080, "Wrong size on W_Loadout_MunitionSlots_C_RevealSlotEditorChildren");
static_assert(offsetof(W_Loadout_MunitionSlots_C_RevealSlotEditorChildren, Delay) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_RevealSlotEditorChildren::Delay' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_RevealSlotEditorChildren, FadeOffset) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_RevealSlotEditorChildren::FadeOffset' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_RevealSlotEditorChildren, FadeDelay) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_RevealSlotEditorChildren::FadeDelay' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_RevealSlotEditorChildren, Temp_int_Array_Index_Variable) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_RevealSlotEditorChildren::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_RevealSlotEditorChildren, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_RevealSlotEditorChildren::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_RevealSlotEditorChildren, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_RevealSlotEditorChildren::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_RevealSlotEditorChildren, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_RevealSlotEditorChildren::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_RevealSlotEditorChildren, CallFunc_GetAllChildren_ReturnValue) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_RevealSlotEditorChildren::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_RevealSlotEditorChildren, CallFunc_Array_Get_Item) == 0x000048, "Member 'W_Loadout_MunitionSlots_C_RevealSlotEditorChildren::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_RevealSlotEditorChildren, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'W_Loadout_MunitionSlots_C_RevealSlotEditorChildren::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_RevealSlotEditorChildren, K2Node_DynamicCast_AsW_Loadout_Munition_Count_Slot) == 0x000058, "Member 'W_Loadout_MunitionSlots_C_RevealSlotEditorChildren::K2Node_DynamicCast_AsW_Loadout_Munition_Count_Slot' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_RevealSlotEditorChildren, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'W_Loadout_MunitionSlots_C_RevealSlotEditorChildren::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_RevealSlotEditorChildren, CallFunc_Less_IntInt_ReturnValue) == 0x000061, "Member 'W_Loadout_MunitionSlots_C_RevealSlotEditorChildren::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_RevealSlotEditorChildren, CallFunc_Reveal_self_CastInput) == 0x000068, "Member 'W_Loadout_MunitionSlots_C_RevealSlotEditorChildren::CallFunc_Reveal_self_CastInput' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_RevealSlotEditorChildren, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'W_Loadout_MunitionSlots_C_RevealSlotEditorChildren::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.SelectGrenadeType
// 0x0048 (0x0048 - 0x0000)
struct W_Loadout_MunitionSlots_C_SelectGrenadeType final
{
public:
	class UClass*                                 ItemData;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         ReductionCount;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ReductionItem;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentSlotCount;                                  // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CurrentSlotItem;                                   // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Map_Find_Value;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_SelectGrenadeType) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_SelectGrenadeType");
static_assert(sizeof(W_Loadout_MunitionSlots_C_SelectGrenadeType) == 0x000048, "Wrong size on W_Loadout_MunitionSlots_C_SelectGrenadeType");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SelectGrenadeType, ItemData) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_SelectGrenadeType::ItemData' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SelectGrenadeType, ReductionCount) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_SelectGrenadeType::ReductionCount' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SelectGrenadeType, ReductionItem) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_SelectGrenadeType::ReductionItem' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SelectGrenadeType, CurrentSlotCount) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_SelectGrenadeType::CurrentSlotCount' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SelectGrenadeType, CurrentSlotItem) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_SelectGrenadeType::CurrentSlotItem' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SelectGrenadeType, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_SelectGrenadeType::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SelectGrenadeType, CallFunc_Map_Remove_ReturnValue) == 0x000029, "Member 'W_Loadout_MunitionSlots_C_SelectGrenadeType::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SelectGrenadeType, CallFunc_Map_Find_Value) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_SelectGrenadeType::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SelectGrenadeType, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_SelectGrenadeType::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SelectGrenadeType, CallFunc_Map_Find_Value_1) == 0x00003C, "Member 'W_Loadout_MunitionSlots_C_SelectGrenadeType::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SelectGrenadeType, CallFunc_Map_Find_ReturnValue_1) == 0x000040, "Member 'W_Loadout_MunitionSlots_C_SelectGrenadeType::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.SelectTacticalType
// 0x0038 (0x0038 - 0x0000)
struct W_Loadout_MunitionSlots_C_SelectTacticalType final
{
public:
	class UClass*                                 ItemData;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SelectedItem;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentSlotCount;                                  // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CurrentSlotItem;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Map_Find_Value_1;                         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_SelectTacticalType) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_SelectTacticalType");
static_assert(sizeof(W_Loadout_MunitionSlots_C_SelectTacticalType) == 0x000038, "Wrong size on W_Loadout_MunitionSlots_C_SelectTacticalType");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SelectTacticalType, ItemData) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_SelectTacticalType::ItemData' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SelectTacticalType, SelectedItem) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_SelectTacticalType::SelectedItem' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SelectTacticalType, CurrentSlotCount) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_SelectTacticalType::CurrentSlotCount' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SelectTacticalType, CurrentSlotItem) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_SelectTacticalType::CurrentSlotItem' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SelectTacticalType, CallFunc_Map_Find_Value) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_SelectTacticalType::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SelectTacticalType, CallFunc_Map_Find_ReturnValue) == 0x000024, "Member 'W_Loadout_MunitionSlots_C_SelectTacticalType::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SelectTacticalType, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x000025, "Member 'W_Loadout_MunitionSlots_C_SelectTacticalType::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SelectTacticalType, CallFunc_Map_Remove_ReturnValue) == 0x000026, "Member 'W_Loadout_MunitionSlots_C_SelectTacticalType::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SelectTacticalType, CallFunc_Map_Find_Value_1) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_SelectTacticalType::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SelectTacticalType, CallFunc_Map_Find_ReturnValue_1) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_SelectTacticalType::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.SetGrenadeAddButtonVis
// 0x0030 (0x0030 - 0x0000)
struct W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis final
{
public:
	TArray<int32>                                 CallFunc_Map_Values_Values;                        // 0x0000(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MaxOfIntArray_IndexOfMaxValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfIntArray_MaxValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis");
static_assert(sizeof(W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis) == 0x000030, "Wrong size on W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis, CallFunc_Map_Values_Values) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis, CallFunc_MaxOfIntArray_IndexOfMaxValue) == 0x000014, "Member 'W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis::CallFunc_MaxOfIntArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis, CallFunc_MaxOfIntArray_MaxValue) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis::CallFunc_MaxOfIntArray_MaxValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member 'W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis, CallFunc_Not_PreBool_ReturnValue) == 0x000025, "Member 'W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis, CallFunc_Map_Length_ReturnValue) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00002C, "Member 'W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis, CallFunc_BooleanAND_ReturnValue_1) == 0x00002D, "Member 'W_Loadout_MunitionSlots_C_SetGrenadeAddButtonVis::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_MunitionSlots_C_SetInputMode final
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_SetInputMode) == 0x000001, "Wrong alignment on W_Loadout_MunitionSlots_C_SetInputMode");
static_assert(sizeof(W_Loadout_MunitionSlots_C_SetInputMode) == 0x000001, "Wrong size on W_Loadout_MunitionSlots_C_SetInputMode");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.SetLoadoutWidget
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_SetLoadoutWidget final
{
public:
	class UW_Loadout_C*                           LoadoutWidget_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_SetLoadoutWidget) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_SetLoadoutWidget");
static_assert(sizeof(W_Loadout_MunitionSlots_C_SetLoadoutWidget) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_SetLoadoutWidget");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetLoadoutWidget, LoadoutWidget_0) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_SetLoadoutWidget::LoadoutWidget_0' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.SetPrimaryAmmoCount1
// 0x0004 (0x0004 - 0x0000)
struct W_Loadout_MunitionSlots_C_SetPrimaryAmmoCount1 final
{
public:
	int32                                         AmmoCount;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_SetPrimaryAmmoCount1) == 0x000004, "Wrong alignment on W_Loadout_MunitionSlots_C_SetPrimaryAmmoCount1");
static_assert(sizeof(W_Loadout_MunitionSlots_C_SetPrimaryAmmoCount1) == 0x000004, "Wrong size on W_Loadout_MunitionSlots_C_SetPrimaryAmmoCount1");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetPrimaryAmmoCount1, AmmoCount) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_SetPrimaryAmmoCount1::AmmoCount' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.SetPrimaryAmmoCount2
// 0x0004 (0x0004 - 0x0000)
struct W_Loadout_MunitionSlots_C_SetPrimaryAmmoCount2 final
{
public:
	int32                                         AmmoCount;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_SetPrimaryAmmoCount2) == 0x000004, "Wrong alignment on W_Loadout_MunitionSlots_C_SetPrimaryAmmoCount2");
static_assert(sizeof(W_Loadout_MunitionSlots_C_SetPrimaryAmmoCount2) == 0x000004, "Wrong size on W_Loadout_MunitionSlots_C_SetPrimaryAmmoCount2");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetPrimaryAmmoCount2, AmmoCount) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_SetPrimaryAmmoCount2::AmmoCount' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.SetPrimaryAmmoType1
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_SetPrimaryAmmoType1 final
{
public:
	class FName                                   AmmoType;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_SetPrimaryAmmoType1) == 0x000004, "Wrong alignment on W_Loadout_MunitionSlots_C_SetPrimaryAmmoType1");
static_assert(sizeof(W_Loadout_MunitionSlots_C_SetPrimaryAmmoType1) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_SetPrimaryAmmoType1");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetPrimaryAmmoType1, AmmoType) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_SetPrimaryAmmoType1::AmmoType' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.SetSidearmAmmoCount1
// 0x0004 (0x0004 - 0x0000)
struct W_Loadout_MunitionSlots_C_SetSidearmAmmoCount1 final
{
public:
	int32                                         AmmoCount;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_SetSidearmAmmoCount1) == 0x000004, "Wrong alignment on W_Loadout_MunitionSlots_C_SetSidearmAmmoCount1");
static_assert(sizeof(W_Loadout_MunitionSlots_C_SetSidearmAmmoCount1) == 0x000004, "Wrong size on W_Loadout_MunitionSlots_C_SetSidearmAmmoCount1");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetSidearmAmmoCount1, AmmoCount) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_SetSidearmAmmoCount1::AmmoCount' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.SetSidearmAmmoCount2
// 0x0004 (0x0004 - 0x0000)
struct W_Loadout_MunitionSlots_C_SetSidearmAmmoCount2 final
{
public:
	int32                                         AmmoCount;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_SetSidearmAmmoCount2) == 0x000004, "Wrong alignment on W_Loadout_MunitionSlots_C_SetSidearmAmmoCount2");
static_assert(sizeof(W_Loadout_MunitionSlots_C_SetSidearmAmmoCount2) == 0x000004, "Wrong size on W_Loadout_MunitionSlots_C_SetSidearmAmmoCount2");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetSidearmAmmoCount2, AmmoCount) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_SetSidearmAmmoCount2::AmmoCount' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.SetTacticalAddButtonVis
// 0x0030 (0x0030 - 0x0000)
struct W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis final
{
public:
	TArray<int32>                                 CallFunc_Map_Values_Values;                        // 0x0000(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MaxOfIntArray_IndexOfMaxValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfIntArray_MaxValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis");
static_assert(sizeof(W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis) == 0x000030, "Wrong size on W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis, CallFunc_Map_Values_Values) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis, CallFunc_MaxOfIntArray_IndexOfMaxValue) == 0x000014, "Member 'W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis::CallFunc_MaxOfIntArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis, CallFunc_MaxOfIntArray_MaxValue) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis::CallFunc_MaxOfIntArray_MaxValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member 'W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis, CallFunc_Not_PreBool_ReturnValue) == 0x000025, "Member 'W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis, CallFunc_Map_Length_ReturnValue) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00002C, "Member 'W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis, CallFunc_BooleanAND_ReturnValue_1) == 0x00002D, "Member 'W_Loadout_MunitionSlots_C_SetTacticalAddButtonVis::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.SetupBinds
// 0x0148 (0x0148 - 0x0000)
struct W_Loadout_MunitionSlots_C_SetupBinds final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_7; // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_8; // 0x0080(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_9; // 0x0090(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_10; // 0x00A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x00B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_12;           // 0x00C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_13;           // 0x00D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget;           // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_LoadoutSlot_C* LoadoutSlot, class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_14; // 0x00E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_LoadoutSlot_C* LoadoutSlot, class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_15; // 0x00F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot, class UW_LoadoutSlot_C* LoadoutSlot)> K2Node_CreateDelegate_OutputDelegate_16; // 0x0108(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_17; // 0x0118(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_18; // 0x0128(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName AmmoType, class UClass* Weapon)> K2Node_CreateDelegate_OutputDelegate_19; // 0x0138(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_SetupBinds) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_SetupBinds");
static_assert(sizeof(W_Loadout_MunitionSlots_C_SetupBinds) == 0x000148, "Wrong size on W_Loadout_MunitionSlots_C_SetupBinds");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetupBinds, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_SetupBinds::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetupBinds, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_SetupBinds::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetupBinds, K2Node_CreateDelegate_OutputDelegate_2) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_SetupBinds::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetupBinds, K2Node_CreateDelegate_OutputDelegate_3) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_SetupBinds::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetupBinds, K2Node_CreateDelegate_OutputDelegate_4) == 0x000040, "Member 'W_Loadout_MunitionSlots_C_SetupBinds::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetupBinds, K2Node_CreateDelegate_OutputDelegate_5) == 0x000050, "Member 'W_Loadout_MunitionSlots_C_SetupBinds::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetupBinds, K2Node_CreateDelegate_OutputDelegate_6) == 0x000060, "Member 'W_Loadout_MunitionSlots_C_SetupBinds::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetupBinds, K2Node_CreateDelegate_OutputDelegate_7) == 0x000070, "Member 'W_Loadout_MunitionSlots_C_SetupBinds::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetupBinds, K2Node_CreateDelegate_OutputDelegate_8) == 0x000080, "Member 'W_Loadout_MunitionSlots_C_SetupBinds::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetupBinds, K2Node_CreateDelegate_OutputDelegate_9) == 0x000090, "Member 'W_Loadout_MunitionSlots_C_SetupBinds::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetupBinds, K2Node_CreateDelegate_OutputDelegate_10) == 0x0000A0, "Member 'W_Loadout_MunitionSlots_C_SetupBinds::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetupBinds, K2Node_CreateDelegate_OutputDelegate_11) == 0x0000B0, "Member 'W_Loadout_MunitionSlots_C_SetupBinds::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetupBinds, K2Node_CreateDelegate_OutputDelegate_12) == 0x0000C0, "Member 'W_Loadout_MunitionSlots_C_SetupBinds::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetupBinds, K2Node_CreateDelegate_OutputDelegate_13) == 0x0000D0, "Member 'W_Loadout_MunitionSlots_C_SetupBinds::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetupBinds, CallFunc_GetLoadoutWidget_LoadoutWidget) == 0x0000E0, "Member 'W_Loadout_MunitionSlots_C_SetupBinds::CallFunc_GetLoadoutWidget_LoadoutWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetupBinds, K2Node_CreateDelegate_OutputDelegate_14) == 0x0000E8, "Member 'W_Loadout_MunitionSlots_C_SetupBinds::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetupBinds, K2Node_CreateDelegate_OutputDelegate_15) == 0x0000F8, "Member 'W_Loadout_MunitionSlots_C_SetupBinds::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetupBinds, K2Node_CreateDelegate_OutputDelegate_16) == 0x000108, "Member 'W_Loadout_MunitionSlots_C_SetupBinds::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetupBinds, K2Node_CreateDelegate_OutputDelegate_17) == 0x000118, "Member 'W_Loadout_MunitionSlots_C_SetupBinds::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetupBinds, K2Node_CreateDelegate_OutputDelegate_18) == 0x000128, "Member 'W_Loadout_MunitionSlots_C_SetupBinds::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SetupBinds, K2Node_CreateDelegate_OutputDelegate_19) == 0x000138, "Member 'W_Loadout_MunitionSlots_C_SetupBinds::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.SlotClicked
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_SlotClicked final
{
public:
	class UW_LoadoutSlot_C*                       TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_SlotClicked) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_SlotClicked");
static_assert(sizeof(W_Loadout_MunitionSlots_C_SlotClicked) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_SlotClicked");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SlotClicked, TriggeringSlot) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_SlotClicked::TriggeringSlot' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.SlotHovered
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_SlotHovered final
{
public:
	class UW_LoadoutSlot_C*                       TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_SlotHovered) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_SlotHovered");
static_assert(sizeof(W_Loadout_MunitionSlots_C_SlotHovered) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_SlotHovered");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SlotHovered, TriggeringSlot) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_SlotHovered::TriggeringSlot' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.SlotUnhovered
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_SlotUnhovered final
{
public:
	class UW_LoadoutSlot_C*                       TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_SlotUnhovered) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_SlotUnhovered");
static_assert(sizeof(W_Loadout_MunitionSlots_C_SlotUnhovered) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_SlotUnhovered");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SlotUnhovered, TriggeringSlot) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_SlotUnhovered::TriggeringSlot' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.SplitSlots
// 0x0028 (0x0028 - 0x0000)
struct W_Loadout_MunitionSlots_C_SplitSlots final
{
public:
	int32                                         TotalSlots_0;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewStack;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OriginalStack;                                     // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_SplitSlots) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_SplitSlots");
static_assert(sizeof(W_Loadout_MunitionSlots_C_SplitSlots) == 0x000028, "Wrong size on W_Loadout_MunitionSlots_C_SplitSlots");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SplitSlots, TotalSlots_0) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_SplitSlots::TotalSlots_0' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SplitSlots, NewStack) == 0x000004, "Member 'W_Loadout_MunitionSlots_C_SplitSlots::NewStack' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SplitSlots, OriginalStack) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_SplitSlots::OriginalStack' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SplitSlots, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_SplitSlots::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SplitSlots, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_SplitSlots::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SplitSlots, CallFunc_FCeil_ReturnValue) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_SplitSlots::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SplitSlots, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'W_Loadout_MunitionSlots_C_SplitSlots::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.SwapWeaponAmmo
// 0x04E0 (0x04E0 - 0x0000)
struct W_Loadout_MunitionSlots_C_SwapWeaponAmmo final
{
public:
	bool                                          Sidearm;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           NewAmmo;                                           // 0x0008(0x0010)(Edit, BlueprintVisible)
	class UClass*                                 NewWeapon;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget;           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_GetAmmoLookupDataTable_ReturnValue;       // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSavedLoadout                          CallFunc_GetActiveLoadout_Active_Loadout;          // 0x0058(0x02E8)()
	TArray<class FName>                           K2Node_Select_Default;                             // 0x0340(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default_1;                           // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAmmoTypeData                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0360(0x0170)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x3];                                      // 0x04D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_SwapWeaponAmmo) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_SwapWeaponAmmo");
static_assert(sizeof(W_Loadout_MunitionSlots_C_SwapWeaponAmmo) == 0x0004E0, "Wrong size on W_Loadout_MunitionSlots_C_SwapWeaponAmmo");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SwapWeaponAmmo, Sidearm) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_SwapWeaponAmmo::Sidearm' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SwapWeaponAmmo, NewAmmo) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_SwapWeaponAmmo::NewAmmo' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SwapWeaponAmmo, NewWeapon) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_SwapWeaponAmmo::NewWeapon' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SwapWeaponAmmo, Temp_bool_Variable) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_SwapWeaponAmmo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SwapWeaponAmmo, Temp_int_Array_Index_Variable) == 0x000024, "Member 'W_Loadout_MunitionSlots_C_SwapWeaponAmmo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SwapWeaponAmmo, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_SwapWeaponAmmo::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SwapWeaponAmmo, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'W_Loadout_MunitionSlots_C_SwapWeaponAmmo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SwapWeaponAmmo, CallFunc_GetLoadoutWidget_LoadoutWidget) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_SwapWeaponAmmo::CallFunc_GetLoadoutWidget_LoadoutWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SwapWeaponAmmo, Temp_bool_Variable_1) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_SwapWeaponAmmo::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SwapWeaponAmmo, Temp_int_Variable) == 0x00003C, "Member 'W_Loadout_MunitionSlots_C_SwapWeaponAmmo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SwapWeaponAmmo, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'W_Loadout_MunitionSlots_C_SwapWeaponAmmo::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SwapWeaponAmmo, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'W_Loadout_MunitionSlots_C_SwapWeaponAmmo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SwapWeaponAmmo, CallFunc_GetAmmoLookupDataTable_ReturnValue) == 0x000048, "Member 'W_Loadout_MunitionSlots_C_SwapWeaponAmmo::CallFunc_GetAmmoLookupDataTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SwapWeaponAmmo, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'W_Loadout_MunitionSlots_C_SwapWeaponAmmo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SwapWeaponAmmo, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'W_Loadout_MunitionSlots_C_SwapWeaponAmmo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SwapWeaponAmmo, CallFunc_GetActiveLoadout_Active_Loadout) == 0x000058, "Member 'W_Loadout_MunitionSlots_C_SwapWeaponAmmo::CallFunc_GetActiveLoadout_Active_Loadout' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SwapWeaponAmmo, K2Node_Select_Default) == 0x000340, "Member 'W_Loadout_MunitionSlots_C_SwapWeaponAmmo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SwapWeaponAmmo, CallFunc_Array_Get_Item) == 0x000350, "Member 'W_Loadout_MunitionSlots_C_SwapWeaponAmmo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SwapWeaponAmmo, K2Node_Select_Default_1) == 0x000358, "Member 'W_Loadout_MunitionSlots_C_SwapWeaponAmmo::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SwapWeaponAmmo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000360, "Member 'W_Loadout_MunitionSlots_C_SwapWeaponAmmo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SwapWeaponAmmo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0004D0, "Member 'W_Loadout_MunitionSlots_C_SwapWeaponAmmo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SwapWeaponAmmo, CallFunc_Array_Length_ReturnValue) == 0x0004D4, "Member 'W_Loadout_MunitionSlots_C_SwapWeaponAmmo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_SwapWeaponAmmo, CallFunc_Less_IntInt_ReturnValue) == 0x0004D8, "Member 'W_Loadout_MunitionSlots_C_SwapWeaponAmmo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.TacticalSlotAddCount
// 0x0020 (0x0020 - 0x0000)
struct W_Loadout_MunitionSlots_C_TacticalSlotAddCount final
{
public:
	class UW_Loadout_MunitionSlots_Deployable_C*  TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentCount;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_TacticalSlotAddCount) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_TacticalSlotAddCount");
static_assert(sizeof(W_Loadout_MunitionSlots_C_TacticalSlotAddCount) == 0x000020, "Wrong size on W_Loadout_MunitionSlots_C_TacticalSlotAddCount");
static_assert(offsetof(W_Loadout_MunitionSlots_C_TacticalSlotAddCount, TriggeringSlot) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_TacticalSlotAddCount::TriggeringSlot' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_TacticalSlotAddCount, CurrentCount) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_TacticalSlotAddCount::CurrentCount' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_TacticalSlotAddCount, CallFunc_GetLoadoutWidget_LoadoutWidget) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_TacticalSlotAddCount::CallFunc_GetLoadoutWidget_LoadoutWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_TacticalSlotAddCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_TacticalSlotAddCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_TacticalSlotAddCount, CallFunc_Array_Add_ReturnValue) == 0x00001C, "Member 'W_Loadout_MunitionSlots_C_TacticalSlotAddCount::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.TacticalSlotMinusCount
// 0x0020 (0x0020 - 0x0000)
struct W_Loadout_MunitionSlots_C_TacticalSlotMinusCount final
{
public:
	class UW_Loadout_MunitionSlots_Deployable_C*  TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentCount;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_C*                           CallFunc_GetLoadoutWidget_LoadoutWidget;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_TacticalSlotMinusCount) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_TacticalSlotMinusCount");
static_assert(sizeof(W_Loadout_MunitionSlots_C_TacticalSlotMinusCount) == 0x000020, "Wrong size on W_Loadout_MunitionSlots_C_TacticalSlotMinusCount");
static_assert(offsetof(W_Loadout_MunitionSlots_C_TacticalSlotMinusCount, TriggeringSlot) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_TacticalSlotMinusCount::TriggeringSlot' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_TacticalSlotMinusCount, CurrentCount) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_TacticalSlotMinusCount::CurrentCount' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_TacticalSlotMinusCount, CallFunc_GetLoadoutWidget_LoadoutWidget) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_TacticalSlotMinusCount::CallFunc_GetLoadoutWidget_LoadoutWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_TacticalSlotMinusCount, CallFunc_Array_Find_ReturnValue) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_TacticalSlotMinusCount::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.UpdateActiveLoadout
// 0x02E8 (0x02E8 - 0x0000)
struct W_Loadout_MunitionSlots_C_UpdateActiveLoadout final
{
public:
	struct FSavedLoadout                          ActiveLoadout_0;                                   // 0x0000(0x02E8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_UpdateActiveLoadout) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_UpdateActiveLoadout");
static_assert(sizeof(W_Loadout_MunitionSlots_C_UpdateActiveLoadout) == 0x0002E8, "Wrong size on W_Loadout_MunitionSlots_C_UpdateActiveLoadout");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateActiveLoadout, ActiveLoadout_0) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_UpdateActiveLoadout::ActiveLoadout_0' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.UpdateCurrentData
// 0x0310 (0x0310 - 0x0000)
struct W_Loadout_MunitionSlots_C_UpdateCurrentData final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSavedLoadout                          CallFunc_GetActiveLoadout_Active_Loadout;          // 0x0008(0x02E8)()
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsSWATArmour;              // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_UpdateCurrentData) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_UpdateCurrentData");
static_assert(sizeof(W_Loadout_MunitionSlots_C_UpdateCurrentData) == 0x000310, "Wrong size on W_Loadout_MunitionSlots_C_UpdateCurrentData");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateCurrentData, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_UpdateCurrentData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateCurrentData, CallFunc_GetActiveLoadout_Active_Loadout) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_UpdateCurrentData::CallFunc_GetActiveLoadout_Active_Loadout' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateCurrentData, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002F0, "Member 'W_Loadout_MunitionSlots_C_UpdateCurrentData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateCurrentData, CallFunc_Add_IntInt_ReturnValue_2) == 0x0002F4, "Member 'W_Loadout_MunitionSlots_C_UpdateCurrentData::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateCurrentData, CallFunc_Subtract_IntInt_ReturnValue) == 0x0002F8, "Member 'W_Loadout_MunitionSlots_C_UpdateCurrentData::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateCurrentData, K2Node_ClassDynamicCast_AsSWATArmour) == 0x000300, "Member 'W_Loadout_MunitionSlots_C_UpdateCurrentData::K2Node_ClassDynamicCast_AsSWATArmour' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateCurrentData, K2Node_ClassDynamicCast_bSuccess) == 0x000308, "Member 'W_Loadout_MunitionSlots_C_UpdateCurrentData::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateCurrentData, CallFunc_IsValidClass_ReturnValue) == 0x000309, "Member 'W_Loadout_MunitionSlots_C_UpdateCurrentData::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.UpdateCurrentItemMap
// 0x0050 (0x0050 - 0x0000)
struct W_Loadout_MunitionSlots_C_UpdateCurrentItemMap final
{
public:
	TMap<EItemCategory, class UClass*>            ItemCategory;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_UpdateCurrentItemMap) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_UpdateCurrentItemMap");
static_assert(sizeof(W_Loadout_MunitionSlots_C_UpdateCurrentItemMap) == 0x000050, "Wrong size on W_Loadout_MunitionSlots_C_UpdateCurrentItemMap");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateCurrentItemMap, ItemCategory) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_UpdateCurrentItemMap::ItemCategory' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.UpdateCurrentSlot
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_UpdateCurrentSlot final
{
public:
	class UW_LoadoutSlot_C*                       CurrentSlot;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_UpdateCurrentSlot) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_UpdateCurrentSlot");
static_assert(sizeof(W_Loadout_MunitionSlots_C_UpdateCurrentSlot) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_UpdateCurrentSlot");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateCurrentSlot, CurrentSlot) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_UpdateCurrentSlot::CurrentSlot' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.UpdateGrenadeSlots
// 0x0080 (0x0080 - 0x0000)
struct W_Loadout_MunitionSlots_C_UpdateGrenadeSlots final
{
public:
	class UClass*                                 CurrentGrenade;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_Loadout_MunitionSlots_Deployable_C*> CallFunc_Map_Keys_Keys;                     // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UW_Loadout_MunitionSlots_Deployable_C*  CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Map_Find_Value_1;                         // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_UpdateGrenadeSlots");
static_assert(sizeof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots) == 0x000080, "Wrong size on W_Loadout_MunitionSlots_C_UpdateGrenadeSlots");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, CurrentGrenade) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::CurrentGrenade' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, Count) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::Count' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, Temp_int_Variable) == 0x000014, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, Temp_int_Variable_1) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, CallFunc_Map_Find_Value) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, CallFunc_Map_Find_ReturnValue) == 0x000034, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000035, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, CallFunc_Map_Remove_ReturnValue) == 0x000036, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, CallFunc_Add_IntInt_ReturnValue_2) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, CallFunc_Map_Keys_Keys) == 0x000040, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, CallFunc_Array_Get_Item) == 0x000050, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000060, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, CallFunc_Map_Find_Value_1) == 0x000068, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, CallFunc_Map_Find_ReturnValue_1) == 0x000070, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSlots, CallFunc_Less_IntInt_ReturnValue_1) == 0x00007D, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSlots::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.UpdateGrenadeSummary
// 0x00D0 (0x00D0 - 0x0000)
struct W_Loadout_MunitionSlots_C_UpdateGrenadeSummary final
{
public:
	int32                                         CurrentIndex;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x0018(0x0008)(NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         CallFunc_Map_Keys_Keys;                            // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_Munition_SummaryEntry_C*     CallFunc_Map_Find_Value;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         CallFunc_Map_Keys_Keys_1;                          // 0x0080(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item_1;                         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_2;                         // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_Munition_SummaryEntry_C*     CallFunc_CreateItemSummaryEntry_EntryWidget;       // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_Munition_SummaryEntry_C*     CallFunc_Map_Find_Value_3;                         // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_UpdateGrenadeSummary");
static_assert(sizeof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary) == 0x0000D0, "Wrong size on W_Loadout_MunitionSlots_C_UpdateGrenadeSummary");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, CurrentIndex) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::CurrentIndex' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, K2Node_MakeStruct_SlateChildSize) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, CallFunc_Map_Keys_Keys) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, CallFunc_Array_Get_Item) == 0x000040, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, CallFunc_Map_Remove_ReturnValue) == 0x000048, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, CallFunc_Map_Find_Value) == 0x000050, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, CallFunc_Map_Find_Value_1) == 0x00005C, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, CallFunc_Map_Find_ReturnValue_1) == 0x000060, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, CallFunc_Not_PreBool_ReturnValue) == 0x000061, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, K2Node_MakeStruct_Margin) == 0x00006C, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, CallFunc_Map_Keys_Keys_1) == 0x000080, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A0, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, CallFunc_Map_Find_Value_2) == 0x0000A4, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, CallFunc_Map_Find_ReturnValue_2) == 0x0000A8, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, CallFunc_CreateItemSummaryEntry_EntryWidget) == 0x0000B0, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::CallFunc_CreateItemSummaryEntry_EntryWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, CallFunc_Map_Find_Value_3) == 0x0000B8, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, CallFunc_Map_Find_ReturnValue_3) == 0x0000C0, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateGrenadeSummary, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x0000C8, "Member 'W_Loadout_MunitionSlots_C_UpdateGrenadeSummary::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.UpdateMunitionEditorTotalSlotCount
// 0x0198 (0x0198 - 0x0000)
struct W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0078(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0090(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0108(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0120(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0170(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0180(0x0018)()
};
static_assert(alignof(W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount");
static_assert(sizeof(W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount) == 0x000198, "Wrong size on W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount, Temp_bool_Variable) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000078, "Member 'W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount, K2Node_MakeStruct_FormatArgumentData_1) == 0x000090, "Member 'W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount, K2Node_MakeArray_Array) == 0x0000E0, "Member 'W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount, K2Node_Select_Default) == 0x000108, "Member 'W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount, K2Node_MakeStruct_FormatArgumentData_2) == 0x000120, "Member 'W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount, K2Node_MakeArray_Array_1) == 0x000170, "Member 'W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount, CallFunc_Format_ReturnValue_1) == 0x000180, "Member 'W_Loadout_MunitionSlots_C_UpdateMunitionEditorTotalSlotCount::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.UpdateMunitionSlotEditor
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_UpdateMunitionSlotEditor final
{
public:
	double                                        RevealDelay;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_UpdateMunitionSlotEditor) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_UpdateMunitionSlotEditor");
static_assert(sizeof(W_Loadout_MunitionSlots_C_UpdateMunitionSlotEditor) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_UpdateMunitionSlotEditor");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateMunitionSlotEditor, RevealDelay) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_UpdateMunitionSlotEditor::RevealDelay' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.UpdatePrimarySlots
// 0x08E0 (0x08E0 - 0x0000)
struct W_Loadout_MunitionSlots_C_UpdatePrimarySlots final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSavedLoadout                          CallFunc_GetActiveLoadout_Active_Loadout;          // 0x0008(0x02E8)()
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSavedLoadout                          CallFunc_GetActiveLoadout_Active_Loadout_1;        // 0x02F8(0x02E8)()
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E1[0x7];                                      // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSavedLoadout                          CallFunc_GetActiveLoadout_Active_Loadout_2;        // 0x05E8(0x02E8)()
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x08D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D2[0x2];                                      // 0x08D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x08D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x08DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x08DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x08DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_UpdatePrimarySlots) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_UpdatePrimarySlots");
static_assert(sizeof(W_Loadout_MunitionSlots_C_UpdatePrimarySlots) == 0x0008E0, "Wrong size on W_Loadout_MunitionSlots_C_UpdatePrimarySlots");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdatePrimarySlots, Temp_bool_Variable) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_UpdatePrimarySlots::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdatePrimarySlots, CallFunc_GetActiveLoadout_Active_Loadout) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_UpdatePrimarySlots::CallFunc_GetActiveLoadout_Active_Loadout' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdatePrimarySlots, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0002F0, "Member 'W_Loadout_MunitionSlots_C_UpdatePrimarySlots::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdatePrimarySlots, CallFunc_GetActiveLoadout_Active_Loadout_1) == 0x0002F8, "Member 'W_Loadout_MunitionSlots_C_UpdatePrimarySlots::CallFunc_GetActiveLoadout_Active_Loadout_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdatePrimarySlots, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0005E0, "Member 'W_Loadout_MunitionSlots_C_UpdatePrimarySlots::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdatePrimarySlots, CallFunc_GetActiveLoadout_Active_Loadout_2) == 0x0005E8, "Member 'W_Loadout_MunitionSlots_C_UpdatePrimarySlots::CallFunc_GetActiveLoadout_Active_Loadout_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdatePrimarySlots, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x0008D0, "Member 'W_Loadout_MunitionSlots_C_UpdatePrimarySlots::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdatePrimarySlots, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0008D1, "Member 'W_Loadout_MunitionSlots_C_UpdatePrimarySlots::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdatePrimarySlots, K2Node_Select_Default) == 0x0008D4, "Member 'W_Loadout_MunitionSlots_C_UpdatePrimarySlots::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdatePrimarySlots, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x0008DC, "Member 'W_Loadout_MunitionSlots_C_UpdatePrimarySlots::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdatePrimarySlots, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x0008DD, "Member 'W_Loadout_MunitionSlots_C_UpdatePrimarySlots::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdatePrimarySlots, CallFunc_BooleanOR_ReturnValue) == 0x0008DE, "Member 'W_Loadout_MunitionSlots_C_UpdatePrimarySlots::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.UpdatePrimarySummary
// 0x0340 (0x0340 - 0x0000)
struct W_Loadout_MunitionSlots_C_UpdatePrimarySummary final
{
public:
	TSubclassOf<class ABaseItem>                  CurrentPrimary;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSavedLoadout                          CallFunc_GetActiveLoadout_Active_Loadout;          // 0x0010(0x02E8)()
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue_1;    // 0x0308(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0314(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_Munition_SummaryEntry_C*     CallFunc_CreateAmmoSummaryEntry_EntryWidget;       // 0x0328(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_Munition_SummaryEntry_C*     CallFunc_CreateAmmoSummaryEntry_EntryWidget_1;     // 0x0338(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_UpdatePrimarySummary) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_UpdatePrimarySummary");
static_assert(sizeof(W_Loadout_MunitionSlots_C_UpdatePrimarySummary) == 0x000340, "Wrong size on W_Loadout_MunitionSlots_C_UpdatePrimarySummary");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdatePrimarySummary, CurrentPrimary) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_UpdatePrimarySummary::CurrentPrimary' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdatePrimarySummary, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_UpdatePrimarySummary::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdatePrimarySummary, CallFunc_GetActiveLoadout_Active_Loadout) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_UpdatePrimarySummary::CallFunc_GetActiveLoadout_Active_Loadout' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdatePrimarySummary, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x0002F8, "Member 'W_Loadout_MunitionSlots_C_UpdatePrimarySummary::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdatePrimarySummary, CallFunc_IsValid_ReturnValue_1) == 0x000300, "Member 'W_Loadout_MunitionSlots_C_UpdatePrimarySummary::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdatePrimarySummary, CallFunc_AddChildToHorizontalBox_ReturnValue_1) == 0x000308, "Member 'W_Loadout_MunitionSlots_C_UpdatePrimarySummary::CallFunc_AddChildToHorizontalBox_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdatePrimarySummary, CallFunc_IsValid_ReturnValue_2) == 0x000310, "Member 'W_Loadout_MunitionSlots_C_UpdatePrimarySummary::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdatePrimarySummary, K2Node_MakeStruct_Margin) == 0x000314, "Member 'W_Loadout_MunitionSlots_C_UpdatePrimarySummary::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdatePrimarySummary, CallFunc_CreateAmmoSummaryEntry_EntryWidget) == 0x000328, "Member 'W_Loadout_MunitionSlots_C_UpdatePrimarySummary::CallFunc_CreateAmmoSummaryEntry_EntryWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdatePrimarySummary, CallFunc_Greater_IntInt_ReturnValue) == 0x000330, "Member 'W_Loadout_MunitionSlots_C_UpdatePrimarySummary::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdatePrimarySummary, CallFunc_CreateAmmoSummaryEntry_EntryWidget_1) == 0x000338, "Member 'W_Loadout_MunitionSlots_C_UpdatePrimarySummary::CallFunc_CreateAmmoSummaryEntry_EntryWidget_1' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.UpdateSidearmSlots
// 0x08D8 (0x08D8 - 0x0000)
struct W_Loadout_MunitionSlots_C_UpdateSidearmSlots final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSavedLoadout                          CallFunc_GetActiveLoadout_Active_Loadout;          // 0x0008(0x02E8)()
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x02F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F3[0x5];                                      // 0x02F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSavedLoadout                          CallFunc_GetActiveLoadout_Active_Loadout_1;        // 0x02F8(0x02E8)()
	struct FSavedLoadout                          CallFunc_GetActiveLoadout_Active_Loadout_2;        // 0x05E0(0x02E8)()
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C9[0x3];                                      // 0x08C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x08CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x08D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x08D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x08D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_UpdateSidearmSlots) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_UpdateSidearmSlots");
static_assert(sizeof(W_Loadout_MunitionSlots_C_UpdateSidearmSlots) == 0x0008D8, "Wrong size on W_Loadout_MunitionSlots_C_UpdateSidearmSlots");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateSidearmSlots, Temp_bool_Variable) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_UpdateSidearmSlots::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateSidearmSlots, CallFunc_GetActiveLoadout_Active_Loadout) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_UpdateSidearmSlots::CallFunc_GetActiveLoadout_Active_Loadout' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateSidearmSlots, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0002F0, "Member 'W_Loadout_MunitionSlots_C_UpdateSidearmSlots::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateSidearmSlots, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x0002F1, "Member 'W_Loadout_MunitionSlots_C_UpdateSidearmSlots::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateSidearmSlots, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0002F2, "Member 'W_Loadout_MunitionSlots_C_UpdateSidearmSlots::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateSidearmSlots, CallFunc_GetActiveLoadout_Active_Loadout_1) == 0x0002F8, "Member 'W_Loadout_MunitionSlots_C_UpdateSidearmSlots::CallFunc_GetActiveLoadout_Active_Loadout_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateSidearmSlots, CallFunc_GetActiveLoadout_Active_Loadout_2) == 0x0005E0, "Member 'W_Loadout_MunitionSlots_C_UpdateSidearmSlots::CallFunc_GetActiveLoadout_Active_Loadout_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateSidearmSlots, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0008C8, "Member 'W_Loadout_MunitionSlots_C_UpdateSidearmSlots::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateSidearmSlots, K2Node_Select_Default) == 0x0008CC, "Member 'W_Loadout_MunitionSlots_C_UpdateSidearmSlots::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateSidearmSlots, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x0008D4, "Member 'W_Loadout_MunitionSlots_C_UpdateSidearmSlots::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateSidearmSlots, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x0008D5, "Member 'W_Loadout_MunitionSlots_C_UpdateSidearmSlots::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateSidearmSlots, CallFunc_BooleanOR_ReturnValue) == 0x0008D6, "Member 'W_Loadout_MunitionSlots_C_UpdateSidearmSlots::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.UpdateSidearmSummary
// 0x0338 (0x0338 - 0x0000)
struct W_Loadout_MunitionSlots_C_UpdateSidearmSummary final
{
public:
	class UClass*                                 CurrentSidearm;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSavedLoadout                          CallFunc_GetActiveLoadout_Active_Loadout;          // 0x0010(0x02E8)()
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_302[0x6];                                      // 0x0302(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue_1;    // 0x0308(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_Munition_SummaryEntry_C*     CallFunc_CreateAmmoSummaryEntry_EntryWidget;       // 0x0310(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x031C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_Munition_SummaryEntry_C*     CallFunc_CreateAmmoSummaryEntry_EntryWidget_1;     // 0x0330(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_UpdateSidearmSummary) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_UpdateSidearmSummary");
static_assert(sizeof(W_Loadout_MunitionSlots_C_UpdateSidearmSummary) == 0x000338, "Wrong size on W_Loadout_MunitionSlots_C_UpdateSidearmSummary");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateSidearmSummary, CurrentSidearm) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_UpdateSidearmSummary::CurrentSidearm' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateSidearmSummary, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_UpdateSidearmSummary::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateSidearmSummary, CallFunc_GetActiveLoadout_Active_Loadout) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_UpdateSidearmSummary::CallFunc_GetActiveLoadout_Active_Loadout' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateSidearmSummary, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x0002F8, "Member 'W_Loadout_MunitionSlots_C_UpdateSidearmSummary::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateSidearmSummary, CallFunc_IsValid_ReturnValue_1) == 0x000300, "Member 'W_Loadout_MunitionSlots_C_UpdateSidearmSummary::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateSidearmSummary, CallFunc_IsValid_ReturnValue_2) == 0x000301, "Member 'W_Loadout_MunitionSlots_C_UpdateSidearmSummary::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateSidearmSummary, CallFunc_AddChildToHorizontalBox_ReturnValue_1) == 0x000308, "Member 'W_Loadout_MunitionSlots_C_UpdateSidearmSummary::CallFunc_AddChildToHorizontalBox_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateSidearmSummary, CallFunc_CreateAmmoSummaryEntry_EntryWidget) == 0x000310, "Member 'W_Loadout_MunitionSlots_C_UpdateSidearmSummary::CallFunc_CreateAmmoSummaryEntry_EntryWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateSidearmSummary, CallFunc_Greater_IntInt_ReturnValue) == 0x000318, "Member 'W_Loadout_MunitionSlots_C_UpdateSidearmSummary::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateSidearmSummary, K2Node_MakeStruct_Margin) == 0x00031C, "Member 'W_Loadout_MunitionSlots_C_UpdateSidearmSummary::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateSidearmSummary, CallFunc_CreateAmmoSummaryEntry_EntryWidget_1) == 0x000330, "Member 'W_Loadout_MunitionSlots_C_UpdateSidearmSummary::CallFunc_CreateAmmoSummaryEntry_EntryWidget_1' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.UpdateTacticalSummary
// 0x00D0 (0x00D0 - 0x0000)
struct W_Loadout_MunitionSlots_C_UpdateTacticalSummary final
{
public:
	int32                                         CurrentIndex;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         CallFunc_Map_Keys_Keys;                            // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_Munition_SummaryEntry_C*     CallFunc_Map_Find_Value;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x0064(0x0008)(NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         CallFunc_Map_Keys_Keys_1;                          // 0x0080(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item_1;                         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_2;                         // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_Munition_SummaryEntry_C*     CallFunc_CreateItemSummaryEntry_EntryWidget;       // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_Munition_SummaryEntry_C*     CallFunc_Map_Find_Value_3;                         // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_UpdateTacticalSummary");
static_assert(sizeof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary) == 0x0000D0, "Wrong size on W_Loadout_MunitionSlots_C_UpdateTacticalSummary");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, CurrentIndex) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::CurrentIndex' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, CallFunc_Map_Keys_Keys) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, Temp_int_Array_Index_Variable_1) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, CallFunc_Array_Get_Item) == 0x000040, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, CallFunc_Map_Remove_ReturnValue) == 0x000048, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, CallFunc_Map_Find_Value) == 0x000050, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, CallFunc_Map_Find_Value_1) == 0x00005C, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, CallFunc_Map_Find_ReturnValue_1) == 0x000060, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, CallFunc_Not_PreBool_ReturnValue) == 0x000061, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, K2Node_MakeStruct_SlateChildSize) == 0x000064, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, K2Node_MakeStruct_Margin) == 0x00006C, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, CallFunc_Map_Keys_Keys_1) == 0x000080, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A0, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, CallFunc_Map_Find_Value_2) == 0x0000A4, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, CallFunc_Map_Find_ReturnValue_2) == 0x0000A8, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, CallFunc_CreateItemSummaryEntry_EntryWidget) == 0x0000B0, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::CallFunc_CreateItemSummaryEntry_EntryWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, CallFunc_Map_Find_Value_3) == 0x0000B8, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, CallFunc_Map_Find_ReturnValue_3) == 0x0000C0, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTacticalSummary, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x0000C8, "Member 'W_Loadout_MunitionSlots_C_UpdateTacticalSummary::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.UpdateTotalGrenadeCount
// 0x0118 (0x0118 - 0x0000)
struct W_Loadout_MunitionSlots_C_UpdateTotalGrenadeCount final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0020(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0100(0x0018)()
};
static_assert(alignof(W_Loadout_MunitionSlots_C_UpdateTotalGrenadeCount) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_UpdateTotalGrenadeCount");
static_assert(sizeof(W_Loadout_MunitionSlots_C_UpdateTotalGrenadeCount) == 0x000118, "Wrong size on W_Loadout_MunitionSlots_C_UpdateTotalGrenadeCount");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTotalGrenadeCount, Temp_bool_Variable) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_UpdateTotalGrenadeCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTotalGrenadeCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000001, "Member 'W_Loadout_MunitionSlots_C_UpdateTotalGrenadeCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTotalGrenadeCount, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'W_Loadout_MunitionSlots_C_UpdateTotalGrenadeCount::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTotalGrenadeCount, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_UpdateTotalGrenadeCount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTotalGrenadeCount, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_UpdateTotalGrenadeCount::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTotalGrenadeCount, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_UpdateTotalGrenadeCount::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTotalGrenadeCount, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'W_Loadout_MunitionSlots_C_UpdateTotalGrenadeCount::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTotalGrenadeCount, K2Node_MakeArray_Array) == 0x0000D8, "Member 'W_Loadout_MunitionSlots_C_UpdateTotalGrenadeCount::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTotalGrenadeCount, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'W_Loadout_MunitionSlots_C_UpdateTotalGrenadeCount::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTotalGrenadeCount, K2Node_Select_Default) == 0x000100, "Member 'W_Loadout_MunitionSlots_C_UpdateTotalGrenadeCount::K2Node_Select_Default' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.UpdateTotalPrimarySlotCount
// 0x0018 (0x0018 - 0x0000)
struct W_Loadout_MunitionSlots_C_UpdateTotalPrimarySlotCount final
{
public:
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0000(0x0018)()
};
static_assert(alignof(W_Loadout_MunitionSlots_C_UpdateTotalPrimarySlotCount) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_UpdateTotalPrimarySlotCount");
static_assert(sizeof(W_Loadout_MunitionSlots_C_UpdateTotalPrimarySlotCount) == 0x000018, "Wrong size on W_Loadout_MunitionSlots_C_UpdateTotalPrimarySlotCount");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTotalPrimarySlotCount, CallFunc_Conv_IntToText_ReturnValue) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_UpdateTotalPrimarySlotCount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.UpdateTotalSidearmSlotCount
// 0x0018 (0x0018 - 0x0000)
struct W_Loadout_MunitionSlots_C_UpdateTotalSidearmSlotCount final
{
public:
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0000(0x0018)()
};
static_assert(alignof(W_Loadout_MunitionSlots_C_UpdateTotalSidearmSlotCount) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_UpdateTotalSidearmSlotCount");
static_assert(sizeof(W_Loadout_MunitionSlots_C_UpdateTotalSidearmSlotCount) == 0x000018, "Wrong size on W_Loadout_MunitionSlots_C_UpdateTotalSidearmSlotCount");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTotalSidearmSlotCount, CallFunc_Conv_IntToText_ReturnValue) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_UpdateTotalSidearmSlotCount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.UpdateTotalTacticalSlotCount
// 0x0118 (0x0118 - 0x0000)
struct W_Loadout_MunitionSlots_C_UpdateTotalTacticalSlotCount final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0020(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0100(0x0018)()
};
static_assert(alignof(W_Loadout_MunitionSlots_C_UpdateTotalTacticalSlotCount) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_UpdateTotalTacticalSlotCount");
static_assert(sizeof(W_Loadout_MunitionSlots_C_UpdateTotalTacticalSlotCount) == 0x000118, "Wrong size on W_Loadout_MunitionSlots_C_UpdateTotalTacticalSlotCount");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTotalTacticalSlotCount, Temp_bool_Variable) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_UpdateTotalTacticalSlotCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTotalTacticalSlotCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000001, "Member 'W_Loadout_MunitionSlots_C_UpdateTotalTacticalSlotCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTotalTacticalSlotCount, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'W_Loadout_MunitionSlots_C_UpdateTotalTacticalSlotCount::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTotalTacticalSlotCount, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'W_Loadout_MunitionSlots_C_UpdateTotalTacticalSlotCount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTotalTacticalSlotCount, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000020, "Member 'W_Loadout_MunitionSlots_C_UpdateTotalTacticalSlotCount::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTotalTacticalSlotCount, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'W_Loadout_MunitionSlots_C_UpdateTotalTacticalSlotCount::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTotalTacticalSlotCount, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'W_Loadout_MunitionSlots_C_UpdateTotalTacticalSlotCount::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTotalTacticalSlotCount, K2Node_MakeArray_Array) == 0x0000D8, "Member 'W_Loadout_MunitionSlots_C_UpdateTotalTacticalSlotCount::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTotalTacticalSlotCount, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'W_Loadout_MunitionSlots_C_UpdateTotalTacticalSlotCount::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_MunitionSlots_C_UpdateTotalTacticalSlotCount, K2Node_Select_Default) == 0x000100, "Member 'W_Loadout_MunitionSlots_C_UpdateTotalTacticalSlotCount::K2Node_Select_Default' has a wrong offset!");

// Function W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_MunitionSlots_C_GetFocusTarget final
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_MunitionSlots_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_Loadout_MunitionSlots_C_GetFocusTarget");
static_assert(sizeof(W_Loadout_MunitionSlots_C_GetFocusTarget) == 0x000008, "Wrong size on W_Loadout_MunitionSlots_C_GetFocusTarget");
static_assert(offsetof(W_Loadout_MunitionSlots_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_Loadout_MunitionSlots_C_GetFocusTarget::Focus' has a wrong offset!");

}

