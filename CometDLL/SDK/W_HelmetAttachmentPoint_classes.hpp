#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_HelmetAttachmentPoint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_HelmetAttachmentPoint.W_HelmetAttachmentPoint_C
// 0x0078 (0x0338 - 0x02C0)
class UW_HelmetAttachmentPoint_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                AttachButton;                                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             AttachButtonText;                                  // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          EditableName;                                      // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                FocusOnButton;                                     // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 Name_0;                                            // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AActor*                                 AttachedActorRef;                                  // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AP_DebugPawn_C*                         DebugCameraRef;                                    // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<class FString>                         Alphabet;                                          // 0x0308(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   AttachText;                                        // 0x0318(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          isAttached;                                        // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__W_HelmetAttachmentPoint_AttachButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void Construct();
	void ExecuteUbergraph_W_HelmetAttachmentPoint(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_HelmetAttachmentPoint_C">();
	}
	static class UW_HelmetAttachmentPoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_HelmetAttachmentPoint_C>();
	}
};
static_assert(alignof(UW_HelmetAttachmentPoint_C) == 0x000008, "Wrong alignment on UW_HelmetAttachmentPoint_C");
static_assert(sizeof(UW_HelmetAttachmentPoint_C) == 0x000338, "Wrong size on UW_HelmetAttachmentPoint_C");
static_assert(offsetof(UW_HelmetAttachmentPoint_C, UberGraphFrame) == 0x0002C0, "Member 'UW_HelmetAttachmentPoint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_HelmetAttachmentPoint_C, AttachButton) == 0x0002C8, "Member 'UW_HelmetAttachmentPoint_C::AttachButton' has a wrong offset!");
static_assert(offsetof(UW_HelmetAttachmentPoint_C, AttachButtonText) == 0x0002D0, "Member 'UW_HelmetAttachmentPoint_C::AttachButtonText' has a wrong offset!");
static_assert(offsetof(UW_HelmetAttachmentPoint_C, EditableName) == 0x0002D8, "Member 'UW_HelmetAttachmentPoint_C::EditableName' has a wrong offset!");
static_assert(offsetof(UW_HelmetAttachmentPoint_C, FocusOnButton) == 0x0002E0, "Member 'UW_HelmetAttachmentPoint_C::FocusOnButton' has a wrong offset!");
static_assert(offsetof(UW_HelmetAttachmentPoint_C, Name_0) == 0x0002E8, "Member 'UW_HelmetAttachmentPoint_C::Name_0' has a wrong offset!");
static_assert(offsetof(UW_HelmetAttachmentPoint_C, AttachedActorRef) == 0x0002F8, "Member 'UW_HelmetAttachmentPoint_C::AttachedActorRef' has a wrong offset!");
static_assert(offsetof(UW_HelmetAttachmentPoint_C, DebugCameraRef) == 0x000300, "Member 'UW_HelmetAttachmentPoint_C::DebugCameraRef' has a wrong offset!");
static_assert(offsetof(UW_HelmetAttachmentPoint_C, Alphabet) == 0x000308, "Member 'UW_HelmetAttachmentPoint_C::Alphabet' has a wrong offset!");
static_assert(offsetof(UW_HelmetAttachmentPoint_C, AttachText) == 0x000318, "Member 'UW_HelmetAttachmentPoint_C::AttachText' has a wrong offset!");
static_assert(offsetof(UW_HelmetAttachmentPoint_C, isAttached) == 0x000330, "Member 'UW_HelmetAttachmentPoint_C::isAttached' has a wrong offset!");

}

