#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UI_PlanningMap

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.AbsolutePan
// 0x01B0 (0x01B0 - 0x0000)
struct BP_UI_PlanningMap_C_AbsolutePan final
{
public:
	struct FVector2D                              Delta;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_2;     // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x00C8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_UI_PlanningMap_C_AbsolutePan) == 0x000008, "Wrong alignment on BP_UI_PlanningMap_C_AbsolutePan");
static_assert(sizeof(BP_UI_PlanningMap_C_AbsolutePan) == 0x0001B0, "Wrong size on BP_UI_PlanningMap_C_AbsolutePan");
static_assert(offsetof(BP_UI_PlanningMap_C_AbsolutePan, Delta) == 0x000000, "Member 'BP_UI_PlanningMap_C_AbsolutePan::Delta' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_AbsolutePan, CallFunc_BreakVector_X) == 0x000010, "Member 'BP_UI_PlanningMap_C_AbsolutePan::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_AbsolutePan, CallFunc_BreakVector_Y) == 0x000018, "Member 'BP_UI_PlanningMap_C_AbsolutePan::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_AbsolutePan, CallFunc_BreakVector_Z) == 0x000020, "Member 'BP_UI_PlanningMap_C_AbsolutePan::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_AbsolutePan, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_UI_PlanningMap_C_AbsolutePan::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_AbsolutePan, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000030, "Member 'BP_UI_PlanningMap_C_AbsolutePan::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_AbsolutePan, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x000040, "Member 'BP_UI_PlanningMap_C_AbsolutePan::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_AbsolutePan, CallFunc_BreakVector2D_X) == 0x000050, "Member 'BP_UI_PlanningMap_C_AbsolutePan::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_AbsolutePan, CallFunc_BreakVector2D_Y) == 0x000058, "Member 'BP_UI_PlanningMap_C_AbsolutePan::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_AbsolutePan, CallFunc_BreakVector2D_X_1) == 0x000060, "Member 'BP_UI_PlanningMap_C_AbsolutePan::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_AbsolutePan, CallFunc_BreakVector2D_Y_1) == 0x000068, "Member 'BP_UI_PlanningMap_C_AbsolutePan::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_AbsolutePan, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_UI_PlanningMap_C_AbsolutePan::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_AbsolutePan, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'BP_UI_PlanningMap_C_AbsolutePan::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_AbsolutePan, CallFunc_FClamp_ReturnValue) == 0x000080, "Member 'BP_UI_PlanningMap_C_AbsolutePan::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_AbsolutePan, CallFunc_Multiply_Vector2DFloat_ReturnValue_2) == 0x000088, "Member 'BP_UI_PlanningMap_C_AbsolutePan::CallFunc_Multiply_Vector2DFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_AbsolutePan, CallFunc_BreakVector2D_X_2) == 0x000098, "Member 'BP_UI_PlanningMap_C_AbsolutePan::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_AbsolutePan, CallFunc_BreakVector2D_Y_2) == 0x0000A0, "Member 'BP_UI_PlanningMap_C_AbsolutePan::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_AbsolutePan, CallFunc_FClamp_ReturnValue_1) == 0x0000A8, "Member 'BP_UI_PlanningMap_C_AbsolutePan::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_AbsolutePan, CallFunc_MakeVector_ReturnValue) == 0x0000B0, "Member 'BP_UI_PlanningMap_C_AbsolutePan::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_AbsolutePan, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0000C8, "Member 'BP_UI_PlanningMap_C_AbsolutePan::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.AnimateHide
// 0x0001 (0x0001 - 0x0000)
struct BP_UI_PlanningMap_C_AnimateHide final
{
public:
	bool                                          Silent;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UI_PlanningMap_C_AnimateHide) == 0x000001, "Wrong alignment on BP_UI_PlanningMap_C_AnimateHide");
static_assert(sizeof(BP_UI_PlanningMap_C_AnimateHide) == 0x000001, "Wrong size on BP_UI_PlanningMap_C_AnimateHide");
static_assert(offsetof(BP_UI_PlanningMap_C_AnimateHide, Silent) == 0x000000, "Member 'BP_UI_PlanningMap_C_AnimateHide::Silent' has a wrong offset!");

// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.ChangeFloors
// 0x0004 (0x0004 - 0x0000)
struct BP_UI_PlanningMap_C_ChangeFloors final
{
public:
	int32                                         Floor;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UI_PlanningMap_C_ChangeFloors) == 0x000004, "Wrong alignment on BP_UI_PlanningMap_C_ChangeFloors");
static_assert(sizeof(BP_UI_PlanningMap_C_ChangeFloors) == 0x000004, "Wrong size on BP_UI_PlanningMap_C_ChangeFloors");
static_assert(offsetof(BP_UI_PlanningMap_C_ChangeFloors, Floor) == 0x000000, "Member 'BP_UI_PlanningMap_C_ChangeFloors::Floor' has a wrong offset!");

// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.ExecuteUbergraph_BP_UI_PlanningMap
// 0x0238 (0x0238 - 0x0000)
struct BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Floor;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Panning;                        // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_CustomEvent_CursorPos;                      // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VEase_ReturnValue;                        // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x00E0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Silent;                         // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2[0x2];                                      // 0x01E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x01ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EE[0x2];                                      // 0x01EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x01F8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0210(0x0018)(HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_B_ImplicitCast;         // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_TargetArmLength_ImplicitCast;   // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap) == 0x000008, "Wrong alignment on BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap");
static_assert(sizeof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap) == 0x000238, "Wrong size on BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, EntryPoint) == 0x000000, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_IsActive_ReturnValue) == 0x000010, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_GetPlayerController_ReturnValue_1) == 0x000018, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_GetMaterial_ReturnValue) == 0x000038, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x000041, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_BooleanAND_ReturnValue) == 0x000042, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000043, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, K2Node_CustomEvent_Floor) == 0x000044, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::K2Node_CustomEvent_Floor' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000050, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_MakeVector_ReturnValue) == 0x000058, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000070, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000080, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_FClamp_ReturnValue) == 0x000088, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000090, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_FClamp_ReturnValue_1) == 0x000098, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, K2Node_CustomEvent_Panning) == 0x0000A0, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::K2Node_CustomEvent_Panning' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, K2Node_CustomEvent_CursorPos) == 0x0000A8, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::K2Node_CustomEvent_CursorPos' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_BooleanAND_ReturnValue_1) == 0x0000B8, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, K2Node_Event_DeltaSeconds) == 0x0000BC, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_VEase_ReturnValue) == 0x0000C0, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_VEase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, Temp_object_Variable) == 0x0000D8, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0000E0, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, K2Node_DynamicCast_AsMaterial_Interface) == 0x0001C8, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, K2Node_DynamicCast_bSuccess) == 0x0001D0, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x0001D8, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001E0, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, K2Node_CustomEvent_Silent) == 0x0001E1, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::K2Node_CustomEvent_Silent' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_Array_Length_ReturnValue) == 0x0001E4, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_Array_Length_ReturnValue_1) == 0x0001E8, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_Greater_IntInt_ReturnValue) == 0x0001EC, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0001ED, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, K2Node_CustomEvent_Loaded) == 0x0001F0, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, K2Node_InputKeyEvent_Key) == 0x0001F8, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, K2Node_InputKeyEvent_Key_1) == 0x000210, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, CallFunc_Multiply_IntFloat_B_ImplicitCast) == 0x000228, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::CallFunc_Multiply_IntFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap, K2Node_VariableSet_TargetArmLength_ImplicitCast) == 0x000230, "Member 'BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap::K2Node_VariableSet_TargetArmLength_ImplicitCast' has a wrong offset!");

// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.Fill Level Data from Table
// 0x0990 (0x0990 - 0x0000)
struct BP_UI_PlanningMap_C_Fill_Level_Data_from_Table final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLevelDataLookupTable                  CallFunc_GetLevelData_ReturnValue;                 // 0x0008(0x0818)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0820(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0824(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0828(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82C[0x4];                                      // 0x082C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnPoints                           CallFunc_Array_Get_Item;                           // 0x0830(0x00A0)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x08D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x08D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D5[0x3];                                      // 0x08D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x08D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x08E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x08E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0900(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_904[0xC];                                      // 0x0904(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0910(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0970(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_974[0x4];                                      // 0x0974(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_UI_PlanningMap_SpawnPoint_C*        CallFunc_AddComponent_ReturnValue;                 // 0x0978(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0980(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0984(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_985[0x3];                                      // 0x0985(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0988(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UI_PlanningMap_C_Fill_Level_Data_from_Table) == 0x000010, "Wrong alignment on BP_UI_PlanningMap_C_Fill_Level_Data_from_Table");
static_assert(sizeof(BP_UI_PlanningMap_C_Fill_Level_Data_from_Table) == 0x000990, "Wrong size on BP_UI_PlanningMap_C_Fill_Level_Data_from_Table");
static_assert(offsetof(BP_UI_PlanningMap_C_Fill_Level_Data_from_Table, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_UI_PlanningMap_C_Fill_Level_Data_from_Table::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_Fill_Level_Data_from_Table, CallFunc_GetLevelData_ReturnValue) == 0x000008, "Member 'BP_UI_PlanningMap_C_Fill_Level_Data_from_Table::CallFunc_GetLevelData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_Fill_Level_Data_from_Table, Temp_int_Loop_Counter_Variable) == 0x000820, "Member 'BP_UI_PlanningMap_C_Fill_Level_Data_from_Table::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_Fill_Level_Data_from_Table, CallFunc_Add_IntInt_ReturnValue) == 0x000824, "Member 'BP_UI_PlanningMap_C_Fill_Level_Data_from_Table::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_Fill_Level_Data_from_Table, CallFunc_Array_Add_ReturnValue) == 0x000828, "Member 'BP_UI_PlanningMap_C_Fill_Level_Data_from_Table::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_Fill_Level_Data_from_Table, CallFunc_Array_Get_Item) == 0x000830, "Member 'BP_UI_PlanningMap_C_Fill_Level_Data_from_Table::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_Fill_Level_Data_from_Table, CallFunc_Array_Length_ReturnValue) == 0x0008D0, "Member 'BP_UI_PlanningMap_C_Fill_Level_Data_from_Table::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_Fill_Level_Data_from_Table, CallFunc_Less_IntInt_ReturnValue) == 0x0008D4, "Member 'BP_UI_PlanningMap_C_Fill_Level_Data_from_Table::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_Fill_Level_Data_from_Table, CallFunc_BreakVector2D_X) == 0x0008D8, "Member 'BP_UI_PlanningMap_C_Fill_Level_Data_from_Table::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_Fill_Level_Data_from_Table, CallFunc_BreakVector2D_Y) == 0x0008E0, "Member 'BP_UI_PlanningMap_C_Fill_Level_Data_from_Table::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_Fill_Level_Data_from_Table, CallFunc_MakeVector_ReturnValue) == 0x0008E8, "Member 'BP_UI_PlanningMap_C_Fill_Level_Data_from_Table::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_Fill_Level_Data_from_Table, CallFunc_Array_Add_ReturnValue_1) == 0x000900, "Member 'BP_UI_PlanningMap_C_Fill_Level_Data_from_Table::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_Fill_Level_Data_from_Table, CallFunc_MakeTransform_ReturnValue) == 0x000910, "Member 'BP_UI_PlanningMap_C_Fill_Level_Data_from_Table::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_Fill_Level_Data_from_Table, CallFunc_Array_Add_ReturnValue_2) == 0x000970, "Member 'BP_UI_PlanningMap_C_Fill_Level_Data_from_Table::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_Fill_Level_Data_from_Table, CallFunc_AddComponent_ReturnValue) == 0x000978, "Member 'BP_UI_PlanningMap_C_Fill_Level_Data_from_Table::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_Fill_Level_Data_from_Table, CallFunc_Array_Add_ReturnValue_3) == 0x000980, "Member 'BP_UI_PlanningMap_C_Fill_Level_Data_from_Table::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_Fill_Level_Data_from_Table, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000984, "Member 'BP_UI_PlanningMap_C_Fill_Level_Data_from_Table::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_Fill_Level_Data_from_Table, CallFunc_Array_Add_ReturnValue_4) == 0x000988, "Member 'BP_UI_PlanningMap_C_Fill_Level_Data_from_Table::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");

// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.GetCurrentMapMaterial
// 0x0010 (0x0010 - 0x0000)
struct BP_UI_PlanningMap_C_GetCurrentMapMaterial final
{
public:
	class UMaterialInterface*                     CurrentMaterial;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UI_PlanningMap_C_GetCurrentMapMaterial) == 0x000008, "Wrong alignment on BP_UI_PlanningMap_C_GetCurrentMapMaterial");
static_assert(sizeof(BP_UI_PlanningMap_C_GetCurrentMapMaterial) == 0x000010, "Wrong size on BP_UI_PlanningMap_C_GetCurrentMapMaterial");
static_assert(offsetof(BP_UI_PlanningMap_C_GetCurrentMapMaterial, CurrentMaterial) == 0x000000, "Member 'BP_UI_PlanningMap_C_GetCurrentMapMaterial::CurrentMaterial' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_GetCurrentMapMaterial, CallFunc_GetMaterial_ReturnValue) == 0x000008, "Member 'BP_UI_PlanningMap_C_GetCurrentMapMaterial::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");

// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.GetMapMaterial
// 0x0028 (0x0028 - 0x0000)
struct BP_UI_PlanningMap_C_GetMapMaterial final
{
public:
	bool                                          ForceUpdate;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               MapDynMat_0;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UI_PlanningMap_C_GetMapMaterial) == 0x000008, "Wrong alignment on BP_UI_PlanningMap_C_GetMapMaterial");
static_assert(sizeof(BP_UI_PlanningMap_C_GetMapMaterial) == 0x000028, "Wrong size on BP_UI_PlanningMap_C_GetMapMaterial");
static_assert(offsetof(BP_UI_PlanningMap_C_GetMapMaterial, ForceUpdate) == 0x000000, "Member 'BP_UI_PlanningMap_C_GetMapMaterial::ForceUpdate' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_GetMapMaterial, MapDynMat_0) == 0x000008, "Member 'BP_UI_PlanningMap_C_GetMapMaterial::MapDynMat_0' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_GetMapMaterial, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_UI_PlanningMap_C_GetMapMaterial::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_GetMapMaterial, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_UI_PlanningMap_C_GetMapMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_GetMapMaterial, CallFunc_GetMaterial_ReturnValue) == 0x000018, "Member 'BP_UI_PlanningMap_C_GetMapMaterial::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_GetMapMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000020, "Member 'BP_UI_PlanningMap_C_GetMapMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_UI_PlanningMap_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_UI_PlanningMap_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BP_UI_PlanningMap_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0");
static_assert(sizeof(BP_UI_PlanningMap_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BP_UI_PlanningMap_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0");
static_assert(offsetof(BP_UI_PlanningMap_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BP_UI_PlanningMap_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_UI_PlanningMap_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_UI_PlanningMap_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on BP_UI_PlanningMap_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1");
static_assert(sizeof(BP_UI_PlanningMap_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on BP_UI_PlanningMap_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1");
static_assert(offsetof(BP_UI_PlanningMap_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'BP_UI_PlanningMap_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.OnLoaded_6AC405FF4BFE790347C0B19681EDEBD5
// 0x0008 (0x0008 - 0x0000)
struct BP_UI_PlanningMap_C_OnLoaded_6AC405FF4BFE790347C0B19681EDEBD5 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UI_PlanningMap_C_OnLoaded_6AC405FF4BFE790347C0B19681EDEBD5) == 0x000008, "Wrong alignment on BP_UI_PlanningMap_C_OnLoaded_6AC405FF4BFE790347C0B19681EDEBD5");
static_assert(sizeof(BP_UI_PlanningMap_C_OnLoaded_6AC405FF4BFE790347C0B19681EDEBD5) == 0x000008, "Wrong size on BP_UI_PlanningMap_C_OnLoaded_6AC405FF4BFE790347C0B19681EDEBD5");
static_assert(offsetof(BP_UI_PlanningMap_C_OnLoaded_6AC405FF4BFE790347C0B19681EDEBD5, Loaded) == 0x000000, "Member 'BP_UI_PlanningMap_C_OnLoaded_6AC405FF4BFE790347C0B19681EDEBD5::Loaded' has a wrong offset!");

// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.PanCamera
// 0x0018 (0x0018 - 0x0000)
struct BP_UI_PlanningMap_C_PanCamera final
{
public:
	bool                                          Panning_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CursorPos;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UI_PlanningMap_C_PanCamera) == 0x000008, "Wrong alignment on BP_UI_PlanningMap_C_PanCamera");
static_assert(sizeof(BP_UI_PlanningMap_C_PanCamera) == 0x000018, "Wrong size on BP_UI_PlanningMap_C_PanCamera");
static_assert(offsetof(BP_UI_PlanningMap_C_PanCamera, Panning_0) == 0x000000, "Member 'BP_UI_PlanningMap_C_PanCamera::Panning_0' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_PanCamera, CursorPos) == 0x000008, "Member 'BP_UI_PlanningMap_C_PanCamera::CursorPos' has a wrong offset!");

// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_UI_PlanningMap_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UI_PlanningMap_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_UI_PlanningMap_C_ReceiveTick");
static_assert(sizeof(BP_UI_PlanningMap_C_ReceiveTick) == 0x000004, "Wrong size on BP_UI_PlanningMap_C_ReceiveTick");
static_assert(offsetof(BP_UI_PlanningMap_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_UI_PlanningMap_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.SetMapMaterial
// 0x0008 (0x0008 - 0x0000)
struct BP_UI_PlanningMap_C_SetMapMaterial final
{
public:
	class UMaterialInterface*                     Material;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UI_PlanningMap_C_SetMapMaterial) == 0x000008, "Wrong alignment on BP_UI_PlanningMap_C_SetMapMaterial");
static_assert(sizeof(BP_UI_PlanningMap_C_SetMapMaterial) == 0x000008, "Wrong size on BP_UI_PlanningMap_C_SetMapMaterial");
static_assert(offsetof(BP_UI_PlanningMap_C_SetMapMaterial, Material) == 0x000000, "Member 'BP_UI_PlanningMap_C_SetMapMaterial::Material' has a wrong offset!");

// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.SpawnMapMarker
// 0x0020 (0x0020 - 0x0000)
struct BP_UI_PlanningMap_C_SpawnMapMarker final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_UI_PlanningMap_Marker_C*            OutputPin;                                         // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UI_PlanningMap_C_SpawnMapMarker) == 0x000008, "Wrong alignment on BP_UI_PlanningMap_C_SpawnMapMarker");
static_assert(sizeof(BP_UI_PlanningMap_C_SpawnMapMarker) == 0x000020, "Wrong size on BP_UI_PlanningMap_C_SpawnMapMarker");
static_assert(offsetof(BP_UI_PlanningMap_C_SpawnMapMarker, Location) == 0x000000, "Member 'BP_UI_PlanningMap_C_SpawnMapMarker::Location' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_SpawnMapMarker, OutputPin) == 0x000018, "Member 'BP_UI_PlanningMap_C_SpawnMapMarker::OutputPin' has a wrong offset!");

// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.UpdateZoom
// 0x0040 (0x0040 - 0x0000)
struct BP_UI_PlanningMap_C_UpdateZoom final
{
public:
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_B_ImplicitCast;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_TargetArmLength_ImplicitCast;   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UI_PlanningMap_C_UpdateZoom) == 0x000008, "Wrong alignment on BP_UI_PlanningMap_C_UpdateZoom");
static_assert(sizeof(BP_UI_PlanningMap_C_UpdateZoom) == 0x000040, "Wrong size on BP_UI_PlanningMap_C_UpdateZoom");
static_assert(offsetof(BP_UI_PlanningMap_C_UpdateZoom, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_UI_PlanningMap_C_UpdateZoom::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_UpdateZoom, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'BP_UI_PlanningMap_C_UpdateZoom::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_UpdateZoom, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000010, "Member 'BP_UI_PlanningMap_C_UpdateZoom::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_UpdateZoom, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_UI_PlanningMap_C_UpdateZoom::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_UpdateZoom, CallFunc_Multiply_IntFloat_B_ImplicitCast) == 0x000030, "Member 'BP_UI_PlanningMap_C_UpdateZoom::CallFunc_Multiply_IntFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_UI_PlanningMap_C_UpdateZoom, K2Node_VariableSet_TargetArmLength_ImplicitCast) == 0x000038, "Member 'BP_UI_PlanningMap_C_UpdateZoom::K2Node_VariableSet_TargetArmLength_ImplicitCast' has a wrong offset!");

}

