#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AG_SquadmateCount

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function AG_SquadmateCount.AG_SquadmateCount_C.CanOpen
// 0x0068 (0x0068 - 0x0000)
struct AG_SquadmateCount_C_CanOpen final
{
public:
	struct FAIActionDecisionContext               Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentCount;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACyberneticCharacter*                   CallFunc_GetCharacter_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   CallFunc_GetReadyOrNotGameState_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ACyberneticCharacter*                   K2Node_DynamicCast_AsCybernetic_Character;         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSameSquad_ReturnValue;                  // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AG_SquadmateCount_C_CanOpen) == 0x000008, "Wrong alignment on AG_SquadmateCount_C_CanOpen");
static_assert(sizeof(AG_SquadmateCount_C_CanOpen) == 0x000068, "Wrong size on AG_SquadmateCount_C_CanOpen");
static_assert(offsetof(AG_SquadmateCount_C_CanOpen, Context) == 0x000000, "Member 'AG_SquadmateCount_C_CanOpen::Context' has a wrong offset!");
static_assert(offsetof(AG_SquadmateCount_C_CanOpen, ReturnValue) == 0x000010, "Member 'AG_SquadmateCount_C_CanOpen::ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_SquadmateCount_C_CanOpen, CurrentCount) == 0x000014, "Member 'AG_SquadmateCount_C_CanOpen::CurrentCount' has a wrong offset!");
static_assert(offsetof(AG_SquadmateCount_C_CanOpen, Temp_int_Variable) == 0x000018, "Member 'AG_SquadmateCount_C_CanOpen::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AG_SquadmateCount_C_CanOpen, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'AG_SquadmateCount_C_CanOpen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AG_SquadmateCount_C_CanOpen, CallFunc_GetCharacter_ReturnValue) == 0x000020, "Member 'AG_SquadmateCount_C_CanOpen::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_SquadmateCount_C_CanOpen, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'AG_SquadmateCount_C_CanOpen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_SquadmateCount_C_CanOpen, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'AG_SquadmateCount_C_CanOpen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AG_SquadmateCount_C_CanOpen, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000030, "Member 'AG_SquadmateCount_C_CanOpen::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_SquadmateCount_C_CanOpen, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'AG_SquadmateCount_C_CanOpen::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AG_SquadmateCount_C_CanOpen, CallFunc_GetReadyOrNotGameState_ReturnValue) == 0x000038, "Member 'AG_SquadmateCount_C_CanOpen::CallFunc_GetReadyOrNotGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_SquadmateCount_C_CanOpen, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'AG_SquadmateCount_C_CanOpen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_SquadmateCount_C_CanOpen, CallFunc_Array_Get_Item) == 0x000048, "Member 'AG_SquadmateCount_C_CanOpen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AG_SquadmateCount_C_CanOpen, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'AG_SquadmateCount_C_CanOpen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_SquadmateCount_C_CanOpen, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000051, "Member 'AG_SquadmateCount_C_CanOpen::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_SquadmateCount_C_CanOpen, CallFunc_IsValid_ReturnValue) == 0x000052, "Member 'AG_SquadmateCount_C_CanOpen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_SquadmateCount_C_CanOpen, K2Node_DynamicCast_AsCybernetic_Character) == 0x000058, "Member 'AG_SquadmateCount_C_CanOpen::K2Node_DynamicCast_AsCybernetic_Character' has a wrong offset!");
static_assert(offsetof(AG_SquadmateCount_C_CanOpen, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'AG_SquadmateCount_C_CanOpen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AG_SquadmateCount_C_CanOpen, CallFunc_IsActive_ReturnValue) == 0x000061, "Member 'AG_SquadmateCount_C_CanOpen::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_SquadmateCount_C_CanOpen, CallFunc_IsSameSquad_ReturnValue) == 0x000062, "Member 'AG_SquadmateCount_C_CanOpen::CallFunc_IsSameSquad_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_SquadmateCount_C_CanOpen, CallFunc_BooleanAND_ReturnValue) == 0x000063, "Member 'AG_SquadmateCount_C_CanOpen::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_SquadmateCount_C_CanOpen, CallFunc_BooleanAND_ReturnValue_1) == 0x000064, "Member 'AG_SquadmateCount_C_CanOpen::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

}

