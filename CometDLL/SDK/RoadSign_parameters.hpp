#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RoadSign

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function RoadSign.RoadSign_C.SetNumbers
// 0x00D0 (0x00D0 - 0x0000)
struct RoadSign_C_SetNumbers final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_6;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_7;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_8;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_9;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_10;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_11;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_12;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_13;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_14;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_15;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_16;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_17;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_18;                           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_19;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default;                             // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Select_Default_1;                           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RoadSign_C_SetNumbers) == 0x000008, "Wrong alignment on RoadSign_C_SetNumbers");
static_assert(sizeof(RoadSign_C_SetNumbers) == 0x0000D0, "Wrong size on RoadSign_C_SetNumbers");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_int_Variable) == 0x000000, "Member 'RoadSign_C_SetNumbers::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable) == 0x000008, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_1) == 0x000010, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_2) == 0x000018, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_3) == 0x000020, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_4) == 0x000028, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_5) == 0x000030, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_6) == 0x000038, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_7) == 0x000040, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_8) == 0x000048, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_9) == 0x000050, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_10) == 0x000058, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_11) == 0x000060, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_12) == 0x000068, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_13) == 0x000070, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_14) == 0x000078, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_15) == 0x000080, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_16) == 0x000088, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_17) == 0x000090, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_18) == 0x000098, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_19) == 0x0000A0, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_int_Variable_1) == 0x0000A8, "Member 'RoadSign_C_SetNumbers::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_int_Variable_2) == 0x0000AC, "Member 'RoadSign_C_SetNumbers::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, K2Node_Select_Default) == 0x0000B0, "Member 'RoadSign_C_SetNumbers::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000B8, "Member 'RoadSign_C_SetNumbers::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'RoadSign_C_SetNumbers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, K2Node_Select_Default_1) == 0x0000C0, "Member 'RoadSign_C_SetNumbers::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000C8, "Member 'RoadSign_C_SetNumbers::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function RoadSign.RoadSign_C.SetMainSignMesh
// 0x01B8 (0x01B8 - 0x0000)
struct RoadSign_C_SetMainSignMesh final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_16;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_17;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_18;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_19;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_20;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_21;                             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_22;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_23;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_24;                             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_25;                             // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_26;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_27;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_28;                             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_29;                             // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_30;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_31;                             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_32;                             // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_1;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_2;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_3;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_4;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_5;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_6;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_7;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_8;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_9;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_10;                          // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_5;           // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_4;        // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default_11;                          // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default_12;                          // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_10;         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_11;         // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_12;         // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default_13;                          // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_14;                          // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_13;         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default_15;                          // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_14;         // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default_16;                          // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_15;         // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default_17;                          // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_16;         // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_17;         // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_6;           // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default_18;                          // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_5;        // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default_19;                          // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_7;           // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default_20;                          // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_21;                          // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_6;        // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_8;           // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_9;           // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_7;        // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_18;         // 0x013E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_19;         // 0x013F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_20;         // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_21;         // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_22;         // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_23;         // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_24;         // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_25;         // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_26;         // 0x0147(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_10;          // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_8;        // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_11;          // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default_22;                          // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_23;                          // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_24;                          // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_25;                          // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_26;                          // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_27;                          // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_28;                          // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_29;                          // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_30;                          // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_31;                          // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_32;                          // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_33;                          // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RoadSign_C_SetMainSignMesh) == 0x000008, "Wrong alignment on RoadSign_C_SetMainSignMesh");
static_assert(sizeof(RoadSign_C_SetMainSignMesh) == 0x0001B8, "Wrong size on RoadSign_C_SetMainSignMesh");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable) == 0x000000, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_1) == 0x000001, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_2) == 0x000002, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_3) == 0x000003, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_4) == 0x000004, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_5) == 0x000005, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_6) == 0x000006, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_7) == 0x000007, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_8) == 0x000008, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_9) == 0x000009, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_10) == 0x00000A, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_11) == 0x00000B, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_12) == 0x00000C, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_13) == 0x00000D, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_14) == 0x00000E, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_15) == 0x00000F, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_16) == 0x000010, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_17) == 0x000011, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_18) == 0x000012, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_19) == 0x000013, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_20) == 0x000014, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_20' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_21) == 0x000015, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_21' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_int_Variable) == 0x000018, "Member 'RoadSign_C_SetMainSignMesh::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_22) == 0x00001C, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_22' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_23) == 0x00001D, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_23' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_24) == 0x00001E, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_24' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_25) == 0x00001F, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_25' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_26) == 0x000020, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_26' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_27) == 0x000021, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_27' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_28) == 0x000022, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_28' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_29) == 0x000023, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_29' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_30) == 0x000024, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_30' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_31) == 0x000025, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_31' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_32) == 0x000026, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_32' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000027, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000028, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000029, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002A, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002B, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue) == 0x00002C, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00002D, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanOR_ReturnValue) == 0x00002E, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00002F, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000030, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000031, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x000032, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x000033, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x000034, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x000035, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanOR_ReturnValue_1) == 0x000036, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000037, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000038, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x000039, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue_1) == 0x00003A, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue_2) == 0x00003B, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default) == 0x000040, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_1) == 0x000048, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_2) == 0x000050, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_3) == 0x000058, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_4) == 0x000060, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_5) == 0x000068, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_6) == 0x000070, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_7) == 0x000078, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_8) == 0x000080, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_9) == 0x000088, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_10) == 0x000090, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x000098, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x000099, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_5) == 0x00009A, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue_3) == 0x00009B, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_4) == 0x00009C, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue_4) == 0x00009D, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_11) == 0x0000A0, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x0000A8, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_12) == 0x0000B0, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_10) == 0x0000B8, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_11) == 0x0000B9, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanOR_ReturnValue_2) == 0x0000BA, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_12) == 0x0000BB, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_13) == 0x0000C0, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_14) == 0x0000C8, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_13) == 0x0000D0, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_15) == 0x0000D8, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_14) == 0x0000E0, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_16) == 0x0000E8, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_16' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_15) == 0x0000F0, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_17) == 0x0000F8, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_17' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_16) == 0x000100, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_17) == 0x000101, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanOR_ReturnValue_3) == 0x000102, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_6) == 0x000103, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_18) == 0x000108, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_18' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_5) == 0x000110, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_19) == 0x000118, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_19' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue_5) == 0x000120, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_7) == 0x000121, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_20) == 0x000128, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_20' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_21) == 0x000130, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_21' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_6) == 0x000138, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_8) == 0x000139, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_9) == 0x00013A, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue_6) == 0x00013B, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_7) == 0x00013C, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue_7) == 0x00013D, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_18) == 0x00013E, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_19) == 0x00013F, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_20) == 0x000140, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanOR_ReturnValue_4) == 0x000141, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_21) == 0x000142, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_22) == 0x000143, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_23) == 0x000144, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_24) == 0x000145, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_25) == 0x000146, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_26) == 0x000147, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanOR_ReturnValue_5) == 0x000148, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_10) == 0x000149, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_8) == 0x00014A, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_11) == 0x00014B, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue_8) == 0x00014C, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_22) == 0x000150, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_22' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_23) == 0x000158, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_23' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_24) == 0x000160, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_24' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_25) == 0x000168, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_25' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_26) == 0x000170, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_26' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_27) == 0x000178, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_27' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_28) == 0x000180, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_28' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_29) == 0x000188, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_29' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_30) == 0x000190, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_30' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_31) == 0x000198, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_31' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_32) == 0x0001A0, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_32' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_33) == 0x0001A8, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_33' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_SetStaticMesh_ReturnValue) == 0x0001B0, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function RoadSign.RoadSign_C.ExecuteUbergraph_RoadSign
// 0x0004 (0x0004 - 0x0000)
struct RoadSign_C_ExecuteUbergraph_RoadSign final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RoadSign_C_ExecuteUbergraph_RoadSign) == 0x000004, "Wrong alignment on RoadSign_C_ExecuteUbergraph_RoadSign");
static_assert(sizeof(RoadSign_C_ExecuteUbergraph_RoadSign) == 0x000004, "Wrong size on RoadSign_C_ExecuteUbergraph_RoadSign");
static_assert(offsetof(RoadSign_C_ExecuteUbergraph_RoadSign, EntryPoint) == 0x000000, "Member 'RoadSign_C_ExecuteUbergraph_RoadSign::EntryPoint' has a wrong offset!");

// Function RoadSign.RoadSign_C.DestroySignSelection
// 0x0030 (0x0030 - 0x0000)
struct RoadSign_C_DestroySignSelection final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Select_Default_1;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RoadSign_C_DestroySignSelection) == 0x000008, "Wrong alignment on RoadSign_C_DestroySignSelection");
static_assert(sizeof(RoadSign_C_DestroySignSelection) == 0x000030, "Wrong size on RoadSign_C_DestroySignSelection");
static_assert(offsetof(RoadSign_C_DestroySignSelection, Temp_int_Variable) == 0x000000, "Member 'RoadSign_C_DestroySignSelection::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(RoadSign_C_DestroySignSelection, Temp_int_Variable_1) == 0x000004, "Member 'RoadSign_C_DestroySignSelection::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_DestroySignSelection, Temp_int_Variable_2) == 0x000008, "Member 'RoadSign_C_DestroySignSelection::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_DestroySignSelection, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'RoadSign_C_DestroySignSelection::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_DestroySignSelection, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'RoadSign_C_DestroySignSelection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_DestroySignSelection, Temp_int_Variable_3) == 0x000014, "Member 'RoadSign_C_DestroySignSelection::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_DestroySignSelection, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000018, "Member 'RoadSign_C_DestroySignSelection::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_DestroySignSelection, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'RoadSign_C_DestroySignSelection::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_DestroySignSelection, K2Node_Select_Default) == 0x000020, "Member 'RoadSign_C_DestroySignSelection::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(RoadSign_C_DestroySignSelection, K2Node_Select_Default_1) == 0x000028, "Member 'RoadSign_C_DestroySignSelection::K2Node_Select_Default_1' has a wrong offset!");

// Function RoadSign.RoadSign_C.AssignTextures
// 0x0458 (0x0458 - 0x0000)
struct RoadSign_C_AssignTextures final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable_4;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_5;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_6;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_7;                            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_8;                            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_9;                            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_10;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_11;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_12;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_13;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_14;                           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_15;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_16;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_17;                           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_18;                           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_19;                           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_20;                           // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_21;                           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_22;                           // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_23;                           // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable_24;                           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_25;                           // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_26;                           // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_27;                           // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_28;                           // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_29;                           // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_30;                           // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_31;                           // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_32;                           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_33;                           // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_34;                           // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_35;                           // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_36;                           // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_37;                           // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_38;                           // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_39;                           // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_40;                           // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_41;                           // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_42;                           // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_43;                           // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_44;                           // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_45;                           // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_46;                           // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_47;                           // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_48;                           // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_49;                           // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_50;                           // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_51;                           // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_52;                           // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_53;                           // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_54;                           // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_55;                           // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_56;                           // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_57;                           // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_58;                           // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_59;                           // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_60;                           // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_61;                           // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_62;                           // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_63;                           // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_64;                           // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_65;                           // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_66;                           // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_67;                           // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_68;                           // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_69;                           // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_70;                           // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_71;                           // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_72;                           // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_73;                           // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_74;                           // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_75;                           // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_76;                           // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_77;                           // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_78;                           // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_79;                           // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_80;                           // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_81;                           // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_82;                           // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_83;                           // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_84;                           // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_85;                           // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_86;                           // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_87;                           // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_88;                           // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_89;                           // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_90;                           // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_91;                           // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_92;                           // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_93;                           // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_94;                           // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_95;                           // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_96;                           // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_97;                           // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_98;                           // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_99;                           // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_100;                          // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_101;                          // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_102;                          // 0x0360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_103;                          // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_104;                          // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_105;                          // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_106;                          // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_107;                          // 0x0388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_108;                          // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_109;                          // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_110;                          // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_111;                          // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_112;                          // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_113;                          // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_114;                          // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_115;                          // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_116;                          // 0x03D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_117;                          // 0x03D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_118;                          // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_119;                          // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_120;                          // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_121;                          // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_122;                          // 0x0400(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x040A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40B[0x5];                                      // 0x040B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Select_Default;                             // 0x0410(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default_1;                           // 0x0418(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default_2;                           // 0x0420(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Select_Default_3;                           // 0x0438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_4;                           // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Select_Default_5;                           // 0x0448(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0450(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RoadSign_C_AssignTextures) == 0x000008, "Wrong alignment on RoadSign_C_AssignTextures");
static_assert(sizeof(RoadSign_C_AssignTextures) == 0x000458, "Wrong size on RoadSign_C_AssignTextures");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_bool_Variable) == 0x000000, "Member 'RoadSign_C_AssignTextures::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable) == 0x000008, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_1) == 0x000010, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_bool_Variable_1) == 0x000018, "Member 'RoadSign_C_AssignTextures::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_2) == 0x000020, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_3) == 0x000028, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_bool_Variable_2) == 0x000030, "Member 'RoadSign_C_AssignTextures::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_4) == 0x000038, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_bool_Variable_3) == 0x000040, "Member 'RoadSign_C_AssignTextures::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_int_Variable) == 0x000044, "Member 'RoadSign_C_AssignTextures::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_int_Variable_1) == 0x000048, "Member 'RoadSign_C_AssignTextures::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_int_Variable_2) == 0x00004C, "Member 'RoadSign_C_AssignTextures::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_5) == 0x000050, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_6) == 0x000058, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_7) == 0x000060, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_8) == 0x000068, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_9) == 0x000070, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_10) == 0x000078, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_11) == 0x000080, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_12) == 0x000088, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_13) == 0x000090, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_14) == 0x000098, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_15) == 0x0000A0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_16) == 0x0000A8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_17) == 0x0000B0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_18) == 0x0000B8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_19) == 0x0000C0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_20) == 0x0000C8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_21) == 0x0000D0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_22) == 0x0000D8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_23) == 0x0000E0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_int_Variable_3) == 0x0000E8, "Member 'RoadSign_C_AssignTextures::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_24) == 0x0000F0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_25) == 0x0000F8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_26) == 0x000100, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_27) == 0x000108, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_28) == 0x000110, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_29) == 0x000118, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_30) == 0x000120, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_31) == 0x000128, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_32) == 0x000130, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_33) == 0x000138, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_34) == 0x000140, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_35) == 0x000148, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_36) == 0x000150, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_36' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_37) == 0x000158, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_37' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_38) == 0x000160, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_38' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_39) == 0x000168, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_39' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_40) == 0x000170, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_40' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_41) == 0x000178, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_41' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_42) == 0x000180, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_42' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_43) == 0x000188, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_43' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_44) == 0x000190, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_44' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_45) == 0x000198, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_45' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_46) == 0x0001A0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_46' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_47) == 0x0001A8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_47' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_48) == 0x0001B0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_48' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_49) == 0x0001B8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_49' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_50) == 0x0001C0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_50' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_51) == 0x0001C8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_51' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_52) == 0x0001D0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_52' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_53) == 0x0001D8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_53' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_54) == 0x0001E0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_54' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_55) == 0x0001E8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_55' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_56) == 0x0001F0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_56' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_57) == 0x0001F8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_57' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_58) == 0x000200, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_58' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_59) == 0x000208, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_59' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_60) == 0x000210, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_60' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_61) == 0x000218, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_61' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_62) == 0x000220, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_62' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_63) == 0x000228, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_63' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_64) == 0x000230, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_64' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_65) == 0x000238, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_65' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_66) == 0x000240, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_66' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_67) == 0x000248, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_67' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_68) == 0x000250, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_68' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_69) == 0x000258, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_69' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_70) == 0x000260, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_70' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_71) == 0x000268, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_71' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_72) == 0x000270, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_72' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_73) == 0x000278, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_73' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_74) == 0x000280, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_74' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_75) == 0x000288, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_75' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_76) == 0x000290, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_76' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_77) == 0x000298, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_77' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_78) == 0x0002A0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_78' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_79) == 0x0002A8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_79' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_80) == 0x0002B0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_80' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_81) == 0x0002B8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_81' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_82) == 0x0002C0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_82' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_83) == 0x0002C8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_83' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_84) == 0x0002D0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_84' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_85) == 0x0002D8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_85' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_86) == 0x0002E0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_86' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_87) == 0x0002E8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_87' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_88) == 0x0002F0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_88' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_89) == 0x0002F8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_89' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_90) == 0x000300, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_90' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_91) == 0x000308, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_91' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_92) == 0x000310, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_92' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_93) == 0x000318, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_93' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_94) == 0x000320, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_94' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_95) == 0x000328, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_95' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_96) == 0x000330, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_96' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_97) == 0x000338, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_97' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_98) == 0x000340, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_98' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_99) == 0x000348, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_99' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_100) == 0x000350, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_100' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_101) == 0x000358, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_101' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_102) == 0x000360, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_102' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_103) == 0x000368, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_103' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_104) == 0x000370, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_104' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_105) == 0x000378, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_105' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_106) == 0x000380, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_106' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_107) == 0x000388, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_107' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_108) == 0x000390, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_108' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_109) == 0x000398, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_109' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_110) == 0x0003A0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_110' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_111) == 0x0003A8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_111' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_112) == 0x0003B0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_112' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_113) == 0x0003B8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_113' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_114) == 0x0003C0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_114' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_115) == 0x0003C8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_115' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_116) == 0x0003D0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_116' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_117) == 0x0003D8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_117' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_118) == 0x0003E0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_118' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_119) == 0x0003E8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_119' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_120) == 0x0003F0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_120' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_121) == 0x0003F8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_121' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_122) == 0x000400, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_122' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000408, "Member 'RoadSign_C_AssignTextures::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000409, "Member 'RoadSign_C_AssignTextures::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, CallFunc_BooleanOR_ReturnValue) == 0x00040A, "Member 'RoadSign_C_AssignTextures::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, K2Node_Select_Default) == 0x000410, "Member 'RoadSign_C_AssignTextures::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, K2Node_Select_Default_1) == 0x000418, "Member 'RoadSign_C_AssignTextures::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, K2Node_Select_Default_2) == 0x000420, "Member 'RoadSign_C_AssignTextures::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000428, "Member 'RoadSign_C_AssignTextures::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, CallFunc_BooleanOR_ReturnValue_1) == 0x000430, "Member 'RoadSign_C_AssignTextures::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, K2Node_Select_Default_3) == 0x000438, "Member 'RoadSign_C_AssignTextures::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, K2Node_Select_Default_4) == 0x000440, "Member 'RoadSign_C_AssignTextures::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, K2Node_Select_Default_5) == 0x000448, "Member 'RoadSign_C_AssignTextures::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000450, "Member 'RoadSign_C_AssignTextures::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");

// Function RoadSign.RoadSign_C.AssignSpeedLimitIndex
// 0x0013 (0x0013 - 0x0000)
struct RoadSign_C_AssignSpeedLimitIndex final
{
public:
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_10;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_11;         // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_12;         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_13;         // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_14;         // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_15;         // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_16;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_17;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_18;         // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RoadSign_C_AssignSpeedLimitIndex) == 0x000001, "Wrong alignment on RoadSign_C_AssignSpeedLimitIndex");
static_assert(sizeof(RoadSign_C_AssignSpeedLimitIndex) == 0x000013, "Wrong size on RoadSign_C_AssignSpeedLimitIndex");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000000, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000001, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000002, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000003, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000004, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x000005, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x000006, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x000007, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x000008, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x000009, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_10) == 0x00000A, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_11) == 0x00000B, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_12) == 0x00000C, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_13) == 0x00000D, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_14) == 0x00000E, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_15) == 0x00000F, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_16) == 0x000010, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_17) == 0x000011, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_18) == 0x000012, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_18' has a wrong offset!");

// Function RoadSign.RoadSign_C.AssignSelectionTextures
// 0x0558 (0x0558 - 0x0000)
struct RoadSign_C_AssignSelectionTextures final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_6;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_7;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_8;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_9;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_10;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_11;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_12;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_13;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_14;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_15;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_16;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_17;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_18;                           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_19;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_20;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_21;                           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_22;                           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_23;                           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_24;                           // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_25;                           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_26;                           // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_27;                           // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_28;                           // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_29;                           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_30;                           // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_31;                           // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_32;                           // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_33;                           // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_34;                           // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_35;                           // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_36;                           // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_37;                           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_38;                           // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_39;                           // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_40;                           // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_41;                           // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_42;                           // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_43;                           // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_44;                           // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_45;                           // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_46;                           // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_47;                           // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_48;                           // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_49;                           // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_50;                           // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_51;                           // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_52;                           // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_53;                           // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_54;                           // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_55;                           // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_56;                           // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_57;                           // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_58;                           // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_59;                           // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_60;                           // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_61;                           // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_62;                           // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_63;                           // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_64;                           // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_65;                           // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_66;                           // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_67;                           // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_68;                           // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_69;                           // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_70;                           // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_71;                           // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_72;                           // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_73;                           // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_74;                           // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_75;                           // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_76;                           // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_77;                           // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_78;                           // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_79;                           // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_80;                           // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_81;                           // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_82;                           // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_83;                           // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_84;                           // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_85;                           // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_86;                           // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_87;                           // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_88;                           // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_89;                           // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_90;                           // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_91;                           // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_92;                           // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_93;                           // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_94;                           // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_95;                           // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_96;                           // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_97;                           // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_98;                           // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_99;                           // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_335[0x3];                                      // 0x0335(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35D[0x3];                                      // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Select_Default;                             // 0x0368(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddLocalOffset_SweepHitResult;         // 0x0370(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UTexture*                               K2Node_Select_Default_1;                           // 0x0458(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Select_Default_2;                           // 0x0460(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddLocalOffset_SweepHitResult_1;       // 0x0470(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(RoadSign_C_AssignSelectionTextures) == 0x000008, "Wrong alignment on RoadSign_C_AssignSelectionTextures");
static_assert(sizeof(RoadSign_C_AssignSelectionTextures) == 0x000558, "Wrong size on RoadSign_C_AssignSelectionTextures");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_int_Variable) == 0x000000, "Member 'RoadSign_C_AssignSelectionTextures::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable) == 0x000008, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_1) == 0x000010, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_2) == 0x000018, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_3) == 0x000020, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_4) == 0x000028, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_5) == 0x000030, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_6) == 0x000038, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_7) == 0x000040, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_8) == 0x000048, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_9) == 0x000050, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_10) == 0x000058, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_11) == 0x000060, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_12) == 0x000068, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_13) == 0x000070, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_14) == 0x000078, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_15) == 0x000080, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_16) == 0x000088, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_17) == 0x000090, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_18) == 0x000098, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_19) == 0x0000A0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_20) == 0x0000A8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_21) == 0x0000B0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_22) == 0x0000B8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_23) == 0x0000C0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_24) == 0x0000C8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_25) == 0x0000D0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_26) == 0x0000D8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_27) == 0x0000E0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_28) == 0x0000E8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_29) == 0x0000F0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_30) == 0x0000F8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_31) == 0x000100, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_32) == 0x000108, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_33) == 0x000110, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_34) == 0x000118, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_35) == 0x000120, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_36) == 0x000128, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_36' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_37) == 0x000130, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_37' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_38) == 0x000138, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_38' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_39) == 0x000140, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_39' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_40) == 0x000148, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_40' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_41) == 0x000150, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_41' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_42) == 0x000158, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_42' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_43) == 0x000160, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_43' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_44) == 0x000168, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_44' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_45) == 0x000170, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_45' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_46) == 0x000178, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_46' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_47) == 0x000180, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_47' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_48) == 0x000188, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_48' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_49) == 0x000190, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_49' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_50) == 0x000198, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_50' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_51) == 0x0001A0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_51' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_52) == 0x0001A8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_52' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_53) == 0x0001B0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_53' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_54) == 0x0001B8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_54' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_55) == 0x0001C0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_55' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_56) == 0x0001C8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_56' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_57) == 0x0001D0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_57' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_58) == 0x0001D8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_58' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_59) == 0x0001E0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_59' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_60) == 0x0001E8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_60' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_61) == 0x0001F0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_61' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_62) == 0x0001F8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_62' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_63) == 0x000200, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_63' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_64) == 0x000208, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_64' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_65) == 0x000210, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_65' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_66) == 0x000218, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_66' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_67) == 0x000220, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_67' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_68) == 0x000228, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_68' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_69) == 0x000230, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_69' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_70) == 0x000238, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_70' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_71) == 0x000240, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_71' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_72) == 0x000248, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_72' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_73) == 0x000250, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_73' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_74) == 0x000258, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_74' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_75) == 0x000260, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_75' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_76) == 0x000268, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_76' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_77) == 0x000270, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_77' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_78) == 0x000278, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_78' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_79) == 0x000280, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_79' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_80) == 0x000288, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_80' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_81) == 0x000290, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_81' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_82) == 0x000298, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_82' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_83) == 0x0002A0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_83' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_84) == 0x0002A8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_84' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_85) == 0x0002B0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_85' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_86) == 0x0002B8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_86' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_87) == 0x0002C0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_87' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_88) == 0x0002C8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_88' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_89) == 0x0002D0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_89' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_90) == 0x0002D8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_90' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_91) == 0x0002E0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_91' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_92) == 0x0002E8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_92' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_93) == 0x0002F0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_93' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_94) == 0x0002F8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_94' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_95) == 0x000300, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_95' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_96) == 0x000308, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_96' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_97) == 0x000310, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_97' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_98) == 0x000318, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_98' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_99) == 0x000320, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_99' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_int_Variable_1) == 0x000328, "Member 'RoadSign_C_AssignSelectionTextures::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_int_Variable_2) == 0x00032C, "Member 'RoadSign_C_AssignSelectionTextures::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_int_Variable_3) == 0x000330, "Member 'RoadSign_C_AssignSelectionTextures::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000334, "Member 'RoadSign_C_AssignSelectionTextures::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, CallFunc_Add_IntInt_ReturnValue) == 0x000338, "Member 'RoadSign_C_AssignSelectionTextures::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, CallFunc_MakeVector_ReturnValue) == 0x000340, "Member 'RoadSign_C_AssignSelectionTextures::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_int_Variable_4) == 0x000358, "Member 'RoadSign_C_AssignSelectionTextures::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00035C, "Member 'RoadSign_C_AssignSelectionTextures::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, CallFunc_Add_IntInt_ReturnValue_1) == 0x000360, "Member 'RoadSign_C_AssignSelectionTextures::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, K2Node_Select_Default) == 0x000368, "Member 'RoadSign_C_AssignSelectionTextures::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, CallFunc_K2_AddLocalOffset_SweepHitResult) == 0x000370, "Member 'RoadSign_C_AssignSelectionTextures::CallFunc_K2_AddLocalOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, K2Node_Select_Default_1) == 0x000458, "Member 'RoadSign_C_AssignSelectionTextures::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, K2Node_Select_Default_2) == 0x000460, "Member 'RoadSign_C_AssignSelectionTextures::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000468, "Member 'RoadSign_C_AssignSelectionTextures::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, CallFunc_K2_AddLocalOffset_SweepHitResult_1) == 0x000470, "Member 'RoadSign_C_AssignSelectionTextures::CallFunc_K2_AddLocalOffset_SweepHitResult_1' has a wrong offset!");

}

