#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Briefing

#include "Basic.hpp"

#include "W_Briefing_classes.hpp"
#include "W_Briefing_parameters.hpp"


namespace SDK
{

// Function W_Briefing.W_Briefing_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_Briefing_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Briefing_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Briefing.W_Briefing_C.ExecuteUbergraph_W_Briefing
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Briefing_C::ExecuteUbergraph_W_Briefing(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Briefing_C", "ExecuteUbergraph_W_Briefing");

	Params::W_Briefing_C_ExecuteUbergraph_W_Briefing Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Briefing.W_Briefing_C.GetBriefingAudio
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FMissionAudio>*           Audio_0                                                (Parm, OutParm)
// TArray<struct FTimelineEvent>*          TimelineEvents                                         (Parm, OutParm)

void UW_Briefing_C::GetBriefingAudio(TArray<struct FMissionAudio>* Audio_0, TArray<struct FTimelineEvent>* TimelineEvents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Briefing_C", "GetBriefingAudio");

	Params::W_Briefing_C_GetBriefingAudio Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Audio_0 != nullptr)
		*Audio_0 = std::move(Parms.Audio_0);

	if (TimelineEvents != nullptr)
		*TimelineEvents = std::move(Parms.TimelineEvents);
}


// Function W_Briefing.W_Briefing_C.GetObjectives
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<TSoftClassPtr<class UClass>>*    Objectives_0                                           (Parm, OutParm)
// TArray<TSoftClassPtr<class UClass>>*    Challenges                                             (Parm, OutParm)

void UW_Briefing_C::GetObjectives(TArray<TSoftClassPtr<class UClass>>* Objectives_0, TArray<TSoftClassPtr<class UClass>>* Challenges)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Briefing_C", "GetObjectives");

	Params::W_Briefing_C_GetObjectives Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Objectives_0 != nullptr)
		*Objectives_0 = std::move(Parms.Objectives_0);

	if (Challenges != nullptr)
		*Challenges = std::move(Parms.Challenges);
}


// Function W_Briefing.W_Briefing_C.Hide
// (BlueprintCallable, BlueprintEvent)

void UW_Briefing_C::Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Briefing_C", "Hide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Briefing.W_Briefing_C.OnMouseButtonDoubleClick
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 InMyGeometry                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             InMouseEvent                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_Briefing_C::OnMouseButtonDoubleClick(const struct FGeometry& InMyGeometry, const struct FPointerEvent& InMouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Briefing_C", "OnMouseButtonDoubleClick");

	Params::W_Briefing_C_OnMouseButtonDoubleClick Parms{};

	Parms.InMyGeometry = std::move(InMyGeometry);
	Parms.InMouseEvent = std::move(InMouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_Briefing.W_Briefing_C.Original
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_Briefing_C::Original()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Briefing_C", "Original");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Briefing.W_Briefing_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Briefing_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Briefing_C", "PreConstruct");

	Params::W_Briefing_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Briefing.W_Briefing_C.Reveal
// (BlueprintCallable, BlueprintEvent)

void UW_Briefing_C::Reveal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Briefing_C", "Reveal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Briefing.W_Briefing_C.SetBriefingTaskButtonsActive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Briefing_C::SetBriefingTaskButtonsActive(bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Briefing_C", "SetBriefingTaskButtonsActive");

	Params::W_Briefing_C_SetBriefingTaskButtonsActive Parms{};

	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}

}

