#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_WheelIcon

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_WheelIcon.W_WheelIcon_C.ExecuteUbergraph_W_WheelIcon
// 0x0030 (0x0030 - 0x0000)
struct W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Unselected;                           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Selected;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon) == 0x000008, "Wrong alignment on W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon");
static_assert(sizeof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon) == 0x000030, "Wrong size on W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, EntryPoint) == 0x000000, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, K2Node_Event_Unselected) == 0x000004, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::K2Node_Event_Unselected' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, K2Node_Event_Selected) == 0x000021, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::K2Node_Event_Selected' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000024, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000028, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");

// Function W_WheelIcon.W_WheelIcon_C.OnHighlight
// 0x0001 (0x0001 - 0x0000)
struct W_WheelIcon_C_OnHighlight final
{
public:
	bool                                          Selected;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WheelIcon_C_OnHighlight) == 0x000001, "Wrong alignment on W_WheelIcon_C_OnHighlight");
static_assert(sizeof(W_WheelIcon_C_OnHighlight) == 0x000001, "Wrong size on W_WheelIcon_C_OnHighlight");
static_assert(offsetof(W_WheelIcon_C_OnHighlight, Selected) == 0x000000, "Member 'W_WheelIcon_C_OnHighlight::Selected' has a wrong offset!");

// Function W_WheelIcon.W_WheelIcon_C.OnUnhighlight
// 0x0001 (0x0001 - 0x0000)
struct W_WheelIcon_C_OnUnhighlight final
{
public:
	bool                                          Unselected;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WheelIcon_C_OnUnhighlight) == 0x000001, "Wrong alignment on W_WheelIcon_C_OnUnhighlight");
static_assert(sizeof(W_WheelIcon_C_OnUnhighlight) == 0x000001, "Wrong size on W_WheelIcon_C_OnUnhighlight");
static_assert(offsetof(W_WheelIcon_C_OnUnhighlight, Unselected) == 0x000000, "Member 'W_WheelIcon_C_OnUnhighlight::Unselected' has a wrong offset!");

// Function W_WheelIcon.W_WheelIcon_C.SetIconColorAndOpacity
// 0x0010 (0x0010 - 0x0000)
struct W_WheelIcon_C_SetIconColorAndOpacity final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WheelIcon_C_SetIconColorAndOpacity) == 0x000004, "Wrong alignment on W_WheelIcon_C_SetIconColorAndOpacity");
static_assert(sizeof(W_WheelIcon_C_SetIconColorAndOpacity) == 0x000010, "Wrong size on W_WheelIcon_C_SetIconColorAndOpacity");
static_assert(offsetof(W_WheelIcon_C_SetIconColorAndOpacity, Color) == 0x000000, "Member 'W_WheelIcon_C_SetIconColorAndOpacity::Color' has a wrong offset!");

// Function W_WheelIcon.W_WheelIcon_C.SetSelected
// 0x0014 (0x0014 - 0x0000)
struct W_WheelIcon_C_SetSelected final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0014)()
};
static_assert(alignof(W_WheelIcon_C_SetSelected) == 0x000004, "Wrong alignment on W_WheelIcon_C_SetSelected");
static_assert(sizeof(W_WheelIcon_C_SetSelected) == 0x000014, "Wrong size on W_WheelIcon_C_SetSelected");
static_assert(offsetof(W_WheelIcon_C_SetSelected, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'W_WheelIcon_C_SetSelected::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function W_WheelIcon.W_WheelIcon_C.SetUnselected
// 0x0014 (0x0014 - 0x0000)
struct W_WheelIcon_C_SetUnselected final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0014)()
};
static_assert(alignof(W_WheelIcon_C_SetUnselected) == 0x000004, "Wrong alignment on W_WheelIcon_C_SetUnselected");
static_assert(sizeof(W_WheelIcon_C_SetUnselected) == 0x000014, "Wrong size on W_WheelIcon_C_SetUnselected");
static_assert(offsetof(W_WheelIcon_C_SetUnselected, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'W_WheelIcon_C_SetUnselected::K2Node_MakeStruct_SlateColor' has a wrong offset!");

}

