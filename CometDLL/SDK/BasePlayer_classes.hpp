#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BasePlayer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BasePlayer.BasePlayer_C
// 0x00F0 (0x2EB0 - 0x2DC0)
class ABasePlayer_C final : public APlayerCharacter
{
public:
	uint8                                         Pad_2DB8[0x8];                                     // 0x2DB8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x2DC0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      ClothCollider;                                     // 0x2DC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        Current_Muscle_Strength;                           // 0x2DD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Muscle_Strength;                                   // 0x2DD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Muscle_Strength_DEAD;                              // 0x2DE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In_Air_Muscle_Strength_Switch;                     // 0x2DE8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In_Air_Switch_Delay;                               // 0x2DE9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuppressionDebug;                                 // 0x2DEA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DEB[0x5];                                     // 0x2DEB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           VaultStepAnim;                                     // 0x2DF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           VaultUpAnim;                                       // 0x2DF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           VaultOverAnim;                                     // 0x2E00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CurrentVaultMontage;                               // 0x2E08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentSuppressionShakeAmount;                     // 0x2E10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SuppressionShakeDecreaseRate;                      // 0x2E18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ArmBreakShakeAmount;                               // 0x2E20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SuppressionShakeScale;                             // 0x2E28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DefaultIdleShake;                                  // 0x2E30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SprintShakeAmount;                                 // 0x2E38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SprintShakeDecreaseRate;                           // 0x2E40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentSprintShakeAmount;                          // 0x2E48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TabletCursor;                                      // 0x2E50(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E51[0x7];                                     // 0x2E51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CurrentFoV;                                        // 0x2E58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TabletFocusTimer;                                  // 0x2E60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TabletOpen;                                        // 0x2E61(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E62[0x6];                                     // 0x2E62(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CurrentTabletFocusDelay;                           // 0x2E68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TabletFocused;                                     // 0x2E70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E71[0x7];                                     // 0x2E71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        minhfov;                                           // 0x2E78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        tgtvfov;                                           // 0x2E80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnCrouchStarted;                                   // 0x2E88(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnCrouchEnded;                                     // 0x2E98(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void AddFirstPersonShakeFromSuppression(double Strength);
	void ExecuteUbergraph_BasePlayer(int32 EntryPoint);
	void FocusTablet();
	void GetTabletZoomFOV(double* FOV);
	void InpActEvt_F1_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_F2_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_F3_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void InpActEvt_IA_AimDownSights_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_AimDownSights_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_AimDownSights_K2Node_EnhancedInputActionEvent_2(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_AimDownSights_K2Node_EnhancedInputActionEvent_3(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void K2_OnEndCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust);
	void K2_OnStartCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust);
	void OnBulletImpact(float DirectionForward, float DirectionRight);
	void OnJumpLand();
	void OnJumpStart();
	void OnKilledOrGoneUnconciousBP();
	void OnLeanEnd();
	void OnLeanStart();
	void OnSupression(float Strength);
	void OnTurn();
	void PlayVaultAnimation(const struct FVector& ledge, const struct FVector& ledgeWallNormal, const struct FVector& ledgeTraceDown, float ledgeZ, ELedgeWidth ledgeWidth, ELedgeHeight ledgeHeight);
	void ReceiveTick(float DeltaSeconds);
	void ToggleTabletCursor(bool Active);
	void UpdateFirstPersonShake(double DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BasePlayer_C">();
	}
	static class ABasePlayer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABasePlayer_C>();
	}
};
static_assert(alignof(ABasePlayer_C) == 0x000010, "Wrong alignment on ABasePlayer_C");
static_assert(sizeof(ABasePlayer_C) == 0x002EB0, "Wrong size on ABasePlayer_C");
static_assert(offsetof(ABasePlayer_C, UberGraphFrame) == 0x002DC0, "Member 'ABasePlayer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, ClothCollider) == 0x002DC8, "Member 'ABasePlayer_C::ClothCollider' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, Current_Muscle_Strength) == 0x002DD0, "Member 'ABasePlayer_C::Current_Muscle_Strength' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, Muscle_Strength) == 0x002DD8, "Member 'ABasePlayer_C::Muscle_Strength' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, Muscle_Strength_DEAD) == 0x002DE0, "Member 'ABasePlayer_C::Muscle_Strength_DEAD' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, In_Air_Muscle_Strength_Switch) == 0x002DE8, "Member 'ABasePlayer_C::In_Air_Muscle_Strength_Switch' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, In_Air_Switch_Delay) == 0x002DE9, "Member 'ABasePlayer_C::In_Air_Switch_Delay' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, bSuppressionDebug) == 0x002DEA, "Member 'ABasePlayer_C::bSuppressionDebug' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, VaultStepAnim) == 0x002DF0, "Member 'ABasePlayer_C::VaultStepAnim' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, VaultUpAnim) == 0x002DF8, "Member 'ABasePlayer_C::VaultUpAnim' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, VaultOverAnim) == 0x002E00, "Member 'ABasePlayer_C::VaultOverAnim' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, CurrentVaultMontage) == 0x002E08, "Member 'ABasePlayer_C::CurrentVaultMontage' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, CurrentSuppressionShakeAmount) == 0x002E10, "Member 'ABasePlayer_C::CurrentSuppressionShakeAmount' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, SuppressionShakeDecreaseRate) == 0x002E18, "Member 'ABasePlayer_C::SuppressionShakeDecreaseRate' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, ArmBreakShakeAmount) == 0x002E20, "Member 'ABasePlayer_C::ArmBreakShakeAmount' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, SuppressionShakeScale) == 0x002E28, "Member 'ABasePlayer_C::SuppressionShakeScale' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, DefaultIdleShake) == 0x002E30, "Member 'ABasePlayer_C::DefaultIdleShake' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, SprintShakeAmount) == 0x002E38, "Member 'ABasePlayer_C::SprintShakeAmount' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, SprintShakeDecreaseRate) == 0x002E40, "Member 'ABasePlayer_C::SprintShakeDecreaseRate' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, CurrentSprintShakeAmount) == 0x002E48, "Member 'ABasePlayer_C::CurrentSprintShakeAmount' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, TabletCursor) == 0x002E50, "Member 'ABasePlayer_C::TabletCursor' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, CurrentFoV) == 0x002E58, "Member 'ABasePlayer_C::CurrentFoV' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, TabletFocusTimer) == 0x002E60, "Member 'ABasePlayer_C::TabletFocusTimer' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, TabletOpen) == 0x002E61, "Member 'ABasePlayer_C::TabletOpen' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, CurrentTabletFocusDelay) == 0x002E68, "Member 'ABasePlayer_C::CurrentTabletFocusDelay' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, TabletFocused) == 0x002E70, "Member 'ABasePlayer_C::TabletFocused' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, minhfov) == 0x002E78, "Member 'ABasePlayer_C::minhfov' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, tgtvfov) == 0x002E80, "Member 'ABasePlayer_C::tgtvfov' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, OnCrouchStarted) == 0x002E88, "Member 'ABasePlayer_C::OnCrouchStarted' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, OnCrouchEnded) == 0x002E98, "Member 'ABasePlayer_C::OnCrouchEnded' has a wrong offset!");

}

