#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Settings

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Settings.W_Settings_C
// 0x0D70 (0x1030 - 0x02C0)
class UW_Settings_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UW_KeybindActionMap_C*                  AddTeleportPoint;                                  // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                AddTeleportPointButton;                            // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             AttachPointScroll;                                 // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Background;                                        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           BigCanvas;                                         // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_ColorWheel;                                 // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindActionMap_C*                  Camera;                                            // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UExpandableArea*                        CameraAttachments_E;                               // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindActionMap_C*                  CameraMod_TeleportToPoint1;                        // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindActionMap_C*                  CameraMod_TeleportToPoint10;                       // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindActionMap_C*                  CameraMod_TeleportToPoint2;                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindActionMap_C*                  CameraMod_TeleportToPoint3;                        // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindActionMap_C*                  CameraMod_TeleportToPoint4;                        // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindActionMap_C*                  CameraMod_TeleportToPoint5;                        // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindActionMap_C*                  CameraMod_TeleportToPoint6;                        // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindActionMap_C*                  CameraMod_TeleportToPoint7;                        // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindActionMap_C*                  CameraMod_TeleportToPoint8;                        // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindActionMap_C*                  CameraMod_TeleportToPoint9;                        // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UExpandableArea*                        CameraSaveLoad;                                    // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UExpandableArea*                        CameraSaveLoad_1;                                  // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             CameraSaveSlotsScroll;                             // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UExpandableArea*                        CameraSettingsE;                                   // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_Inertia;                                  // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              ColorGrading_CheckBox_Temp;                        // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              ColorGrading_CheckBox_TempTint;                    // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               ColorGrading_Cont_B_S;                             // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               ColorGrading_Cont_G_S;                             // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               ColorGrading_Cont_R_S;                             // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               ColorGrading_Cont_Y_S;                             // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               ColorGrading_GI_Indirect;                          // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               ColorGrading_Misc_BlueCorrect;                     // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               ColorGrading_Sat_W_S;                              // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               ColorGrading_Sat_X_S;                              // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               ColorGrading_Sat_Y_S;                              // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               ColorGrading_Sat_Z_S;                              // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               ColorGrading_Temp_Temp_S;                          // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               ColorGrading_Temp_Tint_S;                          // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UExpandableArea*                        ColorGradingContrastE;                             // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UExpandableArea*                        ColorGradingMiscE_1;                               // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UExpandableArea*                        ColorGradingSaturationE;                           // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UExpandableArea*                        ColorGradingTemperatureE;                          // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ColorPresenter;                                    // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ColorPresenter_I;                                  // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           ColorSettingsHolder;                               // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                CopyPPvButton_1;                                   // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                CreateCameraSaveButton;                            // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                CreateTeleportPointSaveButton;                     // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindAxisMap_C*                    DecreaseCameraSpeed;                               // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                DefaultPPvButton;                                  // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Film_Black_Clip_S;                                 // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Film_Shoulder_S;                                   // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Film_Slope_S;                                      // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Film_Toe_S;                                        // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Film_White_Clip_S;                                 // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UExpandableArea*                        FilmE;                                             // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               FocusDistance_S;                                   // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               General_Movement_Intertia;                         // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               General_Movement_Speed_AjustInterp;                // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               General_Movement_Speed_S;                          // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                General_Reset_All;                                 // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                General_Reset_Camera_Position;                     // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               General_Turn_Speed_S;                              // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UExpandableArea*                        GeneralE;                                          // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              GI_CheckBox_Indirect;                              // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              GI_CheckBox_IndirectColor_1;                       // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UComboBoxString*                        GI_ComboBoxString_GlobalIllumination_Method;       // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               GI_Indirect_W_S_1;                                 // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               GI_Indirect_X_S_1;                                 // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               GI_Indirect_Y_S_1;                                 // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               GI_Indirect_Z_S_1;                                 // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               GI_Lumen_Boost;                                    // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               GI_Lumen_Detail;                                   // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               GI_Lumen_Finalgather;                              // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               GI_Lumen_LightingQuality;                          // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               GI_Lumen_SceneViewDIstance;                        // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               GI_Lumen_Skylight;                                 // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               GI_Lumen_TraceDist;                                // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UExpandableArea*                        GlobalIlluminationE_2;                             // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_97;                                          // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindAxisMap_C*                    IncreaseCameraSpeed;                               // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UExpandableArea*                        Keybinds_E;                                        // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             KeybindsScroll;                                    // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindAxisMap_C*                    LeanLeft;                                          // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindAxisMap_C*                    LeanRight;                                         // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Lens_Diaphragm_Blade_Count;                        // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Lens_Flare_A_S;                                    // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Lens_Flare_B_S;                                    // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Lens_Flare_G_S;                                    // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Lens_Flare_Intensity_S;                            // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Lens_Flare_R_S;                                    // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Lens_Flare_Size_S;                                 // 0x0598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Lens_Flare_Threshold_S;                            // 0x05A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Lens_Max_Focal_Length;                             // 0x05A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Lens_Max_FStop;                                    // 0x05B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Lens_Min_Focal_Length;                             // 0x05B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Lens_Min_FStop;                                    // 0x05C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               LensBloom_Intensity_S;                             // 0x05C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               LensBloom_Scale_S;                                 // 0x05D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               LensBloom_Threshold_S;                             // 0x05D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UExpandableArea*                        LensBloomE;                                        // 0x05E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Lense_Image_Effects_CA_Intensity_S;                // 0x05E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Lense_Image_Effects_CA_Offset_S;                   // 0x05F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Lense_ImageEffects_GrainIntensity_S;               // 0x05F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Lense_ImageEffects_GrainJitter_S;                  // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Lense_ImageEffects_VignetteIntensity_S;            // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UExpandableArea*                        LenseImageEffectsE;                                // 0x0610(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LensFlare_Color;                                   // 0x0618(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UExpandableArea*                        LensFlareE;                                        // 0x0620(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UExpandableArea*                        LensSettings;                                      // 0x0628(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindActionMap_C*                  LoadCameraSettings1;                               // 0x0630(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindActionMap_C*                  LoadCameraSettings10;                              // 0x0638(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindActionMap_C*                  LoadCameraSettings2;                               // 0x0640(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindActionMap_C*                  LoadCameraSettings3;                               // 0x0648(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindActionMap_C*                  LoadCameraSettings4;                               // 0x0650(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindActionMap_C*                  LoadCameraSettings5;                               // 0x0658(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindActionMap_C*                  LoadCameraSettings6;                               // 0x0660(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindActionMap_C*                  LoadCameraSettings7;                               // 0x0668(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindActionMap_C*                  LoadCameraSettings8;                               // 0x0670(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindActionMap_C*                  LoadCameraSettings9;                               // 0x0678(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                LockToActorButton;                                 // 0x0680(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindActionMap_C*                  Menu;                                              // 0x0688(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               MotionBlur_Intensity_S;                            // 0x0690(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UExpandableArea*                        MotionBlurE;                                       // 0x0698(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                MouseOverFocusDistance;                            // 0x06A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindAxisMap_C*                    MoveDown;                                          // 0x06A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindAxisMap_C*                    MoveUp;                                            // 0x06B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindActionMap_C*                  Pause;                                             // 0x06B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               PL_Attenuation_Radius;                             // 0x06C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               PL_B;                                              // 0x06C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               PL_G;                                              // 0x06D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               PL_Intensity;                                      // 0x06D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               PL_R;                                              // 0x06E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               PL_Temperature;                                    // 0x06E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               PL_X;                                              // 0x06F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               PL_Y;                                              // 0x06F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               PL_Z;                                              // 0x0700(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PointLightName;                                    // 0x0708(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UExpandableArea*                        PointLightsE;                                      // 0x0710(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             PointLightsScroll;                                 // 0x0718(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Post_Process_Blend_Weight_S;                       // 0x0720(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              Reflection_CheckBox_SSR_Intensity;                 // 0x0728(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              Reflection_CheckBox_SSR_Quality;                   // 0x0730(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              Reflection_CheckBox_SSR_Roughness;                 // 0x0738(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UComboBoxString*                        Reflections_ComboBoxString_Reflection_Method_1;    // 0x0740(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Reflections_Lumen_Bounces;                         // 0x0748(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Reflections_Lumen_Quality;                         // 0x0750(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Reflections_SSR_Intensity;                         // 0x0758(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Reflections_SSR_Quality;                           // 0x0760(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Reflections_SSR_Roughness;                         // 0x0768(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UExpandableArea*                        ReflectionsE_3;                                    // 0x0770(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                RefreshButton;                                     // 0x0778(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                ResetBlueButton_1;                                 // 0x0780(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindActionMap_C*                  ResetCameraSettings;                               // 0x0788(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                SaveBindsButton;                                   // 0x0790(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindActionMap_C*                  Screenshot;                                        // 0x0798(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SideBar1;                                          // 0x07A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SideBar1_1;                                        // 0x07A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SideBar1_2;                                        // 0x07B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SideBar2;                                          // 0x07B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SideBar2_1;                                        // 0x07C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SideBar2_2;                                        // 0x07C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SideBar2_3;                                        // 0x07D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                TeleportPLCameraButton;                            // 0x07D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UExpandableArea*                        TeleportPoints_E;                                  // 0x07E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             TeleportPointSaveSlots;                            // 0x07E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             TeleportPointScroll;                               // 0x07F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                ToggleButton;                                      // 0x07F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                TogglePLArrowsButton;                              // 0x0800(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                ToggleTempButton_1;                                // 0x0808(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                ToggleTintButton;                                  // 0x0810(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                UnlockButton;                                      // 0x0818(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                V_Slider;                                          // 0x0820(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_EmptySlot_C*                         W_EmptySlot;                                       // 0x0828(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_EmptySlot_C*                         W_EmptySlot_1;                                     // 0x0830(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_EmptySlot_C*                         W_EmptySlot_2;                                     // 0x0838(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_EmptySlot_C*                         W_EmptySlot_3;                                     // 0x0840(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_EmptySlot_C*                         W_EmptySlot_199;                                   // 0x0848(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XXXXXXXXXXXXXX;                                    // 0x0850(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XXXXXXXXXXXXXXX;                                   // 0x0858(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XXXXXXXXXXXXXXXX;                                  // 0x0860(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XXXXXXXXXXXXXXXXX;                                 // 0x0868(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XXXXXXXXXXXXXXXXX_1;                               // 0x0870(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XXXXXXXXXXXXXXXXX_2;                               // 0x0878(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XXXXXXXXXXXXXXXXX_3;                               // 0x0880(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XXXXXXXXXXXXXXXXXX;                                // 0x0888(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XXXXXXXXXXXXXXXXXXX;                               // 0x0890(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XXXXXXXXXXXXXXXXXXX_1;                             // 0x0898(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XXXXXXXXXXXXXXXXXXXX;                              // 0x08A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XXXXXXXXXXXXXXXXXXXX_1;                            // 0x08A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XXXXXXXXXXXXXXXXXXXX_2;                            // 0x08B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XXXXXXXXXXXXXXXXXXXX_3;                            // 0x08B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XXXXXXXXXXXXXXXXXXXX_4;                            // 0x08C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XXXXXXXXXXXXXXXXXXXX_5;                            // 0x08C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XXXXXXXXXXXXXXXXXXXXX;                             // 0x08D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XXXXXXXXXXXXXXXXXXXXXXXX;                          // 0x08D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XXXXXXXXXXXXXXXXXXXXXXXX_1;                        // 0x08E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Main_C*                              W_Main;                                            // 0x08E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UW_SimplePointLight_C*                  W_PointLight;                                      // 0x08F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          isPointLightRefSwitching;                          // 0x08F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F9[0x7];                                      // 0x08F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        H;                                                 // 0x0900(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        S;                                                 // 0x0908(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        V;                                                 // 0x0910(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        bobberDistanceFromWheel;                           // 0x0918(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AngleBetweenVectors;                               // 0x0920(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isChangingWheelValues;                             // 0x0928(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_929[0x7];                                      // 0x0929(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACustomPointLight_C*                    Point_Light_Ref;                                   // 0x0930(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         NextCameraSaveSlot;                                // 0x0938(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93C[0x4];                                      // 0x093C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   PPDefault;                                         // 0x0940(0x06E0)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UW_Main_C*                              W_Main_0;                                          // 0x1020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Add_Teleport_Locations_From_Arrays(const TArray<class FString>& PointNames, const TArray<struct FVector>& PointLocations, const TArray<struct FRotator>& PointRotators);
	void AddTeleportPointToWorld();
	void BndEvt__W_CameraSettings_General_Reset_All_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_CameraSettings_General_Reset_Camera_Position_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_CameraSettings_LockToActorButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_CameraSettings_MouseOverFocusDistance_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_CameraSettings_UnlockButton_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_ColorSelector_Button_ColorWheel_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_Menu_PL_B_K2Node_ComponentBoundEvent_7_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void BndEvt__W_Menu_PL_G_K2Node_ComponentBoundEvent_6_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void BndEvt__W_Menu_PL_Intensity_K2Node_ComponentBoundEvent_12_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void BndEvt__W_Menu_PL_R_K2Node_ComponentBoundEvent_5_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void BndEvt__W_Menu_PL_X_K2Node_ComponentBoundEvent_8_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void BndEvt__W_Menu_PL_Y_K2Node_ComponentBoundEvent_9_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void BndEvt__W_Menu_PL_Z_K2Node_ComponentBoundEvent_10_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void BndEvt__W_Menu_TeleportPLCameraButton_K2Node_ComponentBoundEvent_11_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_Settings_AddTeleportPointButton_K2Node_ComponentBoundEvent_20_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_Settings_CopyPPvButton_1_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_Settings_CreateCameraSaveButton_K2Node_ComponentBoundEvent_21_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_Settings_CreateTeleportPointSaveButton_K2Node_ComponentBoundEvent_24_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_Settings_DefaultPPvButton_K2Node_ComponentBoundEvent_26_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_Settings_PL_Attenuation_Radius_K2Node_ComponentBoundEvent_14_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void BndEvt__W_Settings_PL_Temperature_K2Node_ComponentBoundEvent_13_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void BndEvt__W_Settings_RefreshButton_K2Node_ComponentBoundEvent_19_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_Settings_ResetBlueButton_1_K2Node_ComponentBoundEvent_23_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_Settings_ResetTintButton_K2Node_ComponentBoundEvent_21_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_Settings_SaveBindsButton_K2Node_ComponentBoundEvent_25_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_Settings_ToggleButton_K2Node_ComponentBoundEvent_27_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_Settings_TogglePLArrowsButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_Settings_ToggleTempButton_1_K2Node_ComponentBoundEvent_28_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_Settings_V_Slider_K2Node_ComponentBoundEvent_18_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void Construct();
	void CopyPostProcess(const struct FPostProcessSettings& Post_Process);
	void ExecuteUbergraph_W_Settings(int32 EntryPoint);
	void FindCurrentPP(class APostProcessVolume** PPV, bool* Valid);
	void FirstOpen();
	struct FSlateBrush Get_ColorPresenter_Brush_0();
	struct FSlateBrush Get_ColorPresenter_I_Brush_0();
	void GetNextAvailableSaveSlot(const class FString& SaveSlotType, int32* Index_0);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void Refresh_Camera_Saves();
	void Refresh_Teleport_Point_Saves();
	void RefreshAttachments();
	void Set_W_main(class UW_Main_C* W_Main_0);
	void SwapWidgetSlots(class UScrollBox* ScrollBox, int32 First, int32 Second);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

	void OnPaint(struct FPaintContext& Context) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Settings_C">();
	}
	static class UW_Settings_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Settings_C>();
	}
};
static_assert(alignof(UW_Settings_C) == 0x000010, "Wrong alignment on UW_Settings_C");
static_assert(sizeof(UW_Settings_C) == 0x001030, "Wrong size on UW_Settings_C");
static_assert(offsetof(UW_Settings_C, UberGraphFrame) == 0x0002C0, "Member 'UW_Settings_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, AddTeleportPoint) == 0x0002C8, "Member 'UW_Settings_C::AddTeleportPoint' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, AddTeleportPointButton) == 0x0002D0, "Member 'UW_Settings_C::AddTeleportPointButton' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, AttachPointScroll) == 0x0002D8, "Member 'UW_Settings_C::AttachPointScroll' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Background) == 0x0002E0, "Member 'UW_Settings_C::Background' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, BigCanvas) == 0x0002E8, "Member 'UW_Settings_C::BigCanvas' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Button_ColorWheel) == 0x0002F0, "Member 'UW_Settings_C::Button_ColorWheel' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Camera) == 0x0002F8, "Member 'UW_Settings_C::Camera' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, CameraAttachments_E) == 0x000300, "Member 'UW_Settings_C::CameraAttachments_E' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, CameraMod_TeleportToPoint1) == 0x000308, "Member 'UW_Settings_C::CameraMod_TeleportToPoint1' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, CameraMod_TeleportToPoint10) == 0x000310, "Member 'UW_Settings_C::CameraMod_TeleportToPoint10' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, CameraMod_TeleportToPoint2) == 0x000318, "Member 'UW_Settings_C::CameraMod_TeleportToPoint2' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, CameraMod_TeleportToPoint3) == 0x000320, "Member 'UW_Settings_C::CameraMod_TeleportToPoint3' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, CameraMod_TeleportToPoint4) == 0x000328, "Member 'UW_Settings_C::CameraMod_TeleportToPoint4' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, CameraMod_TeleportToPoint5) == 0x000330, "Member 'UW_Settings_C::CameraMod_TeleportToPoint5' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, CameraMod_TeleportToPoint6) == 0x000338, "Member 'UW_Settings_C::CameraMod_TeleportToPoint6' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, CameraMod_TeleportToPoint7) == 0x000340, "Member 'UW_Settings_C::CameraMod_TeleportToPoint7' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, CameraMod_TeleportToPoint8) == 0x000348, "Member 'UW_Settings_C::CameraMod_TeleportToPoint8' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, CameraMod_TeleportToPoint9) == 0x000350, "Member 'UW_Settings_C::CameraMod_TeleportToPoint9' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, CameraSaveLoad) == 0x000358, "Member 'UW_Settings_C::CameraSaveLoad' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, CameraSaveLoad_1) == 0x000360, "Member 'UW_Settings_C::CameraSaveLoad_1' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, CameraSaveSlotsScroll) == 0x000368, "Member 'UW_Settings_C::CameraSaveSlotsScroll' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, CameraSettingsE) == 0x000370, "Member 'UW_Settings_C::CameraSettingsE' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, CheckBox_Inertia) == 0x000378, "Member 'UW_Settings_C::CheckBox_Inertia' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ColorGrading_CheckBox_Temp) == 0x000380, "Member 'UW_Settings_C::ColorGrading_CheckBox_Temp' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ColorGrading_CheckBox_TempTint) == 0x000388, "Member 'UW_Settings_C::ColorGrading_CheckBox_TempTint' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ColorGrading_Cont_B_S) == 0x000390, "Member 'UW_Settings_C::ColorGrading_Cont_B_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ColorGrading_Cont_G_S) == 0x000398, "Member 'UW_Settings_C::ColorGrading_Cont_G_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ColorGrading_Cont_R_S) == 0x0003A0, "Member 'UW_Settings_C::ColorGrading_Cont_R_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ColorGrading_Cont_Y_S) == 0x0003A8, "Member 'UW_Settings_C::ColorGrading_Cont_Y_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ColorGrading_GI_Indirect) == 0x0003B0, "Member 'UW_Settings_C::ColorGrading_GI_Indirect' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ColorGrading_Misc_BlueCorrect) == 0x0003B8, "Member 'UW_Settings_C::ColorGrading_Misc_BlueCorrect' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ColorGrading_Sat_W_S) == 0x0003C0, "Member 'UW_Settings_C::ColorGrading_Sat_W_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ColorGrading_Sat_X_S) == 0x0003C8, "Member 'UW_Settings_C::ColorGrading_Sat_X_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ColorGrading_Sat_Y_S) == 0x0003D0, "Member 'UW_Settings_C::ColorGrading_Sat_Y_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ColorGrading_Sat_Z_S) == 0x0003D8, "Member 'UW_Settings_C::ColorGrading_Sat_Z_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ColorGrading_Temp_Temp_S) == 0x0003E0, "Member 'UW_Settings_C::ColorGrading_Temp_Temp_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ColorGrading_Temp_Tint_S) == 0x0003E8, "Member 'UW_Settings_C::ColorGrading_Temp_Tint_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ColorGradingContrastE) == 0x0003F0, "Member 'UW_Settings_C::ColorGradingContrastE' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ColorGradingMiscE_1) == 0x0003F8, "Member 'UW_Settings_C::ColorGradingMiscE_1' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ColorGradingSaturationE) == 0x000400, "Member 'UW_Settings_C::ColorGradingSaturationE' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ColorGradingTemperatureE) == 0x000408, "Member 'UW_Settings_C::ColorGradingTemperatureE' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ColorPresenter) == 0x000410, "Member 'UW_Settings_C::ColorPresenter' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ColorPresenter_I) == 0x000418, "Member 'UW_Settings_C::ColorPresenter_I' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ColorSettingsHolder) == 0x000420, "Member 'UW_Settings_C::ColorSettingsHolder' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, CopyPPvButton_1) == 0x000428, "Member 'UW_Settings_C::CopyPPvButton_1' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, CreateCameraSaveButton) == 0x000430, "Member 'UW_Settings_C::CreateCameraSaveButton' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, CreateTeleportPointSaveButton) == 0x000438, "Member 'UW_Settings_C::CreateTeleportPointSaveButton' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, DecreaseCameraSpeed) == 0x000440, "Member 'UW_Settings_C::DecreaseCameraSpeed' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, DefaultPPvButton) == 0x000448, "Member 'UW_Settings_C::DefaultPPvButton' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Film_Black_Clip_S) == 0x000450, "Member 'UW_Settings_C::Film_Black_Clip_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Film_Shoulder_S) == 0x000458, "Member 'UW_Settings_C::Film_Shoulder_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Film_Slope_S) == 0x000460, "Member 'UW_Settings_C::Film_Slope_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Film_Toe_S) == 0x000468, "Member 'UW_Settings_C::Film_Toe_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Film_White_Clip_S) == 0x000470, "Member 'UW_Settings_C::Film_White_Clip_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, FilmE) == 0x000478, "Member 'UW_Settings_C::FilmE' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, FocusDistance_S) == 0x000480, "Member 'UW_Settings_C::FocusDistance_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, General_Movement_Intertia) == 0x000488, "Member 'UW_Settings_C::General_Movement_Intertia' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, General_Movement_Speed_AjustInterp) == 0x000490, "Member 'UW_Settings_C::General_Movement_Speed_AjustInterp' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, General_Movement_Speed_S) == 0x000498, "Member 'UW_Settings_C::General_Movement_Speed_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, General_Reset_All) == 0x0004A0, "Member 'UW_Settings_C::General_Reset_All' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, General_Reset_Camera_Position) == 0x0004A8, "Member 'UW_Settings_C::General_Reset_Camera_Position' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, General_Turn_Speed_S) == 0x0004B0, "Member 'UW_Settings_C::General_Turn_Speed_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, GeneralE) == 0x0004B8, "Member 'UW_Settings_C::GeneralE' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, GI_CheckBox_Indirect) == 0x0004C0, "Member 'UW_Settings_C::GI_CheckBox_Indirect' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, GI_CheckBox_IndirectColor_1) == 0x0004C8, "Member 'UW_Settings_C::GI_CheckBox_IndirectColor_1' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, GI_ComboBoxString_GlobalIllumination_Method) == 0x0004D0, "Member 'UW_Settings_C::GI_ComboBoxString_GlobalIllumination_Method' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, GI_Indirect_W_S_1) == 0x0004D8, "Member 'UW_Settings_C::GI_Indirect_W_S_1' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, GI_Indirect_X_S_1) == 0x0004E0, "Member 'UW_Settings_C::GI_Indirect_X_S_1' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, GI_Indirect_Y_S_1) == 0x0004E8, "Member 'UW_Settings_C::GI_Indirect_Y_S_1' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, GI_Indirect_Z_S_1) == 0x0004F0, "Member 'UW_Settings_C::GI_Indirect_Z_S_1' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, GI_Lumen_Boost) == 0x0004F8, "Member 'UW_Settings_C::GI_Lumen_Boost' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, GI_Lumen_Detail) == 0x000500, "Member 'UW_Settings_C::GI_Lumen_Detail' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, GI_Lumen_Finalgather) == 0x000508, "Member 'UW_Settings_C::GI_Lumen_Finalgather' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, GI_Lumen_LightingQuality) == 0x000510, "Member 'UW_Settings_C::GI_Lumen_LightingQuality' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, GI_Lumen_SceneViewDIstance) == 0x000518, "Member 'UW_Settings_C::GI_Lumen_SceneViewDIstance' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, GI_Lumen_Skylight) == 0x000520, "Member 'UW_Settings_C::GI_Lumen_Skylight' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, GI_Lumen_TraceDist) == 0x000528, "Member 'UW_Settings_C::GI_Lumen_TraceDist' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, GlobalIlluminationE_2) == 0x000530, "Member 'UW_Settings_C::GlobalIlluminationE_2' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Image_97) == 0x000538, "Member 'UW_Settings_C::Image_97' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, IncreaseCameraSpeed) == 0x000540, "Member 'UW_Settings_C::IncreaseCameraSpeed' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Keybinds_E) == 0x000548, "Member 'UW_Settings_C::Keybinds_E' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, KeybindsScroll) == 0x000550, "Member 'UW_Settings_C::KeybindsScroll' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, LeanLeft) == 0x000558, "Member 'UW_Settings_C::LeanLeft' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, LeanRight) == 0x000560, "Member 'UW_Settings_C::LeanRight' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Lens_Diaphragm_Blade_Count) == 0x000568, "Member 'UW_Settings_C::Lens_Diaphragm_Blade_Count' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Lens_Flare_A_S) == 0x000570, "Member 'UW_Settings_C::Lens_Flare_A_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Lens_Flare_B_S) == 0x000578, "Member 'UW_Settings_C::Lens_Flare_B_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Lens_Flare_G_S) == 0x000580, "Member 'UW_Settings_C::Lens_Flare_G_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Lens_Flare_Intensity_S) == 0x000588, "Member 'UW_Settings_C::Lens_Flare_Intensity_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Lens_Flare_R_S) == 0x000590, "Member 'UW_Settings_C::Lens_Flare_R_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Lens_Flare_Size_S) == 0x000598, "Member 'UW_Settings_C::Lens_Flare_Size_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Lens_Flare_Threshold_S) == 0x0005A0, "Member 'UW_Settings_C::Lens_Flare_Threshold_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Lens_Max_Focal_Length) == 0x0005A8, "Member 'UW_Settings_C::Lens_Max_Focal_Length' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Lens_Max_FStop) == 0x0005B0, "Member 'UW_Settings_C::Lens_Max_FStop' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Lens_Min_Focal_Length) == 0x0005B8, "Member 'UW_Settings_C::Lens_Min_Focal_Length' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Lens_Min_FStop) == 0x0005C0, "Member 'UW_Settings_C::Lens_Min_FStop' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, LensBloom_Intensity_S) == 0x0005C8, "Member 'UW_Settings_C::LensBloom_Intensity_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, LensBloom_Scale_S) == 0x0005D0, "Member 'UW_Settings_C::LensBloom_Scale_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, LensBloom_Threshold_S) == 0x0005D8, "Member 'UW_Settings_C::LensBloom_Threshold_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, LensBloomE) == 0x0005E0, "Member 'UW_Settings_C::LensBloomE' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Lense_Image_Effects_CA_Intensity_S) == 0x0005E8, "Member 'UW_Settings_C::Lense_Image_Effects_CA_Intensity_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Lense_Image_Effects_CA_Offset_S) == 0x0005F0, "Member 'UW_Settings_C::Lense_Image_Effects_CA_Offset_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Lense_ImageEffects_GrainIntensity_S) == 0x0005F8, "Member 'UW_Settings_C::Lense_ImageEffects_GrainIntensity_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Lense_ImageEffects_GrainJitter_S) == 0x000600, "Member 'UW_Settings_C::Lense_ImageEffects_GrainJitter_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Lense_ImageEffects_VignetteIntensity_S) == 0x000608, "Member 'UW_Settings_C::Lense_ImageEffects_VignetteIntensity_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, LenseImageEffectsE) == 0x000610, "Member 'UW_Settings_C::LenseImageEffectsE' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, LensFlare_Color) == 0x000618, "Member 'UW_Settings_C::LensFlare_Color' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, LensFlareE) == 0x000620, "Member 'UW_Settings_C::LensFlareE' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, LensSettings) == 0x000628, "Member 'UW_Settings_C::LensSettings' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, LoadCameraSettings1) == 0x000630, "Member 'UW_Settings_C::LoadCameraSettings1' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, LoadCameraSettings10) == 0x000638, "Member 'UW_Settings_C::LoadCameraSettings10' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, LoadCameraSettings2) == 0x000640, "Member 'UW_Settings_C::LoadCameraSettings2' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, LoadCameraSettings3) == 0x000648, "Member 'UW_Settings_C::LoadCameraSettings3' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, LoadCameraSettings4) == 0x000650, "Member 'UW_Settings_C::LoadCameraSettings4' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, LoadCameraSettings5) == 0x000658, "Member 'UW_Settings_C::LoadCameraSettings5' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, LoadCameraSettings6) == 0x000660, "Member 'UW_Settings_C::LoadCameraSettings6' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, LoadCameraSettings7) == 0x000668, "Member 'UW_Settings_C::LoadCameraSettings7' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, LoadCameraSettings8) == 0x000670, "Member 'UW_Settings_C::LoadCameraSettings8' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, LoadCameraSettings9) == 0x000678, "Member 'UW_Settings_C::LoadCameraSettings9' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, LockToActorButton) == 0x000680, "Member 'UW_Settings_C::LockToActorButton' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Menu) == 0x000688, "Member 'UW_Settings_C::Menu' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, MotionBlur_Intensity_S) == 0x000690, "Member 'UW_Settings_C::MotionBlur_Intensity_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, MotionBlurE) == 0x000698, "Member 'UW_Settings_C::MotionBlurE' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, MouseOverFocusDistance) == 0x0006A0, "Member 'UW_Settings_C::MouseOverFocusDistance' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, MoveDown) == 0x0006A8, "Member 'UW_Settings_C::MoveDown' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, MoveUp) == 0x0006B0, "Member 'UW_Settings_C::MoveUp' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Pause) == 0x0006B8, "Member 'UW_Settings_C::Pause' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, PL_Attenuation_Radius) == 0x0006C0, "Member 'UW_Settings_C::PL_Attenuation_Radius' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, PL_B) == 0x0006C8, "Member 'UW_Settings_C::PL_B' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, PL_G) == 0x0006D0, "Member 'UW_Settings_C::PL_G' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, PL_Intensity) == 0x0006D8, "Member 'UW_Settings_C::PL_Intensity' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, PL_R) == 0x0006E0, "Member 'UW_Settings_C::PL_R' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, PL_Temperature) == 0x0006E8, "Member 'UW_Settings_C::PL_Temperature' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, PL_X) == 0x0006F0, "Member 'UW_Settings_C::PL_X' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, PL_Y) == 0x0006F8, "Member 'UW_Settings_C::PL_Y' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, PL_Z) == 0x000700, "Member 'UW_Settings_C::PL_Z' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, PointLightName) == 0x000708, "Member 'UW_Settings_C::PointLightName' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, PointLightsE) == 0x000710, "Member 'UW_Settings_C::PointLightsE' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, PointLightsScroll) == 0x000718, "Member 'UW_Settings_C::PointLightsScroll' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Post_Process_Blend_Weight_S) == 0x000720, "Member 'UW_Settings_C::Post_Process_Blend_Weight_S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Reflection_CheckBox_SSR_Intensity) == 0x000728, "Member 'UW_Settings_C::Reflection_CheckBox_SSR_Intensity' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Reflection_CheckBox_SSR_Quality) == 0x000730, "Member 'UW_Settings_C::Reflection_CheckBox_SSR_Quality' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Reflection_CheckBox_SSR_Roughness) == 0x000738, "Member 'UW_Settings_C::Reflection_CheckBox_SSR_Roughness' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Reflections_ComboBoxString_Reflection_Method_1) == 0x000740, "Member 'UW_Settings_C::Reflections_ComboBoxString_Reflection_Method_1' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Reflections_Lumen_Bounces) == 0x000748, "Member 'UW_Settings_C::Reflections_Lumen_Bounces' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Reflections_Lumen_Quality) == 0x000750, "Member 'UW_Settings_C::Reflections_Lumen_Quality' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Reflections_SSR_Intensity) == 0x000758, "Member 'UW_Settings_C::Reflections_SSR_Intensity' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Reflections_SSR_Quality) == 0x000760, "Member 'UW_Settings_C::Reflections_SSR_Quality' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Reflections_SSR_Roughness) == 0x000768, "Member 'UW_Settings_C::Reflections_SSR_Roughness' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ReflectionsE_3) == 0x000770, "Member 'UW_Settings_C::ReflectionsE_3' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, RefreshButton) == 0x000778, "Member 'UW_Settings_C::RefreshButton' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ResetBlueButton_1) == 0x000780, "Member 'UW_Settings_C::ResetBlueButton_1' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ResetCameraSettings) == 0x000788, "Member 'UW_Settings_C::ResetCameraSettings' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, SaveBindsButton) == 0x000790, "Member 'UW_Settings_C::SaveBindsButton' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Screenshot) == 0x000798, "Member 'UW_Settings_C::Screenshot' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, SideBar1) == 0x0007A0, "Member 'UW_Settings_C::SideBar1' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, SideBar1_1) == 0x0007A8, "Member 'UW_Settings_C::SideBar1_1' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, SideBar1_2) == 0x0007B0, "Member 'UW_Settings_C::SideBar1_2' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, SideBar2) == 0x0007B8, "Member 'UW_Settings_C::SideBar2' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, SideBar2_1) == 0x0007C0, "Member 'UW_Settings_C::SideBar2_1' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, SideBar2_2) == 0x0007C8, "Member 'UW_Settings_C::SideBar2_2' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, SideBar2_3) == 0x0007D0, "Member 'UW_Settings_C::SideBar2_3' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, TeleportPLCameraButton) == 0x0007D8, "Member 'UW_Settings_C::TeleportPLCameraButton' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, TeleportPoints_E) == 0x0007E0, "Member 'UW_Settings_C::TeleportPoints_E' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, TeleportPointSaveSlots) == 0x0007E8, "Member 'UW_Settings_C::TeleportPointSaveSlots' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, TeleportPointScroll) == 0x0007F0, "Member 'UW_Settings_C::TeleportPointScroll' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ToggleButton) == 0x0007F8, "Member 'UW_Settings_C::ToggleButton' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, TogglePLArrowsButton) == 0x000800, "Member 'UW_Settings_C::TogglePLArrowsButton' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ToggleTempButton_1) == 0x000808, "Member 'UW_Settings_C::ToggleTempButton_1' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, ToggleTintButton) == 0x000810, "Member 'UW_Settings_C::ToggleTintButton' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, UnlockButton) == 0x000818, "Member 'UW_Settings_C::UnlockButton' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, V_Slider) == 0x000820, "Member 'UW_Settings_C::V_Slider' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, W_EmptySlot) == 0x000828, "Member 'UW_Settings_C::W_EmptySlot' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, W_EmptySlot_1) == 0x000830, "Member 'UW_Settings_C::W_EmptySlot_1' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, W_EmptySlot_2) == 0x000838, "Member 'UW_Settings_C::W_EmptySlot_2' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, W_EmptySlot_3) == 0x000840, "Member 'UW_Settings_C::W_EmptySlot_3' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, W_EmptySlot_199) == 0x000848, "Member 'UW_Settings_C::W_EmptySlot_199' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, XXXXXXXXXXXXXX) == 0x000850, "Member 'UW_Settings_C::XXXXXXXXXXXXXX' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, XXXXXXXXXXXXXXX) == 0x000858, "Member 'UW_Settings_C::XXXXXXXXXXXXXXX' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, XXXXXXXXXXXXXXXX) == 0x000860, "Member 'UW_Settings_C::XXXXXXXXXXXXXXXX' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, XXXXXXXXXXXXXXXXX) == 0x000868, "Member 'UW_Settings_C::XXXXXXXXXXXXXXXXX' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, XXXXXXXXXXXXXXXXX_1) == 0x000870, "Member 'UW_Settings_C::XXXXXXXXXXXXXXXXX_1' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, XXXXXXXXXXXXXXXXX_2) == 0x000878, "Member 'UW_Settings_C::XXXXXXXXXXXXXXXXX_2' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, XXXXXXXXXXXXXXXXX_3) == 0x000880, "Member 'UW_Settings_C::XXXXXXXXXXXXXXXXX_3' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, XXXXXXXXXXXXXXXXXX) == 0x000888, "Member 'UW_Settings_C::XXXXXXXXXXXXXXXXXX' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, XXXXXXXXXXXXXXXXXXX) == 0x000890, "Member 'UW_Settings_C::XXXXXXXXXXXXXXXXXXX' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, XXXXXXXXXXXXXXXXXXX_1) == 0x000898, "Member 'UW_Settings_C::XXXXXXXXXXXXXXXXXXX_1' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, XXXXXXXXXXXXXXXXXXXX) == 0x0008A0, "Member 'UW_Settings_C::XXXXXXXXXXXXXXXXXXXX' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, XXXXXXXXXXXXXXXXXXXX_1) == 0x0008A8, "Member 'UW_Settings_C::XXXXXXXXXXXXXXXXXXXX_1' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, XXXXXXXXXXXXXXXXXXXX_2) == 0x0008B0, "Member 'UW_Settings_C::XXXXXXXXXXXXXXXXXXXX_2' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, XXXXXXXXXXXXXXXXXXXX_3) == 0x0008B8, "Member 'UW_Settings_C::XXXXXXXXXXXXXXXXXXXX_3' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, XXXXXXXXXXXXXXXXXXXX_4) == 0x0008C0, "Member 'UW_Settings_C::XXXXXXXXXXXXXXXXXXXX_4' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, XXXXXXXXXXXXXXXXXXXX_5) == 0x0008C8, "Member 'UW_Settings_C::XXXXXXXXXXXXXXXXXXXX_5' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, XXXXXXXXXXXXXXXXXXXXX) == 0x0008D0, "Member 'UW_Settings_C::XXXXXXXXXXXXXXXXXXXXX' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, XXXXXXXXXXXXXXXXXXXXXXXX) == 0x0008D8, "Member 'UW_Settings_C::XXXXXXXXXXXXXXXXXXXXXXXX' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, XXXXXXXXXXXXXXXXXXXXXXXX_1) == 0x0008E0, "Member 'UW_Settings_C::XXXXXXXXXXXXXXXXXXXXXXXX_1' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, W_Main) == 0x0008E8, "Member 'UW_Settings_C::W_Main' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, W_PointLight) == 0x0008F0, "Member 'UW_Settings_C::W_PointLight' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, isPointLightRefSwitching) == 0x0008F8, "Member 'UW_Settings_C::isPointLightRefSwitching' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, H) == 0x000900, "Member 'UW_Settings_C::H' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, S) == 0x000908, "Member 'UW_Settings_C::S' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, V) == 0x000910, "Member 'UW_Settings_C::V' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, bobberDistanceFromWheel) == 0x000918, "Member 'UW_Settings_C::bobberDistanceFromWheel' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, AngleBetweenVectors) == 0x000920, "Member 'UW_Settings_C::AngleBetweenVectors' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, isChangingWheelValues) == 0x000928, "Member 'UW_Settings_C::isChangingWheelValues' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, Point_Light_Ref) == 0x000930, "Member 'UW_Settings_C::Point_Light_Ref' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, NextCameraSaveSlot) == 0x000938, "Member 'UW_Settings_C::NextCameraSaveSlot' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, PPDefault) == 0x000940, "Member 'UW_Settings_C::PPDefault' has a wrong offset!");
static_assert(offsetof(UW_Settings_C, W_Main_0) == 0x001020, "Member 'UW_Settings_C::W_Main_0' has a wrong offset!");

}

