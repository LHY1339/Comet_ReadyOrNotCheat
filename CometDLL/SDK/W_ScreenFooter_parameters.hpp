#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ScreenFooter

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_ScreenFooter.W_ScreenFooter_C.AddFooterEntry
// 0x0170 (0x0170 - 0x0000)
struct W_ScreenFooter_C_AddFooterEntry final
{
public:
	int32                                         InsertAtIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 EntryID;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
	struct FScreenFooterEntry                     ScreenFooterEntry;                                 // 0x0018(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<struct FScreenFooterEntry>             TempValues;                                        // 0x0090(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         TempKeys;                                          // 0x00A0(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScreenFooterEntry                     CallFunc_Array_Get_Item;                           // 0x00C0(0x0078)()
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FScreenFooterEntry>             CallFunc_Map_Values_Values;                        // 0x0150(0x0010)(ReferenceParm)
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0160(0x0010)(ReferenceParm)
};
static_assert(alignof(W_ScreenFooter_C_AddFooterEntry) == 0x000008, "Wrong alignment on W_ScreenFooter_C_AddFooterEntry");
static_assert(sizeof(W_ScreenFooter_C_AddFooterEntry) == 0x000170, "Wrong size on W_ScreenFooter_C_AddFooterEntry");
static_assert(offsetof(W_ScreenFooter_C_AddFooterEntry, InsertAtIndex) == 0x000000, "Member 'W_ScreenFooter_C_AddFooterEntry::InsertAtIndex' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_AddFooterEntry, EntryID) == 0x000008, "Member 'W_ScreenFooter_C_AddFooterEntry::EntryID' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_AddFooterEntry, ScreenFooterEntry) == 0x000018, "Member 'W_ScreenFooter_C_AddFooterEntry::ScreenFooterEntry' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_AddFooterEntry, TempValues) == 0x000090, "Member 'W_ScreenFooter_C_AddFooterEntry::TempValues' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_AddFooterEntry, TempKeys) == 0x0000A0, "Member 'W_ScreenFooter_C_AddFooterEntry::TempKeys' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_AddFooterEntry, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000B0, "Member 'W_ScreenFooter_C_AddFooterEntry::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_AddFooterEntry, Temp_int_Array_Index_Variable) == 0x0000B4, "Member 'W_ScreenFooter_C_AddFooterEntry::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_AddFooterEntry, Temp_int_Loop_Counter_Variable) == 0x0000B8, "Member 'W_ScreenFooter_C_AddFooterEntry::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_AddFooterEntry, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'W_ScreenFooter_C_AddFooterEntry::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_AddFooterEntry, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'W_ScreenFooter_C_AddFooterEntry::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_AddFooterEntry, CallFunc_Array_Get_Item_1) == 0x000138, "Member 'W_ScreenFooter_C_AddFooterEntry::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_AddFooterEntry, CallFunc_Array_Length_ReturnValue) == 0x000148, "Member 'W_ScreenFooter_C_AddFooterEntry::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_AddFooterEntry, CallFunc_Less_IntInt_ReturnValue) == 0x00014C, "Member 'W_ScreenFooter_C_AddFooterEntry::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_AddFooterEntry, CallFunc_Map_Values_Values) == 0x000150, "Member 'W_ScreenFooter_C_AddFooterEntry::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_AddFooterEntry, CallFunc_Map_Keys_Keys) == 0x000160, "Member 'W_ScreenFooter_C_AddFooterEntry::CallFunc_Map_Keys_Keys' has a wrong offset!");

// Function W_ScreenFooter.W_ScreenFooter_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_ScreenFooter_C_BackPage final
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooter_C_BackPage) == 0x000001, "Wrong alignment on W_ScreenFooter_C_BackPage");
static_assert(sizeof(W_ScreenFooter_C_BackPage) == 0x000001, "Wrong size on W_ScreenFooter_C_BackPage");
static_assert(offsetof(W_ScreenFooter_C_BackPage, Handled) == 0x000000, "Member 'W_ScreenFooter_C_BackPage::Handled' has a wrong offset!");

// Function W_ScreenFooter.W_ScreenFooter_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_ScreenFooter_C_ChangePage final
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooter_C_ChangePage) == 0x000004, "Wrong alignment on W_ScreenFooter_C_ChangePage");
static_assert(sizeof(W_ScreenFooter_C_ChangePage) == 0x000008, "Wrong size on W_ScreenFooter_C_ChangePage");
static_assert(offsetof(W_ScreenFooter_C_ChangePage, PageName) == 0x000000, "Member 'W_ScreenFooter_C_ChangePage::PageName' has a wrong offset!");

// Function W_ScreenFooter.W_ScreenFooter_C.ExecuteUbergraph_W_ScreenFooter
// 0x0048 (0x0048 - 0x0000)
struct W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ScreenFooterEntry_C*                 K2Node_CustomEvent_Entry;                          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Delay_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Delay;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ScreenFooterEntry_C*                 K2Node_CustomEvent_Entry_3;                        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_ScreenFooterEntry_C*                 K2Node_CustomEvent_Entry_2;                        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_ScreenFooterEntry_C*                 K2Node_CustomEvent_Entry_1;                        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter) == 0x000008, "Wrong alignment on W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter");
static_assert(sizeof(W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter) == 0x000048, "Wrong size on W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter");
static_assert(offsetof(W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter, EntryPoint) == 0x000000, "Member 'W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter, K2Node_CustomEvent_Entry) == 0x000008, "Member 'W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter::K2Node_CustomEvent_Entry' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter, K2Node_Event_Delay_1) == 0x000010, "Member 'W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter, K2Node_Event_Delay) == 0x000018, "Member 'W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter, K2Node_Event_Collapse) == 0x000020, "Member 'W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter, K2Node_Event_IsGamepad) == 0x000021, "Member 'W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter, K2Node_Event_PageName) == 0x000024, "Member 'W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter, K2Node_Event_IsDesignTime) == 0x00002C, "Member 'W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter, K2Node_CustomEvent_Entry_3) == 0x000030, "Member 'W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter::K2Node_CustomEvent_Entry_3' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter, K2Node_CustomEvent_Entry_2) == 0x000038, "Member 'W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter::K2Node_CustomEvent_Entry_2' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter, K2Node_CustomEvent_Entry_1) == 0x000040, "Member 'W_ScreenFooter_C_ExecuteUbergraph_W_ScreenFooter::K2Node_CustomEvent_Entry_1' has a wrong offset!");

// Function W_ScreenFooter.W_ScreenFooter_C.FooterEntryClicked
// 0x0008 (0x0008 - 0x0000)
struct W_ScreenFooter_C_FooterEntryClicked final
{
public:
	class UW_ScreenFooterEntry_C*                 Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooter_C_FooterEntryClicked) == 0x000008, "Wrong alignment on W_ScreenFooter_C_FooterEntryClicked");
static_assert(sizeof(W_ScreenFooter_C_FooterEntryClicked) == 0x000008, "Wrong size on W_ScreenFooter_C_FooterEntryClicked");
static_assert(offsetof(W_ScreenFooter_C_FooterEntryClicked, Entry) == 0x000000, "Member 'W_ScreenFooter_C_FooterEntryClicked::Entry' has a wrong offset!");

// Function W_ScreenFooter.W_ScreenFooter_C.FooterEntryHovered
// 0x0008 (0x0008 - 0x0000)
struct W_ScreenFooter_C_FooterEntryHovered final
{
public:
	class UW_ScreenFooterEntry_C*                 Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooter_C_FooterEntryHovered) == 0x000008, "Wrong alignment on W_ScreenFooter_C_FooterEntryHovered");
static_assert(sizeof(W_ScreenFooter_C_FooterEntryHovered) == 0x000008, "Wrong size on W_ScreenFooter_C_FooterEntryHovered");
static_assert(offsetof(W_ScreenFooter_C_FooterEntryHovered, Entry) == 0x000000, "Member 'W_ScreenFooter_C_FooterEntryHovered::Entry' has a wrong offset!");

// Function W_ScreenFooter.W_ScreenFooter_C.FooterEntryPressed
// 0x0008 (0x0008 - 0x0000)
struct W_ScreenFooter_C_FooterEntryPressed final
{
public:
	class UW_ScreenFooterEntry_C*                 Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooter_C_FooterEntryPressed) == 0x000008, "Wrong alignment on W_ScreenFooter_C_FooterEntryPressed");
static_assert(sizeof(W_ScreenFooter_C_FooterEntryPressed) == 0x000008, "Wrong size on W_ScreenFooter_C_FooterEntryPressed");
static_assert(offsetof(W_ScreenFooter_C_FooterEntryPressed, Entry) == 0x000000, "Member 'W_ScreenFooter_C_FooterEntryPressed::Entry' has a wrong offset!");

// Function W_ScreenFooter.W_ScreenFooter_C.FooterEntryReleased
// 0x0008 (0x0008 - 0x0000)
struct W_ScreenFooter_C_FooterEntryReleased final
{
public:
	class UW_ScreenFooterEntry_C*                 Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooter_C_FooterEntryReleased) == 0x000008, "Wrong alignment on W_ScreenFooter_C_FooterEntryReleased");
static_assert(sizeof(W_ScreenFooter_C_FooterEntryReleased) == 0x000008, "Wrong size on W_ScreenFooter_C_FooterEntryReleased");
static_assert(offsetof(W_ScreenFooter_C_FooterEntryReleased, Entry) == 0x000000, "Member 'W_ScreenFooter_C_FooterEntryReleased::Entry' has a wrong offset!");

// Function W_ScreenFooter.W_ScreenFooter_C.Hide
// 0x0010 (0x0010 - 0x0000)
struct W_ScreenFooter_C_Hide final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooter_C_Hide) == 0x000008, "Wrong alignment on W_ScreenFooter_C_Hide");
static_assert(sizeof(W_ScreenFooter_C_Hide) == 0x000010, "Wrong size on W_ScreenFooter_C_Hide");
static_assert(offsetof(W_ScreenFooter_C_Hide, Delay) == 0x000000, "Member 'W_ScreenFooter_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_Hide, Collapse) == 0x000008, "Member 'W_ScreenFooter_C_Hide::Collapse' has a wrong offset!");

// Function W_ScreenFooter.W_ScreenFooter_C.HideEntryByID
// 0x0010 (0x0010 - 0x0000)
struct W_ScreenFooter_C_HideEntryByID final
{
public:
	class FString                                 ButtonID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooter_C_HideEntryByID) == 0x000008, "Wrong alignment on W_ScreenFooter_C_HideEntryByID");
static_assert(sizeof(W_ScreenFooter_C_HideEntryByID) == 0x000010, "Wrong size on W_ScreenFooter_C_HideEntryByID");
static_assert(offsetof(W_ScreenFooter_C_HideEntryByID, ButtonID) == 0x000000, "Member 'W_ScreenFooter_C_HideEntryByID::ButtonID' has a wrong offset!");

// Function W_ScreenFooter.W_ScreenFooter_C.HideEntryByIndex
// 0x0004 (0x0004 - 0x0000)
struct W_ScreenFooter_C_HideEntryByIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooter_C_HideEntryByIndex) == 0x000004, "Wrong alignment on W_ScreenFooter_C_HideEntryByIndex");
static_assert(sizeof(W_ScreenFooter_C_HideEntryByIndex) == 0x000004, "Wrong size on W_ScreenFooter_C_HideEntryByIndex");
static_assert(offsetof(W_ScreenFooter_C_HideEntryByIndex, Index_0) == 0x000000, "Member 'W_ScreenFooter_C_HideEntryByIndex::Index_0' has a wrong offset!");

// Function W_ScreenFooter.W_ScreenFooter_C.IsHiddenEntry
// 0x0018 (0x0018 - 0x0000)
struct W_ScreenFooter_C_IsHiddenEntry final
{
public:
	class FString                                 EntryID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooter_C_IsHiddenEntry) == 0x000008, "Wrong alignment on W_ScreenFooter_C_IsHiddenEntry");
static_assert(sizeof(W_ScreenFooter_C_IsHiddenEntry) == 0x000018, "Wrong size on W_ScreenFooter_C_IsHiddenEntry");
static_assert(offsetof(W_ScreenFooter_C_IsHiddenEntry, EntryID) == 0x000000, "Member 'W_ScreenFooter_C_IsHiddenEntry::EntryID' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_IsHiddenEntry, ReturnValue) == 0x000010, "Member 'W_ScreenFooter_C_IsHiddenEntry::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_IsHiddenEntry, CallFunc_Set_Contains_ReturnValue) == 0x000011, "Member 'W_ScreenFooter_C_IsHiddenEntry::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");

// Function W_ScreenFooter.W_ScreenFooter_C.IsHiddenIndex
// 0x0008 (0x0008 - 0x0000)
struct W_ScreenFooter_C_IsHiddenIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooter_C_IsHiddenIndex) == 0x000004, "Wrong alignment on W_ScreenFooter_C_IsHiddenIndex");
static_assert(sizeof(W_ScreenFooter_C_IsHiddenIndex) == 0x000008, "Wrong size on W_ScreenFooter_C_IsHiddenIndex");
static_assert(offsetof(W_ScreenFooter_C_IsHiddenIndex, Index_0) == 0x000000, "Member 'W_ScreenFooter_C_IsHiddenIndex::Index_0' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_IsHiddenIndex, ReturnValue) == 0x000004, "Member 'W_ScreenFooter_C_IsHiddenIndex::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_IsHiddenIndex, CallFunc_Set_Contains_ReturnValue) == 0x000005, "Member 'W_ScreenFooter_C_IsHiddenIndex::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");

// Function W_ScreenFooter.W_ScreenFooter_C.PopulateEntries
// 0x0228 (0x0228 - 0x0000)
struct W_ScreenFooter_C_PopulateEntries final
{
public:
	class FString                                 NewEntryID;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UW_ScreenFooterEntry_C*                 NewEntryWidget;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CenterCount;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RightCount;                                        // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LeftCount;                                         // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScreenFooterEntry                     NewEntryData;                                      // 0x0028(0x0078)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_ScreenFooterEntry_C* FooterEntry)> K2Node_CreateDelegate_OutputDelegate; // 0x00A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_ScreenFooterEntry_C* FooterEntry)> K2Node_CreateDelegate_OutputDelegate_1; // 0x00B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_ScreenFooterEntry_C*                 CallFunc_Create_ReturnValue;                       // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHiddenEntry_ReturnValue;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x00D8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_2;                        // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue_1;    // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue_2;    // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x014C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_ScreenFooterEntry_C* FooterEntry)> K2Node_CreateDelegate_OutputDelegate_3; // 0x015C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_ScreenFooterEntry_C* FooterEntry)> K2Node_CreateDelegate_OutputDelegate_4; // 0x016C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHiddenIndex_ReturnValue;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScreenFooterEntry                     CallFunc_Map_Find_Value;                           // 0x0198(0x0078)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_213[0x1];                                      // 0x0213(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MakeStruct_Left_ImplicitCast;               // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Left_ImplicitCast_1;             // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Right_ImplicitCast;              // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Right_ImplicitCast_1;            // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooter_C_PopulateEntries) == 0x000008, "Wrong alignment on W_ScreenFooter_C_PopulateEntries");
static_assert(sizeof(W_ScreenFooter_C_PopulateEntries) == 0x000228, "Wrong size on W_ScreenFooter_C_PopulateEntries");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, NewEntryID) == 0x000000, "Member 'W_ScreenFooter_C_PopulateEntries::NewEntryID' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, NewEntryWidget) == 0x000010, "Member 'W_ScreenFooter_C_PopulateEntries::NewEntryWidget' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, CenterCount) == 0x000018, "Member 'W_ScreenFooter_C_PopulateEntries::CenterCount' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, RightCount) == 0x00001C, "Member 'W_ScreenFooter_C_PopulateEntries::RightCount' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, LeftCount) == 0x000020, "Member 'W_ScreenFooter_C_PopulateEntries::LeftCount' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, NewEntryData) == 0x000028, "Member 'W_ScreenFooter_C_PopulateEntries::NewEntryData' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'W_ScreenFooter_C_PopulateEntries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'W_ScreenFooter_C_PopulateEntries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, K2Node_CreateDelegate_OutputDelegate) == 0x0000A8, "Member 'W_ScreenFooter_C_PopulateEntries::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000B8, "Member 'W_ScreenFooter_C_PopulateEntries::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, CallFunc_Create_ReturnValue) == 0x0000C8, "Member 'W_ScreenFooter_C_PopulateEntries::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, CallFunc_IsHiddenEntry_ReturnValue) == 0x0000D0, "Member 'W_ScreenFooter_C_PopulateEntries::CallFunc_IsHiddenEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, CallFunc_Map_Keys_Keys) == 0x0000D8, "Member 'W_ScreenFooter_C_PopulateEntries::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'W_ScreenFooter_C_PopulateEntries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000EC, "Member 'W_ScreenFooter_C_PopulateEntries::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, CallFunc_Less_IntInt_ReturnValue) == 0x0000ED, "Member 'W_ScreenFooter_C_PopulateEntries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, CallFunc_Array_Add_ReturnValue) == 0x0000F0, "Member 'W_ScreenFooter_C_PopulateEntries::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, K2Node_MakeStruct_Margin) == 0x0000F4, "Member 'W_ScreenFooter_C_PopulateEntries::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000108, "Member 'W_ScreenFooter_C_PopulateEntries::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, K2Node_MakeStruct_Margin_1) == 0x000110, "Member 'W_ScreenFooter_C_PopulateEntries::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, K2Node_MakeStruct_Margin_2) == 0x000120, "Member 'W_ScreenFooter_C_PopulateEntries::K2Node_MakeStruct_Margin_2' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000130, "Member 'W_ScreenFooter_C_PopulateEntries::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, CallFunc_AddChildToHorizontalBox_ReturnValue_1) == 0x000138, "Member 'W_ScreenFooter_C_PopulateEntries::CallFunc_AddChildToHorizontalBox_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, CallFunc_AddChildToHorizontalBox_ReturnValue_2) == 0x000140, "Member 'W_ScreenFooter_C_PopulateEntries::CallFunc_AddChildToHorizontalBox_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, K2Node_SwitchEnum_CmpSuccess) == 0x000148, "Member 'W_ScreenFooter_C_PopulateEntries::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, K2Node_CreateDelegate_OutputDelegate_2) == 0x00014C, "Member 'W_ScreenFooter_C_PopulateEntries::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, K2Node_CreateDelegate_OutputDelegate_3) == 0x00015C, "Member 'W_ScreenFooter_C_PopulateEntries::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, K2Node_CreateDelegate_OutputDelegate_4) == 0x00016C, "Member 'W_ScreenFooter_C_PopulateEntries::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, Temp_int_Array_Index_Variable) == 0x00017C, "Member 'W_ScreenFooter_C_PopulateEntries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, CallFunc_Array_Get_Item) == 0x000180, "Member 'W_ScreenFooter_C_PopulateEntries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, CallFunc_IsHiddenIndex_ReturnValue) == 0x000190, "Member 'W_ScreenFooter_C_PopulateEntries::CallFunc_IsHiddenIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, CallFunc_Map_Find_Value) == 0x000198, "Member 'W_ScreenFooter_C_PopulateEntries::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, CallFunc_Map_Find_ReturnValue) == 0x000210, "Member 'W_ScreenFooter_C_PopulateEntries::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, CallFunc_BooleanOR_ReturnValue) == 0x000211, "Member 'W_ScreenFooter_C_PopulateEntries::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, CallFunc_Not_PreBool_ReturnValue) == 0x000212, "Member 'W_ScreenFooter_C_PopulateEntries::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, K2Node_MakeStruct_Left_ImplicitCast) == 0x000214, "Member 'W_ScreenFooter_C_PopulateEntries::K2Node_MakeStruct_Left_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, K2Node_MakeStruct_Left_ImplicitCast_1) == 0x000218, "Member 'W_ScreenFooter_C_PopulateEntries::K2Node_MakeStruct_Left_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, K2Node_MakeStruct_Right_ImplicitCast) == 0x00021C, "Member 'W_ScreenFooter_C_PopulateEntries::K2Node_MakeStruct_Right_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_PopulateEntries, K2Node_MakeStruct_Right_ImplicitCast_1) == 0x000220, "Member 'W_ScreenFooter_C_PopulateEntries::K2Node_MakeStruct_Right_ImplicitCast_1' has a wrong offset!");

// Function W_ScreenFooter.W_ScreenFooter_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_ScreenFooter_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooter_C_PreConstruct) == 0x000001, "Wrong alignment on W_ScreenFooter_C_PreConstruct");
static_assert(sizeof(W_ScreenFooter_C_PreConstruct) == 0x000001, "Wrong size on W_ScreenFooter_C_PreConstruct");
static_assert(offsetof(W_ScreenFooter_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_ScreenFooter_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_ScreenFooter.W_ScreenFooter_C.Reveal
// 0x0008 (0x0008 - 0x0000)
struct W_ScreenFooter_C_Reveal final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooter_C_Reveal) == 0x000008, "Wrong alignment on W_ScreenFooter_C_Reveal");
static_assert(sizeof(W_ScreenFooter_C_Reveal) == 0x000008, "Wrong size on W_ScreenFooter_C_Reveal");
static_assert(offsetof(W_ScreenFooter_C_Reveal, Delay) == 0x000000, "Member 'W_ScreenFooter_C_Reveal::Delay' has a wrong offset!");

// Function W_ScreenFooter.W_ScreenFooter_C.SetEntryTextByID
// 0x0038 (0x0038 - 0x0000)
struct W_ScreenFooter_C_SetEntryTextByID final
{
public:
	class FString                                 EntryID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   NewText;                                           // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UW_ScreenFooterEntry_C*                 CallFunc_Map_Find_Value;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooter_C_SetEntryTextByID) == 0x000008, "Wrong alignment on W_ScreenFooter_C_SetEntryTextByID");
static_assert(sizeof(W_ScreenFooter_C_SetEntryTextByID) == 0x000038, "Wrong size on W_ScreenFooter_C_SetEntryTextByID");
static_assert(offsetof(W_ScreenFooter_C_SetEntryTextByID, EntryID) == 0x000000, "Member 'W_ScreenFooter_C_SetEntryTextByID::EntryID' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_SetEntryTextByID, NewText) == 0x000010, "Member 'W_ScreenFooter_C_SetEntryTextByID::NewText' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_SetEntryTextByID, CallFunc_Map_Find_Value) == 0x000028, "Member 'W_ScreenFooter_C_SetEntryTextByID::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_SetEntryTextByID, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'W_ScreenFooter_C_SetEntryTextByID::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_ScreenFooter.W_ScreenFooter_C.SetFocusByID
// 0x0070 (0x0070 - 0x0000)
struct W_ScreenFooter_C_SetFocusByID final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UWidget*                                FocusedEntryButton;                                // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ScreenFooterEntry_C*                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetFocusTarget_Focus;                     // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetButtonID_ButtonID;                     // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooter_C_SetFocusByID) == 0x000008, "Wrong alignment on W_ScreenFooter_C_SetFocusByID");
static_assert(sizeof(W_ScreenFooter_C_SetFocusByID) == 0x000070, "Wrong size on W_ScreenFooter_C_SetFocusByID");
static_assert(offsetof(W_ScreenFooter_C_SetFocusByID, ID) == 0x000000, "Member 'W_ScreenFooter_C_SetFocusByID::ID' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_SetFocusByID, FocusedEntryButton) == 0x000010, "Member 'W_ScreenFooter_C_SetFocusByID::FocusedEntryButton' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_SetFocusByID, Temp_bool_True_if_break_was_hit_Variable) == 0x000018, "Member 'W_ScreenFooter_C_SetFocusByID::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_SetFocusByID, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'W_ScreenFooter_C_SetFocusByID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_SetFocusByID, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'W_ScreenFooter_C_SetFocusByID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_SetFocusByID, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'W_ScreenFooter_C_SetFocusByID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_SetFocusByID, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'W_ScreenFooter_C_SetFocusByID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_SetFocusByID, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'W_ScreenFooter_C_SetFocusByID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_SetFocusByID, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'W_ScreenFooter_C_SetFocusByID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_SetFocusByID, CallFunc_Array_Get_Item) == 0x000038, "Member 'W_ScreenFooter_C_SetFocusByID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_SetFocusByID, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'W_ScreenFooter_C_SetFocusByID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_SetFocusByID, CallFunc_GetFocusTarget_Focus) == 0x000048, "Member 'W_ScreenFooter_C_SetFocusByID::CallFunc_GetFocusTarget_Focus' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_SetFocusByID, CallFunc_BooleanAND_ReturnValue) == 0x000050, "Member 'W_ScreenFooter_C_SetFocusByID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_SetFocusByID, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'W_ScreenFooter_C_SetFocusByID::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_SetFocusByID, CallFunc_GetButtonID_ButtonID) == 0x000058, "Member 'W_ScreenFooter_C_SetFocusByID::CallFunc_GetButtonID_ButtonID' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_SetFocusByID, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000068, "Member 'W_ScreenFooter_C_SetFocusByID::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function W_ScreenFooter.W_ScreenFooter_C.SetFooterEntries
// 0x0050 (0x0050 - 0x0000)
struct W_ScreenFooter_C_SetFooterEntries final
{
public:
	TMap<class FString, struct FScreenFooterEntry> Footer_Entries;                                   // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_ScreenFooter_C_SetFooterEntries) == 0x000008, "Wrong alignment on W_ScreenFooter_C_SetFooterEntries");
static_assert(sizeof(W_ScreenFooter_C_SetFooterEntries) == 0x000050, "Wrong size on W_ScreenFooter_C_SetFooterEntries");
static_assert(offsetof(W_ScreenFooter_C_SetFooterEntries, Footer_Entries) == 0x000000, "Member 'W_ScreenFooter_C_SetFooterEntries::Footer_Entries' has a wrong offset!");

// Function W_ScreenFooter.W_ScreenFooter_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_ScreenFooter_C_SetInputMode final
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooter_C_SetInputMode) == 0x000001, "Wrong alignment on W_ScreenFooter_C_SetInputMode");
static_assert(sizeof(W_ScreenFooter_C_SetInputMode) == 0x000001, "Wrong size on W_ScreenFooter_C_SetInputMode");
static_assert(offsetof(W_ScreenFooter_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_ScreenFooter_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_ScreenFooter.W_ScreenFooter_C.UnhideEntryByID
// 0x0018 (0x0018 - 0x0000)
struct W_ScreenFooter_C_UnhideEntryByID final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Remove_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooter_C_UnhideEntryByID) == 0x000008, "Wrong alignment on W_ScreenFooter_C_UnhideEntryByID");
static_assert(sizeof(W_ScreenFooter_C_UnhideEntryByID) == 0x000018, "Wrong size on W_ScreenFooter_C_UnhideEntryByID");
static_assert(offsetof(W_ScreenFooter_C_UnhideEntryByID, ID) == 0x000000, "Member 'W_ScreenFooter_C_UnhideEntryByID::ID' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_UnhideEntryByID, CallFunc_Set_Remove_ReturnValue) == 0x000010, "Member 'W_ScreenFooter_C_UnhideEntryByID::CallFunc_Set_Remove_ReturnValue' has a wrong offset!");

// Function W_ScreenFooter.W_ScreenFooter_C.UnhideEntryByIndex
// 0x0008 (0x0008 - 0x0000)
struct W_ScreenFooter_C_UnhideEntryByIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Remove_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooter_C_UnhideEntryByIndex) == 0x000004, "Wrong alignment on W_ScreenFooter_C_UnhideEntryByIndex");
static_assert(sizeof(W_ScreenFooter_C_UnhideEntryByIndex) == 0x000008, "Wrong size on W_ScreenFooter_C_UnhideEntryByIndex");
static_assert(offsetof(W_ScreenFooter_C_UnhideEntryByIndex, Index_0) == 0x000000, "Member 'W_ScreenFooter_C_UnhideEntryByIndex::Index_0' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_UnhideEntryByIndex, CallFunc_Set_Remove_ReturnValue) == 0x000004, "Member 'W_ScreenFooter_C_UnhideEntryByIndex::CallFunc_Set_Remove_ReturnValue' has a wrong offset!");

// Function W_ScreenFooter.W_ScreenFooter_C.GetFocusTarget
// 0x0010 (0x0010 - 0x0000)
struct W_ScreenFooter_C_GetFocusTarget final
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooter_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_ScreenFooter_C_GetFocusTarget");
static_assert(sizeof(W_ScreenFooter_C_GetFocusTarget) == 0x000010, "Wrong size on W_ScreenFooter_C_GetFocusTarget");
static_assert(offsetof(W_ScreenFooter_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_ScreenFooter_C_GetFocusTarget::Focus' has a wrong offset!");
static_assert(offsetof(W_ScreenFooter_C_GetFocusTarget, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_ScreenFooter_C_GetFocusTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

