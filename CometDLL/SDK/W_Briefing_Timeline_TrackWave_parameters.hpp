#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Briefing_Timeline_TrackWave

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_Briefing_Timeline_TrackWave.W_Briefing_Timeline_TrackWave_C.EventListener
// 0x00B0 (0x00B0 - 0x0000)
struct W_Briefing_Timeline_TrackWave_C_EventListener final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimelineEvent                         CallFunc_Map_Find_Value;                           // 0x0010(0x0050)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                CallFunc_Map_Keys_Keys;                            // 0x0070(0x0010)(ReferenceParm)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Briefing_Timeline_TrackWave_C_EventListener) == 0x000008, "Wrong alignment on W_Briefing_Timeline_TrackWave_C_EventListener");
static_assert(sizeof(W_Briefing_Timeline_TrackWave_C_EventListener) == 0x0000B0, "Wrong size on W_Briefing_Timeline_TrackWave_C_EventListener");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_EventListener, Temp_int_Array_Index_Variable) == 0x000000, "Member 'W_Briefing_Timeline_TrackWave_C_EventListener::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_EventListener, CallFunc_Map_Remove_ReturnValue) == 0x000004, "Member 'W_Briefing_Timeline_TrackWave_C_EventListener::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_EventListener, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'W_Briefing_Timeline_TrackWave_C_EventListener::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_EventListener, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_Briefing_Timeline_TrackWave_C_EventListener::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_EventListener, CallFunc_Map_Find_Value) == 0x000010, "Member 'W_Briefing_Timeline_TrackWave_C_EventListener::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_EventListener, CallFunc_Map_Find_ReturnValue) == 0x000060, "Member 'W_Briefing_Timeline_TrackWave_C_EventListener::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_EventListener, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000068, "Member 'W_Briefing_Timeline_TrackWave_C_EventListener::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_EventListener, CallFunc_Map_Keys_Keys) == 0x000070, "Member 'W_Briefing_Timeline_TrackWave_C_EventListener::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_EventListener, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000080, "Member 'W_Briefing_Timeline_TrackWave_C_EventListener::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_EventListener, CallFunc_Array_Get_Item) == 0x000088, "Member 'W_Briefing_Timeline_TrackWave_C_EventListener::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_EventListener, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'W_Briefing_Timeline_TrackWave_C_EventListener::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_EventListener, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'W_Briefing_Timeline_TrackWave_C_EventListener::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_EventListener, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'W_Briefing_Timeline_TrackWave_C_EventListener::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_EventListener, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0000A0, "Member 'W_Briefing_Timeline_TrackWave_C_EventListener::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_EventListener, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0000A8, "Member 'W_Briefing_Timeline_TrackWave_C_EventListener::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function W_Briefing_Timeline_TrackWave.W_Briefing_Timeline_TrackWave_C.ExecuteUbergraph_W_Briefing_Timeline_TrackWave
// 0x0110 (0x0110 - 0x0000)
struct W_Briefing_Timeline_TrackWave_C_ExecuteUbergraph_W_Briefing_Timeline_TrackWave final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundWave*                             CallFunc_GetTimelineEventTestData_Audio_Asset;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTimelineEvent>                 CallFunc_GetTimelineEventTestData_Events;          // 0x0010(0x0010)(ReferenceParm)
	TMap<double, struct FTimelineEvent>           CallFunc_GetTimelineEventTestData_EventEntries;    // 0x0020(0x0050)()
	class USoundWave*                             K2Node_CustomEvent_SoundWave;                      // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<double, struct FTimelineEvent>           K2Node_CustomEvent_EventEntries;                   // 0x0078(0x0050)(ConstParm)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00C8(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Duration_ImplicitCast;          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Briefing_Timeline_TrackWave_C_ExecuteUbergraph_W_Briefing_Timeline_TrackWave) == 0x000008, "Wrong alignment on W_Briefing_Timeline_TrackWave_C_ExecuteUbergraph_W_Briefing_Timeline_TrackWave");
static_assert(sizeof(W_Briefing_Timeline_TrackWave_C_ExecuteUbergraph_W_Briefing_Timeline_TrackWave) == 0x000110, "Wrong size on W_Briefing_Timeline_TrackWave_C_ExecuteUbergraph_W_Briefing_Timeline_TrackWave");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_ExecuteUbergraph_W_Briefing_Timeline_TrackWave, EntryPoint) == 0x000000, "Member 'W_Briefing_Timeline_TrackWave_C_ExecuteUbergraph_W_Briefing_Timeline_TrackWave::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_ExecuteUbergraph_W_Briefing_Timeline_TrackWave, CallFunc_GetTimelineEventTestData_Audio_Asset) == 0x000008, "Member 'W_Briefing_Timeline_TrackWave_C_ExecuteUbergraph_W_Briefing_Timeline_TrackWave::CallFunc_GetTimelineEventTestData_Audio_Asset' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_ExecuteUbergraph_W_Briefing_Timeline_TrackWave, CallFunc_GetTimelineEventTestData_Events) == 0x000010, "Member 'W_Briefing_Timeline_TrackWave_C_ExecuteUbergraph_W_Briefing_Timeline_TrackWave::CallFunc_GetTimelineEventTestData_Events' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_ExecuteUbergraph_W_Briefing_Timeline_TrackWave, CallFunc_GetTimelineEventTestData_EventEntries) == 0x000020, "Member 'W_Briefing_Timeline_TrackWave_C_ExecuteUbergraph_W_Briefing_Timeline_TrackWave::CallFunc_GetTimelineEventTestData_EventEntries' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_ExecuteUbergraph_W_Briefing_Timeline_TrackWave, K2Node_CustomEvent_SoundWave) == 0x000070, "Member 'W_Briefing_Timeline_TrackWave_C_ExecuteUbergraph_W_Briefing_Timeline_TrackWave::K2Node_CustomEvent_SoundWave' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_ExecuteUbergraph_W_Briefing_Timeline_TrackWave, K2Node_CustomEvent_EventEntries) == 0x000078, "Member 'W_Briefing_Timeline_TrackWave_C_ExecuteUbergraph_W_Briefing_Timeline_TrackWave::K2Node_CustomEvent_EventEntries' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_ExecuteUbergraph_W_Briefing_Timeline_TrackWave, K2Node_Event_MyGeometry) == 0x0000C8, "Member 'W_Briefing_Timeline_TrackWave_C_ExecuteUbergraph_W_Briefing_Timeline_TrackWave::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_ExecuteUbergraph_W_Briefing_Timeline_TrackWave, K2Node_Event_InDeltaTime) == 0x000100, "Member 'W_Briefing_Timeline_TrackWave_C_ExecuteUbergraph_W_Briefing_Timeline_TrackWave::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_ExecuteUbergraph_W_Briefing_Timeline_TrackWave, K2Node_Event_IsDesignTime) == 0x000104, "Member 'W_Briefing_Timeline_TrackWave_C_ExecuteUbergraph_W_Briefing_Timeline_TrackWave::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_ExecuteUbergraph_W_Briefing_Timeline_TrackWave, K2Node_VariableSet_Duration_ImplicitCast) == 0x000108, "Member 'W_Briefing_Timeline_TrackWave_C_ExecuteUbergraph_W_Briefing_Timeline_TrackWave::K2Node_VariableSet_Duration_ImplicitCast' has a wrong offset!");

// Function W_Briefing_Timeline_TrackWave.W_Briefing_Timeline_TrackWave_C.Initialize
// 0x0058 (0x0058 - 0x0000)
struct W_Briefing_Timeline_TrackWave_C_Initialize final
{
public:
	class USoundWave*                             SoundWave;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<double, struct FTimelineEvent>           EventEntries_0;                                    // 0x0008(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_Briefing_Timeline_TrackWave_C_Initialize) == 0x000008, "Wrong alignment on W_Briefing_Timeline_TrackWave_C_Initialize");
static_assert(sizeof(W_Briefing_Timeline_TrackWave_C_Initialize) == 0x000058, "Wrong size on W_Briefing_Timeline_TrackWave_C_Initialize");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_Initialize, SoundWave) == 0x000000, "Member 'W_Briefing_Timeline_TrackWave_C_Initialize::SoundWave' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_Initialize, EventEntries_0) == 0x000008, "Member 'W_Briefing_Timeline_TrackWave_C_Initialize::EventEntries_0' has a wrong offset!");

// Function W_Briefing_Timeline_TrackWave.W_Briefing_Timeline_TrackWave_C.paused
// 0x0010 (0x0010 - 0x0000)
struct W_Briefing_Timeline_TrackWave_C_paused final
{
public:
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Briefing_Timeline_TrackWave_C_paused) == 0x000008, "Wrong alignment on W_Briefing_Timeline_TrackWave_C_paused");
static_assert(sizeof(W_Briefing_Timeline_TrackWave_C_paused) == 0x000010, "Wrong size on W_Briefing_Timeline_TrackWave_C_paused");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_paused, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000000, "Member 'W_Briefing_Timeline_TrackWave_C_paused::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_paused, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'W_Briefing_Timeline_TrackWave_C_paused::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function W_Briefing_Timeline_TrackWave.W_Briefing_Timeline_TrackWave_C.Playing
// 0x0008 (0x0008 - 0x0000)
struct W_Briefing_Timeline_TrackWave_C_Playing final
{
public:
	double                                        CurrentPlayTime_0;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Briefing_Timeline_TrackWave_C_Playing) == 0x000008, "Wrong alignment on W_Briefing_Timeline_TrackWave_C_Playing");
static_assert(sizeof(W_Briefing_Timeline_TrackWave_C_Playing) == 0x000008, "Wrong size on W_Briefing_Timeline_TrackWave_C_Playing");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_Playing, CurrentPlayTime_0) == 0x000000, "Member 'W_Briefing_Timeline_TrackWave_C_Playing::CurrentPlayTime_0' has a wrong offset!");

// Function W_Briefing_Timeline_TrackWave.W_Briefing_Timeline_TrackWave_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_Briefing_Timeline_TrackWave_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Briefing_Timeline_TrackWave_C_PreConstruct) == 0x000001, "Wrong alignment on W_Briefing_Timeline_TrackWave_C_PreConstruct");
static_assert(sizeof(W_Briefing_Timeline_TrackWave_C_PreConstruct) == 0x000001, "Wrong size on W_Briefing_Timeline_TrackWave_C_PreConstruct");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_Briefing_Timeline_TrackWave_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_Briefing_Timeline_TrackWave.W_Briefing_Timeline_TrackWave_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_Briefing_Timeline_TrackWave_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Briefing_Timeline_TrackWave_C_Tick) == 0x000004, "Wrong alignment on W_Briefing_Timeline_TrackWave_C_Tick");
static_assert(sizeof(W_Briefing_Timeline_TrackWave_C_Tick) == 0x00003C, "Wrong size on W_Briefing_Timeline_TrackWave_C_Tick");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_Tick, MyGeometry) == 0x000000, "Member 'W_Briefing_Timeline_TrackWave_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Briefing_Timeline_TrackWave_C_Tick, InDeltaTime) == 0x000038, "Member 'W_Briefing_Timeline_TrackWave_C_Tick::InDeltaTime' has a wrong offset!");

}

