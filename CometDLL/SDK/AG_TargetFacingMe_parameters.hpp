#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AG_TargetFacingMe

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AG_TargetFacingMe.AG_TargetFacingMe_C.CanOpen
// 0x00D8 (0x00D8 - 0x0000)
struct AG_TargetFacingMe_C_CanOpen final
{
public:
	struct FAIActionDecisionContext               Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   Target;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesCharacterMatchTargetType_ReturnValue; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   CallFunc_GetLastTrackedTarget_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   CallFunc_GetTrackedTarget_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACyberneticCharacter*                   CallFunc_GetCharacter_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue;              // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesCharacterMatchTargetType_ReturnValue_1; // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AG_TargetFacingMe_C_CanOpen) == 0x000008, "Wrong alignment on AG_TargetFacingMe_C_CanOpen");
static_assert(sizeof(AG_TargetFacingMe_C_CanOpen) == 0x0000D8, "Wrong size on AG_TargetFacingMe_C_CanOpen");
static_assert(offsetof(AG_TargetFacingMe_C_CanOpen, Context) == 0x000000, "Member 'AG_TargetFacingMe_C_CanOpen::Context' has a wrong offset!");
static_assert(offsetof(AG_TargetFacingMe_C_CanOpen, ReturnValue) == 0x000010, "Member 'AG_TargetFacingMe_C_CanOpen::ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_TargetFacingMe_C_CanOpen, Target) == 0x000018, "Member 'AG_TargetFacingMe_C_CanOpen::Target' has a wrong offset!");
static_assert(offsetof(AG_TargetFacingMe_C_CanOpen, CallFunc_DoesCharacterMatchTargetType_ReturnValue) == 0x000020, "Member 'AG_TargetFacingMe_C_CanOpen::CallFunc_DoesCharacterMatchTargetType_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_TargetFacingMe_C_CanOpen, CallFunc_GetLastTrackedTarget_ReturnValue) == 0x000028, "Member 'AG_TargetFacingMe_C_CanOpen::CallFunc_GetLastTrackedTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_TargetFacingMe_C_CanOpen, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'AG_TargetFacingMe_C_CanOpen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_TargetFacingMe_C_CanOpen, CallFunc_GetTrackedTarget_ReturnValue) == 0x000038, "Member 'AG_TargetFacingMe_C_CanOpen::CallFunc_GetTrackedTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_TargetFacingMe_C_CanOpen, CallFunc_GetCharacter_ReturnValue) == 0x000040, "Member 'AG_TargetFacingMe_C_CanOpen::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_TargetFacingMe_C_CanOpen, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'AG_TargetFacingMe_C_CanOpen::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AG_TargetFacingMe_C_CanOpen, CallFunc_IsValid_ReturnValue_2) == 0x000049, "Member 'AG_TargetFacingMe_C_CanOpen::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AG_TargetFacingMe_C_CanOpen, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'AG_TargetFacingMe_C_CanOpen::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_TargetFacingMe_C_CanOpen, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000068, "Member 'AG_TargetFacingMe_C_CanOpen::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AG_TargetFacingMe_C_CanOpen, CallFunc_GetActorForwardVector_ReturnValue) == 0x000080, "Member 'AG_TargetFacingMe_C_CanOpen::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_TargetFacingMe_C_CanOpen, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000098, "Member 'AG_TargetFacingMe_C_CanOpen::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_TargetFacingMe_C_CanOpen, CallFunc_Vector_Normal2D_ReturnValue) == 0x0000B0, "Member 'AG_TargetFacingMe_C_CanOpen::CallFunc_Vector_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_TargetFacingMe_C_CanOpen, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000C8, "Member 'AG_TargetFacingMe_C_CanOpen::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_TargetFacingMe_C_CanOpen, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'AG_TargetFacingMe_C_CanOpen::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_TargetFacingMe_C_CanOpen, CallFunc_DoesCharacterMatchTargetType_ReturnValue_1) == 0x0000D1, "Member 'AG_TargetFacingMe_C_CanOpen::CallFunc_DoesCharacterMatchTargetType_ReturnValue_1' has a wrong offset!");

}

