#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIAction_ActiveShooter_TargetNextCivilian

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function AIAction_ActiveShooter_TargetNextCivilian.AIAction_ActiveShooter_TargetNextCivilian_C.ExecuteUbergraph_AIAction_ActiveShooter_TargetNextCivilian
// 0x0038 (0x0038 - 0x0000)
struct AIAction_ActiveShooter_TargetNextCivilian_C_ExecuteUbergraph_AIAction_ActiveShooter_TargetNextCivilian final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTargetNextCivilianActivity*            CallFunc_GetTargetNextCivilianActivity_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PathId;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERonNavigationQueryResult                     K2Node_Event_Result;                               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTime;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACyberneticCharacter*                   CallFunc_GetCharacter_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTargetNextCivilianActivity*            CallFunc_GetTargetNextCivilianActivity_ReturnValue_1; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GiveActivityTo_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIAction_ActiveShooter_TargetNextCivilian_C_ExecuteUbergraph_AIAction_ActiveShooter_TargetNextCivilian) == 0x000008, "Wrong alignment on AIAction_ActiveShooter_TargetNextCivilian_C_ExecuteUbergraph_AIAction_ActiveShooter_TargetNextCivilian");
static_assert(sizeof(AIAction_ActiveShooter_TargetNextCivilian_C_ExecuteUbergraph_AIAction_ActiveShooter_TargetNextCivilian) == 0x000038, "Wrong size on AIAction_ActiveShooter_TargetNextCivilian_C_ExecuteUbergraph_AIAction_ActiveShooter_TargetNextCivilian");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_ExecuteUbergraph_AIAction_ActiveShooter_TargetNextCivilian, EntryPoint) == 0x000000, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_ExecuteUbergraph_AIAction_ActiveShooter_TargetNextCivilian::EntryPoint' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_ExecuteUbergraph_AIAction_ActiveShooter_TargetNextCivilian, CallFunc_GetTargetNextCivilianActivity_ReturnValue) == 0x000008, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_ExecuteUbergraph_AIAction_ActiveShooter_TargetNextCivilian::CallFunc_GetTargetNextCivilianActivity_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_ExecuteUbergraph_AIAction_ActiveShooter_TargetNextCivilian, K2Node_Event_PathId) == 0x000010, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_ExecuteUbergraph_AIAction_ActiveShooter_TargetNextCivilian::K2Node_Event_PathId' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_ExecuteUbergraph_AIAction_ActiveShooter_TargetNextCivilian, K2Node_Event_Result) == 0x000014, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_ExecuteUbergraph_AIAction_ActiveShooter_TargetNextCivilian::K2Node_Event_Result' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_ExecuteUbergraph_AIAction_ActiveShooter_TargetNextCivilian, K2Node_Event_DeltaTime) == 0x000018, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_ExecuteUbergraph_AIAction_ActiveShooter_TargetNextCivilian::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_ExecuteUbergraph_AIAction_ActiveShooter_TargetNextCivilian, CallFunc_GetCharacter_ReturnValue) == 0x000020, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_ExecuteUbergraph_AIAction_ActiveShooter_TargetNextCivilian::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_ExecuteUbergraph_AIAction_ActiveShooter_TargetNextCivilian, CallFunc_GetTargetNextCivilianActivity_ReturnValue_1) == 0x000028, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_ExecuteUbergraph_AIAction_ActiveShooter_TargetNextCivilian::CallFunc_GetTargetNextCivilianActivity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_ExecuteUbergraph_AIAction_ActiveShooter_TargetNextCivilian, CallFunc_GiveActivityTo_ReturnValue) == 0x000030, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_ExecuteUbergraph_AIAction_ActiveShooter_TargetNextCivilian::CallFunc_GiveActivityTo_ReturnValue' has a wrong offset!");

// Function AIAction_ActiveShooter_TargetNextCivilian.AIAction_ActiveShooter_TargetNextCivilian_C.OnPathFound_Blueprint
// 0x0008 (0x0008 - 0x0000)
struct AIAction_ActiveShooter_TargetNextCivilian_C_OnPathFound_Blueprint final
{
public:
	int32                                         PathId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERonNavigationQueryResult                     Result;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIAction_ActiveShooter_TargetNextCivilian_C_OnPathFound_Blueprint) == 0x000004, "Wrong alignment on AIAction_ActiveShooter_TargetNextCivilian_C_OnPathFound_Blueprint");
static_assert(sizeof(AIAction_ActiveShooter_TargetNextCivilian_C_OnPathFound_Blueprint) == 0x000008, "Wrong size on AIAction_ActiveShooter_TargetNextCivilian_C_OnPathFound_Blueprint");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_OnPathFound_Blueprint, PathId) == 0x000000, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_OnPathFound_Blueprint::PathId' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_OnPathFound_Blueprint, Result) == 0x000004, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_OnPathFound_Blueprint::Result' has a wrong offset!");

// Function AIAction_ActiveShooter_TargetNextCivilian.AIAction_ActiveShooter_TargetNextCivilian_C.Tick_Blueprint
// 0x0004 (0x0004 - 0x0000)
struct AIAction_ActiveShooter_TargetNextCivilian_C_Tick_Blueprint final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIAction_ActiveShooter_TargetNextCivilian_C_Tick_Blueprint) == 0x000004, "Wrong alignment on AIAction_ActiveShooter_TargetNextCivilian_C_Tick_Blueprint");
static_assert(sizeof(AIAction_ActiveShooter_TargetNextCivilian_C_Tick_Blueprint) == 0x000004, "Wrong size on AIAction_ActiveShooter_TargetNextCivilian_C_Tick_Blueprint");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_Tick_Blueprint, DeltaTime) == 0x000000, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_Tick_Blueprint::DeltaTime' has a wrong offset!");

// Function AIAction_ActiveShooter_TargetNextCivilian.AIAction_ActiveShooter_TargetNextCivilian_C.TryScriptedFireAtCivilian
// 0x0018 (0x0018 - 0x0000)
struct AIAction_ActiveShooter_TargetNextCivilian_C_TryScriptedFireAtCivilian final
{
public:
	class ACyberneticCharacter*                   CallFunc_GetCharacter_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBaseCombatActivity*                    CallFunc_GetCombatActivity_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIAction_ActiveShooter_TargetNextCivilian_C_TryScriptedFireAtCivilian) == 0x000008, "Wrong alignment on AIAction_ActiveShooter_TargetNextCivilian_C_TryScriptedFireAtCivilian");
static_assert(sizeof(AIAction_ActiveShooter_TargetNextCivilian_C_TryScriptedFireAtCivilian) == 0x000018, "Wrong size on AIAction_ActiveShooter_TargetNextCivilian_C_TryScriptedFireAtCivilian");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_TryScriptedFireAtCivilian, CallFunc_GetCharacter_ReturnValue) == 0x000000, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_TryScriptedFireAtCivilian::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_TryScriptedFireAtCivilian, CallFunc_GetCombatActivity_ReturnValue) == 0x000008, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_TryScriptedFireAtCivilian::CallFunc_GetCombatActivity_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_TryScriptedFireAtCivilian, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_TryScriptedFireAtCivilian::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function AIAction_ActiveShooter_TargetNextCivilian.AIAction_ActiveShooter_TargetNextCivilian_C.CanTargetCivilian
// 0x0010 (0x0010 - 0x0000)
struct AIAction_ActiveShooter_TargetNextCivilian_C_CanTargetCivilian final
{
public:
	class ACyberneticCharacter*                   InCivilian;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Return_Value;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsIncapacitated_ReturnValue;              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDeadOrUnconscious_ReturnValue;          // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIAction_ActiveShooter_TargetNextCivilian_C_CanTargetCivilian) == 0x000008, "Wrong alignment on AIAction_ActiveShooter_TargetNextCivilian_C_CanTargetCivilian");
static_assert(sizeof(AIAction_ActiveShooter_TargetNextCivilian_C_CanTargetCivilian) == 0x000010, "Wrong size on AIAction_ActiveShooter_TargetNextCivilian_C_CanTargetCivilian");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_CanTargetCivilian, InCivilian) == 0x000000, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_CanTargetCivilian::InCivilian' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_CanTargetCivilian, Return_Value) == 0x000008, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_CanTargetCivilian::Return_Value' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_CanTargetCivilian, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_CanTargetCivilian::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_CanTargetCivilian, CallFunc_IsIncapacitated_ReturnValue) == 0x00000A, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_CanTargetCivilian::CallFunc_IsIncapacitated_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_CanTargetCivilian, CallFunc_IsDeadOrUnconscious_ReturnValue) == 0x00000B, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_CanTargetCivilian::CallFunc_IsDeadOrUnconscious_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_CanTargetCivilian, CallFunc_BooleanOR_ReturnValue) == 0x00000C, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_CanTargetCivilian::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_CanTargetCivilian, CallFunc_Not_PreBool_ReturnValue) == 0x00000D, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_CanTargetCivilian::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function AIAction_ActiveShooter_TargetNextCivilian.AIAction_ActiveShooter_TargetNextCivilian_C.GatherDebugInfo
// 0x0038 (0x0038 - 0x0000)
struct AIAction_ActiveShooter_TargetNextCivilian_C_GatherDebugInfo final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class UTargetNextCivilianActivity*            CallFunc_GetTargetNextCivilianActivity_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AIAction_ActiveShooter_TargetNextCivilian_C_GatherDebugInfo) == 0x000008, "Wrong alignment on AIAction_ActiveShooter_TargetNextCivilian_C_GatherDebugInfo");
static_assert(sizeof(AIAction_ActiveShooter_TargetNextCivilian_C_GatherDebugInfo) == 0x000038, "Wrong size on AIAction_ActiveShooter_TargetNextCivilian_C_GatherDebugInfo");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GatherDebugInfo, ReturnValue) == 0x000000, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GatherDebugInfo::ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GatherDebugInfo, CallFunc_GetTargetNextCivilianActivity_ReturnValue) == 0x000010, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GatherDebugInfo::CallFunc_GetTargetNextCivilianActivity_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GatherDebugInfo, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000018, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GatherDebugInfo::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GatherDebugInfo, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GatherDebugInfo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function AIAction_ActiveShooter_TargetNextCivilian.AIAction_ActiveShooter_TargetNextCivilian_C.GetNextClosestAliveCivilian
// 0x00A0 (0x00A0 - 0x0000)
struct AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian final
{
public:
	class ACyberneticCharacter*                   civilian;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Return_Value;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACyberneticCharacter*                   ClosestCivilian;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotGameState*                   CallFunc_GetReadyOrNotGameState_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACyberneticCharacter*                   CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsIncapacitated_ReturnValue;              // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDeadOrUnconscious_ReturnValue;          // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCivilian_ReturnValue;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACyberneticCharacter*                   CallFunc_GetCharacter_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian) == 0x000008, "Wrong alignment on AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian");
static_assert(sizeof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian) == 0x0000A0, "Wrong size on AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, civilian) == 0x000000, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::civilian' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, Return_Value) == 0x000008, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::Return_Value' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, ClosestCivilian) == 0x000010, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::ClosestCivilian' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, Distance) == 0x000018, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::Distance' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, Temp_int_Array_Index_Variable) == 0x000020, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, CallFunc_GetReadyOrNotGameState_ReturnValue) == 0x000030, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::CallFunc_GetReadyOrNotGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, CallFunc_Array_Get_Item) == 0x000038, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, CallFunc_Array_Contains_ReturnValue) == 0x000040, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, CallFunc_Not_PreBool_ReturnValue) == 0x000041, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, CallFunc_IsIncapacitated_ReturnValue) == 0x000042, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::CallFunc_IsIncapacitated_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, CallFunc_IsDeadOrUnconscious_ReturnValue) == 0x000043, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::CallFunc_IsDeadOrUnconscious_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, CallFunc_BooleanOR_ReturnValue) == 0x000060, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, CallFunc_IsCivilian_ReturnValue) == 0x000061, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::CallFunc_IsCivilian_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, CallFunc_Not_PreBool_ReturnValue_1) == 0x000062, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, CallFunc_GetCharacter_ReturnValue) == 0x000070, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000078, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, CallFunc_Vector_Distance_ReturnValue) == 0x000090, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000098, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, CallFunc_BooleanAND_ReturnValue) == 0x000099, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian, CallFunc_BooleanAND_ReturnValue_1) == 0x00009A, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_GetNextClosestAliveCivilian::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function AIAction_ActiveShooter_TargetNextCivilian.AIAction_ActiveShooter_TargetNextCivilian_C.ShouldPerformAction
// 0x0018 (0x0018 - 0x0000)
struct AIAction_ActiveShooter_TargetNextCivilian_C_ShouldPerformAction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTargetNextCivilianActivity*            CallFunc_GetTargetNextCivilianActivity_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIAction_ActiveShooter_TargetNextCivilian_C_ShouldPerformAction) == 0x000008, "Wrong alignment on AIAction_ActiveShooter_TargetNextCivilian_C_ShouldPerformAction");
static_assert(sizeof(AIAction_ActiveShooter_TargetNextCivilian_C_ShouldPerformAction) == 0x000018, "Wrong size on AIAction_ActiveShooter_TargetNextCivilian_C_ShouldPerformAction");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_ShouldPerformAction, ReturnValue) == 0x000000, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_ShouldPerformAction::ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_ShouldPerformAction, CallFunc_GetTargetNextCivilianActivity_ReturnValue) == 0x000008, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_ShouldPerformAction::CallFunc_GetTargetNextCivilianActivity_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIAction_ActiveShooter_TargetNextCivilian_C_ShouldPerformAction, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'AIAction_ActiveShooter_TargetNextCivilian_C_ShouldPerformAction::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

}

