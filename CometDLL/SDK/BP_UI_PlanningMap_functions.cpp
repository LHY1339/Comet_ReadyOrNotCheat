#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UI_PlanningMap

#include "Basic.hpp"

#include "BP_UI_PlanningMap_classes.hpp"
#include "BP_UI_PlanningMap_parameters.hpp"


namespace SDK
{

// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.AbsolutePan
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UI_PlanningMap_C::AbsolutePan(const struct FVector2D& Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UI_PlanningMap_C", "AbsolutePan");

	Params::BP_UI_PlanningMap_C_AbsolutePan Parms{};

	Parms.Delta = std::move(Delta);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.ActivateMapCamera
// (BlueprintCallable, BlueprintEvent)

void ABP_UI_PlanningMap_C::ActivateMapCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UI_PlanningMap_C", "ActivateMapCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.AdditivePan
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_UI_PlanningMap_C::AdditivePan()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UI_PlanningMap_C", "AdditivePan");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.AnimateHide
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Silent                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UI_PlanningMap_C::AnimateHide(bool Silent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UI_PlanningMap_C", "AnimateHide");

	Params::BP_UI_PlanningMap_C_AnimateHide Parms{};

	Parms.Silent = Silent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.AnimateShow
// (BlueprintCallable, BlueprintEvent)

void ABP_UI_PlanningMap_C::AnimateShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UI_PlanningMap_C", "AnimateShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.ChangeFloors
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Floor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UI_PlanningMap_C::ChangeFloors(int32 Floor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UI_PlanningMap_C", "ChangeFloors");

	Params::BP_UI_PlanningMap_C_ChangeFloors Parms{};

	Parms.Floor = Floor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.DeactivateCamera
// (BlueprintCallable, BlueprintEvent)

void ABP_UI_PlanningMap_C::DeactivateCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UI_PlanningMap_C", "DeactivateCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.ExecuteUbergraph_BP_UI_PlanningMap
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UI_PlanningMap_C::ExecuteUbergraph_BP_UI_PlanningMap(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UI_PlanningMap_C", "ExecuteUbergraph_BP_UI_PlanningMap");

	Params::BP_UI_PlanningMap_C_ExecuteUbergraph_BP_UI_PlanningMap Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.Fill Level Data from Table
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_UI_PlanningMap_C::Fill_Level_Data_from_Table()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UI_PlanningMap_C", "Fill Level Data from Table");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.GetCurrentMapMaterial
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UMaterialInterface**              CurrentMaterial                                        (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UI_PlanningMap_C::GetCurrentMapMaterial(class UMaterialInterface** CurrentMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UI_PlanningMap_C", "GetCurrentMapMaterial");

	Params::BP_UI_PlanningMap_C_GetCurrentMapMaterial Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentMaterial != nullptr)
		*CurrentMaterial = Parms.CurrentMaterial;
}


// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.GetMapMaterial
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ForceUpdate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic**        MapDynMat_0                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UI_PlanningMap_C::GetMapMaterial(bool ForceUpdate, class UMaterialInstanceDynamic** MapDynMat_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UI_PlanningMap_C", "GetMapMaterial");

	Params::BP_UI_PlanningMap_C_GetMapMaterial Parms{};

	Parms.ForceUpdate = ForceUpdate;

	UObject::ProcessEvent(Func, &Parms);

	if (MapDynMat_0 != nullptr)
		*MapDynMat_0 = Parms.MapDynMat_0;
}


// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.InitializeFloor
// (BlueprintCallable, BlueprintEvent)

void ABP_UI_PlanningMap_C::InitializeFloor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UI_PlanningMap_C", "InitializeFloor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_UI_PlanningMap_C::InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UI_PlanningMap_C", "InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0");

	Params::BP_UI_PlanningMap_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_UI_PlanningMap_C::InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UI_PlanningMap_C", "InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1");

	Params::BP_UI_PlanningMap_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.OnLoaded_6AC405FF4BFE790347C0B19681EDEBD5
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UI_PlanningMap_C::OnLoaded_6AC405FF4BFE790347C0B19681EDEBD5(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UI_PlanningMap_C", "OnLoaded_6AC405FF4BFE790347C0B19681EDEBD5");

	Params::BP_UI_PlanningMap_C_OnLoaded_6AC405FF4BFE790347C0B19681EDEBD5 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.PanCamera
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Panning_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 CursorPos                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UI_PlanningMap_C::PanCamera(bool Panning_0, const struct FVector2D& CursorPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UI_PlanningMap_C", "PanCamera");

	Params::BP_UI_PlanningMap_C_PanCamera Parms{};

	Parms.Panning_0 = Panning_0;
	Parms.CursorPos = std::move(CursorPos);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_UI_PlanningMap_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UI_PlanningMap_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UI_PlanningMap_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UI_PlanningMap_C", "ReceiveTick");

	Params::BP_UI_PlanningMap_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.RollOutMap
// (BlueprintCallable, BlueprintEvent)

void ABP_UI_PlanningMap_C::RollOutMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UI_PlanningMap_C", "RollOutMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.SetMapMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInterface*               Material                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UI_PlanningMap_C::SetMapMaterial(class UMaterialInterface* Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UI_PlanningMap_C", "SetMapMaterial");

	Params::BP_UI_PlanningMap_C_SetMapMaterial Parms{};

	Parms.Material = Material;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.SpawnMapMarker
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_UI_PlanningMap_Marker_C**     OutputPin                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_UI_PlanningMap_C::SpawnMapMarker(const struct FVector& Location, class UBP_UI_PlanningMap_Marker_C** OutputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UI_PlanningMap_C", "SpawnMapMarker");

	Params::BP_UI_PlanningMap_C_SpawnMapMarker Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;
}


// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.UpdateZoom
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_UI_PlanningMap_C::UpdateZoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UI_PlanningMap_C", "UpdateZoom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UI_PlanningMap.BP_UI_PlanningMap_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_UI_PlanningMap_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UI_PlanningMap_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

