#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Projectile_Flare

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Projectile_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Projectile_Flare.Projectile_Flare_C
// 0x0020 (0x0458 - 0x0438)
class AProjectile_Flare_C final : public AProjectile_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Projectile_Flare_C;                 // 0x0438(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_LenFlare_RoadFlare_C*               LensFlare;                                         // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_LensFlare_FlareGun_C*               Gun_Flare;                                         // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Projectile_Flare(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void SpawnLensFlare();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Projectile_Flare_C">();
	}
	static class AProjectile_Flare_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProjectile_Flare_C>();
	}
};
static_assert(alignof(AProjectile_Flare_C) == 0x000008, "Wrong alignment on AProjectile_Flare_C");
static_assert(sizeof(AProjectile_Flare_C) == 0x000458, "Wrong size on AProjectile_Flare_C");
static_assert(offsetof(AProjectile_Flare_C, UberGraphFrame_Projectile_Flare_C) == 0x000438, "Member 'AProjectile_Flare_C::UberGraphFrame_Projectile_Flare_C' has a wrong offset!");
static_assert(offsetof(AProjectile_Flare_C, ParticleSystem) == 0x000440, "Member 'AProjectile_Flare_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(AProjectile_Flare_C, LensFlare) == 0x000448, "Member 'AProjectile_Flare_C::LensFlare' has a wrong offset!");
static_assert(offsetof(AProjectile_Flare_C, Gun_Flare) == 0x000450, "Member 'AProjectile_Flare_C::Gun_Flare' has a wrong offset!");

}

