#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AxisMapArrayStruct

#include "Basic.hpp"

#include "Slate_structs.hpp"


namespace SDK
{

// UserDefinedStruct AxisMapArrayStruct.AxisMapArrayStruct
// 0x0050 (0x0050 - 0x0000)
struct FAxisMapArrayStruct final
{
public:
	class FName                                   KeybindName_14_235F74F94B7393BEF4CA34B979AA726B;   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputChord                            Keyboard_17_1388431941B5E9EF66C67E8DF966BE80;      // 0x0008(0x0020)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FInputChord                            Xbox_18_445B5FBB494871969C8FB3A8B5E90B4E;          // 0x0028(0x0020)(Edit, BlueprintVisible, HasGetValueTypeHash)
	float                                         Scale_21_9AF2E94846B48FD35910DB93C0AC3866;         // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FAxisMapArrayStruct) == 0x000008, "Wrong alignment on FAxisMapArrayStruct");
static_assert(sizeof(FAxisMapArrayStruct) == 0x000050, "Wrong size on FAxisMapArrayStruct");
static_assert(offsetof(FAxisMapArrayStruct, KeybindName_14_235F74F94B7393BEF4CA34B979AA726B) == 0x000000, "Member 'FAxisMapArrayStruct::KeybindName_14_235F74F94B7393BEF4CA34B979AA726B' has a wrong offset!");
static_assert(offsetof(FAxisMapArrayStruct, Keyboard_17_1388431941B5E9EF66C67E8DF966BE80) == 0x000008, "Member 'FAxisMapArrayStruct::Keyboard_17_1388431941B5E9EF66C67E8DF966BE80' has a wrong offset!");
static_assert(offsetof(FAxisMapArrayStruct, Xbox_18_445B5FBB494871969C8FB3A8B5E90B4E) == 0x000028, "Member 'FAxisMapArrayStruct::Xbox_18_445B5FBB494871969C8FB3A8B5E90B4E' has a wrong offset!");
static_assert(offsetof(FAxisMapArrayStruct, Scale_21_9AF2E94846B48FD35910DB93C0AC3866) == 0x000048, "Member 'FAxisMapArrayStruct::Scale_21_9AF2E94846B48FD35910DB93C0AC3866' has a wrong offset!");

}

