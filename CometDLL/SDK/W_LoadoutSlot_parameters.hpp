#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_LoadoutSlot

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "UMG_structs.hpp"
#include "ST_Style_Text_structs.hpp"


namespace SDK::Params
{

// Function W_LoadoutSlot.W_LoadoutSlot_C.ApplyIcon
// 0x0038 (0x0038 - 0x0000)
struct W_LoadoutSlot_C_ApplyIcon final
{
public:
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendMultiple_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Blueprint_GetSizeY_ReturnValue;           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Blueprint_GetSizeX_ReturnValue;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_ApplyIcon) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_ApplyIcon");
static_assert(sizeof(W_LoadoutSlot_C_ApplyIcon) == 0x000038, "Wrong size on W_LoadoutSlot_C_ApplyIcon");
static_assert(offsetof(W_LoadoutSlot_C_ApplyIcon, CallFunc_GetDisplayName_ReturnValue) == 0x000000, "Member 'W_LoadoutSlot_C_ApplyIcon::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ApplyIcon, CallFunc_AppendMultiple_ReturnValue) == 0x000010, "Member 'W_LoadoutSlot_C_ApplyIcon::CallFunc_AppendMultiple_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ApplyIcon, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'W_LoadoutSlot_C_ApplyIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ApplyIcon, CallFunc_Blueprint_GetSizeY_ReturnValue) == 0x000024, "Member 'W_LoadoutSlot_C_ApplyIcon::CallFunc_Blueprint_GetSizeY_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ApplyIcon, CallFunc_Blueprint_GetSizeX_ReturnValue) == 0x000028, "Member 'W_LoadoutSlot_C_ApplyIcon::CallFunc_Blueprint_GetSizeX_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ApplyIcon, CallFunc_Divide_IntInt_ReturnValue) == 0x00002C, "Member 'W_LoadoutSlot_C_ApplyIcon::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ApplyIcon, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'W_LoadoutSlot_C_ApplyIcon::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_C_BackPage final
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_BackPage) == 0x000001, "Wrong alignment on W_LoadoutSlot_C_BackPage");
static_assert(sizeof(W_LoadoutSlot_C_BackPage) == 0x000001, "Wrong size on W_LoadoutSlot_C_BackPage");
static_assert(offsetof(W_LoadoutSlot_C_BackPage, Handled) == 0x000000, "Member 'W_LoadoutSlot_C_BackPage::Handled' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature");
static_assert(sizeof(W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature) == 0x000008, "Wrong size on W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature");
static_assert(offsetof(W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature, Button) == 0x000000, "Member 'W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature::Button' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");
static_assert(sizeof(W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");
static_assert(offsetof(W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature");
static_assert(sizeof(W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature) == 0x000008, "Wrong size on W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature");
static_assert(offsetof(W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature, Button) == 0x000000, "Member 'W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature::Button' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on W_LoadoutSlot_C_BP_OnItemExpansionChanged");
static_assert(sizeof(W_LoadoutSlot_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on W_LoadoutSlot_C_BP_OnItemExpansionChanged");
static_assert(offsetof(W_LoadoutSlot_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'W_LoadoutSlot_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on W_LoadoutSlot_C_BP_OnItemSelectionChanged");
static_assert(sizeof(W_LoadoutSlot_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on W_LoadoutSlot_C_BP_OnItemSelectionChanged");
static_assert(offsetof(W_LoadoutSlot_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'W_LoadoutSlot_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_ChangePage final
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_ChangePage) == 0x000004, "Wrong alignment on W_LoadoutSlot_C_ChangePage");
static_assert(sizeof(W_LoadoutSlot_C_ChangePage) == 0x000008, "Wrong size on W_LoadoutSlot_C_ChangePage");
static_assert(offsetof(W_LoadoutSlot_C_ChangePage, PageName) == 0x000000, "Member 'W_LoadoutSlot_C_ChangePage::PageName' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.DisableInteraction
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_C_DisableInteraction final
{
public:
	bool                                          Disabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_DisableInteraction) == 0x000001, "Wrong alignment on W_LoadoutSlot_C_DisableInteraction");
static_assert(sizeof(W_LoadoutSlot_C_DisableInteraction) == 0x000001, "Wrong size on W_LoadoutSlot_C_DisableInteraction");
static_assert(offsetof(W_LoadoutSlot_C_DisableInteraction, Disabled) == 0x000000, "Member 'W_LoadoutSlot_C_DisableInteraction::Disabled' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.ExecuteUbergraph_W_LoadoutSlot
// 0x0760 (0x0760 - 0x0000)
struct W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_ItemData_1;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UArmourMaterial*                        K2Node_CustomEvent_ArmourMaterial;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_2;               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UArmourMaterial*                        K2Node_CustomEvent_ArmourMaterial_1;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Primary;                        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_AmmoType;                       // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_Weapon;                         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_AmmoCount;                      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C8(0x0018)()
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Primary_1;                      // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E3[0x1];                                       // 0x00E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_AmmoType_1;                     // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_Weapon_1;                       // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_AmmoCount_1;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_GetAmmoLookupDataTable_ReturnValue;       // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAmmoTypeData                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0108(0x0170)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27A[0x6];                                      // 0x027A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_ItemData;                       // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_1;               // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_C*                           K2Node_Event_LoadoutWidget;                        // 0x0290(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x0298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FSavedLoadout                          K2Node_Event_ActiveLoadout;                        // 0x02A0(0x02E8)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0589(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58A[0x6];                                      // 0x058A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_AugmentText;                    // 0x0590(0x0018)()
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x05A8(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x05E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E5[0x3];                                      // 0x05E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_OptionNameID;                         // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EItemCategory, class UClass*>            K2Node_Event_ItemCategory;                         // 0x05F0(0x0050)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0640(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       K2Node_Event_CurrentSlot;                          // 0x0648(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Count;                          // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654[0x4];                                      // 0x0654(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_PageName;                             // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0668(0x0050)(HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B9[0x7];                                      // 0x06B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x06C0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x06D0(0x0018)()
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x06E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x06F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x06F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F2[0x6];                                      // 0x06F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x06F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0700(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_709[0x3];                                      // 0x0709(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x070C(0x0008)(NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0714(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_715[0x3];                                      // 0x0715(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0718(0x0008)(NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0720(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasUserFocus_ReturnValue;                 // 0x0728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_729[0x7];                                      // 0x0729(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay_1;                              // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0738(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_739[0x7];                                      // 0x0739(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay;                                // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x0748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0749(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74A[0x6];                                      // 0x074A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x0750(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot");
static_assert(sizeof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot) == 0x000760, "Wrong size on W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, EntryPoint) == 0x000000, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_ItemData_1) == 0x000008, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_ItemData_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_ArmourMaterial) == 0x000010, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_ArmourMaterial' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000018, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_ComponentBoundEvent_Button_2) == 0x000020, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_GetEndTime_ReturnValue) == 0x000028, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_ArmourMaterial_1) == 0x000030, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_ArmourMaterial_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_Primary) == 0x000038, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_Primary' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_AmmoType) == 0x00003C, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_AmmoType' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_Weapon) == 0x000048, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_Weapon' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_AmmoCount) == 0x000050, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_AmmoCount' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000058, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_MakeArray_Array) == 0x0000B0, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000C0, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_Format_ReturnValue) == 0x0000C8, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x0000E0, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_BooleanOR_ReturnValue) == 0x0000E1, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_Primary_1) == 0x0000E2, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_Primary_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_AmmoType_1) == 0x0000E4, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_AmmoType_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_Weapon_1) == 0x0000F0, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_Weapon_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_AmmoCount_1) == 0x0000F8, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_AmmoCount_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_GetAmmoLookupDataTable_ReturnValue) == 0x000100, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_GetAmmoLookupDataTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_GetDataTableRowFromName_OutRow) == 0x000108, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000278, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_Not_PreBool_ReturnValue) == 0x000279, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_ItemData) == 0x000280, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_ItemData' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_ComponentBoundEvent_Button_1) == 0x000288, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_LoadoutWidget) == 0x000290, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_LoadoutWidget' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_ComponentBoundEvent_Button) == 0x000298, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_ActiveLoadout) == 0x0002A0, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_ActiveLoadout' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_BooleanAND_ReturnValue) == 0x000588, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_IsValidClass_ReturnValue) == 0x000589, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_AugmentText) == 0x000590, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_AugmentText' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_MyGeometry) == 0x0005A8, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_InDeltaTime) == 0x0005E0, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_IsDesignTime) == 0x0005E4, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_OptionNameID) == 0x0005E8, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_OptionNameID' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_ItemCategory) == 0x0005F0, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_ItemCategory' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_PlayAnimation_ReturnValue) == 0x000640, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_CurrentSlot) == 0x000648, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_CurrentSlot' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_Count) == 0x000650, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_Count' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000658, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_PageName) == 0x000660, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_MakeStruct_FormatArgumentData_1) == 0x000668, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_IsGamepad) == 0x0006B8, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_MakeArray_Array_1) == 0x0006C0, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_Format_ReturnValue_1) == 0x0006D0, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_ListItemObject) == 0x0006E8, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_bIsSelected) == 0x0006F0, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_bIsExpanded) == 0x0006F1, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_PlayAnimationForward_ReturnValue) == 0x0006F8, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000700, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_Not_PreBool_ReturnValue_1) == 0x000708, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_InFocusEvent_1) == 0x00070C, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_InFocusEvent_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_BooleanAND_ReturnValue_1) == 0x000714, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_InFocusEvent) == 0x000718, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_GetOwningPlayer_ReturnValue) == 0x000720, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_HasUserFocus_ReturnValue) == 0x000728, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_HasUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_Delay_1) == 0x000730, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_Collapse) == 0x000738, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_Delay) == 0x000740, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x000748, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_BooleanOR_ReturnValue_1) == 0x000749, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x000750, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000758, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.GetAmmoCategoryText
// 0x01F0 (0x01F0 - 0x0000)
struct W_LoadoutSlot_C_GetAmmoCategoryText final
{
public:
	class UClass*                                 ItemData_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0008(0x0018)(Parm, OutParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm)
	class UClass*                                 K2Node_ClassDynamicCast_AsPepperball_Gun;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0040(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00A8(0x0010)(ReferenceParm)
	class UClass*                                 K2Node_ClassDynamicCast_AsTaser;                   // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x00C8(0x0018)()
	class UClass*                                 K2Node_ClassDynamicCast_AsShotgun;                 // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_2;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsBase_Magazine_Weapon;    // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_3;                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0100(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0150(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0160(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x01B0(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x01C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x01D8(0x0018)()
};
static_assert(alignof(W_LoadoutSlot_C_GetAmmoCategoryText) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_GetAmmoCategoryText");
static_assert(sizeof(W_LoadoutSlot_C_GetAmmoCategoryText) == 0x0001F0, "Wrong size on W_LoadoutSlot_C_GetAmmoCategoryText");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, ItemData_0) == 0x000000, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::ItemData_0' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, Text) == 0x000008, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::Text' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_MakeArray_Array) == 0x000020, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_ClassDynamicCast_AsPepperball_Gun) == 0x000030, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_ClassDynamicCast_AsPepperball_Gun' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_ClassDynamicCast_bSuccess) == 0x000038, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, CallFunc_Format_ReturnValue) == 0x000040, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_MakeArray_Array_1) == 0x0000A8, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_ClassDynamicCast_AsTaser) == 0x0000B8, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_ClassDynamicCast_AsTaser' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_ClassDynamicCast_bSuccess_1) == 0x0000C0, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, CallFunc_Format_ReturnValue_1) == 0x0000C8, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_ClassDynamicCast_AsShotgun) == 0x0000E0, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_ClassDynamicCast_AsShotgun' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_ClassDynamicCast_bSuccess_2) == 0x0000E8, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_ClassDynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_ClassDynamicCast_AsBase_Magazine_Weapon) == 0x0000F0, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_ClassDynamicCast_AsBase_Magazine_Weapon' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_ClassDynamicCast_bSuccess_3) == 0x0000F8, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_ClassDynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000100, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_MakeArray_Array_2) == 0x000150, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_MakeStruct_FormatArgumentData_2) == 0x000160, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, CallFunc_Format_ReturnValue_2) == 0x0001B0, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_MakeArray_Array_3) == 0x0001C8, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, CallFunc_Format_ReturnValue_3) == 0x0001D8, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::CallFunc_Format_ReturnValue_3' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.GetHoverState
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_C_GetHoverState final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_GetHoverState) == 0x000001, "Wrong alignment on W_LoadoutSlot_C_GetHoverState");
static_assert(sizeof(W_LoadoutSlot_C_GetHoverState) == 0x000001, "Wrong size on W_LoadoutSlot_C_GetHoverState");
static_assert(offsetof(W_LoadoutSlot_C_GetHoverState, ReturnValue) == 0x000000, "Member 'W_LoadoutSlot_C_GetHoverState::ReturnValue' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.GetIsSuppressed
// 0x000E (0x000E - 0x0000)
struct W_LoadoutSlot_C_GetIsSuppressed final
{
public:
	bool                                          IsSuppressed;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_GetIsSuppressed) == 0x000001, "Wrong alignment on W_LoadoutSlot_C_GetIsSuppressed");
static_assert(sizeof(W_LoadoutSlot_C_GetIsSuppressed) == 0x00000E, "Wrong size on W_LoadoutSlot_C_GetIsSuppressed");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, IsSuppressed) == 0x000000, "Member 'W_LoadoutSlot_C_GetIsSuppressed::IsSuppressed' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, Temp_bool_Variable) == 0x000001, "Member 'W_LoadoutSlot_C_GetIsSuppressed::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, Temp_bool_Variable_1) == 0x000002, "Member 'W_LoadoutSlot_C_GetIsSuppressed::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, Temp_bool_Variable_2) == 0x000003, "Member 'W_LoadoutSlot_C_GetIsSuppressed::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, CallFunc_IsEmpty_ReturnValue) == 0x000004, "Member 'W_LoadoutSlot_C_GetIsSuppressed::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'W_LoadoutSlot_C_GetIsSuppressed::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, CallFunc_IsValidClass_ReturnValue) == 0x000006, "Member 'W_LoadoutSlot_C_GetIsSuppressed::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000007, "Member 'W_LoadoutSlot_C_GetIsSuppressed::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, CallFunc_IsValidClass_ReturnValue_1) == 0x000008, "Member 'W_LoadoutSlot_C_GetIsSuppressed::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'W_LoadoutSlot_C_GetIsSuppressed::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x00000A, "Member 'W_LoadoutSlot_C_GetIsSuppressed::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, CallFunc_BooleanAND_ReturnValue_1) == 0x00000B, "Member 'W_LoadoutSlot_C_GetIsSuppressed::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, K2Node_Select_Default) == 0x00000C, "Member 'W_LoadoutSlot_C_GetIsSuppressed::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, K2Node_Select_Default_1) == 0x00000D, "Member 'W_LoadoutSlot_C_GetIsSuppressed::K2Node_Select_Default_1' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.GetLoadoutWidget
// 0x0028 (0x0028 - 0x0000)
struct W_LoadoutSlot_C_GetLoadoutWidget final
{
public:
	class UW_Loadout_C*                           LoadoutWidget_0;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_Loadout_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UW_Loadout_C*                           CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_GetLoadoutWidget) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_GetLoadoutWidget");
static_assert(sizeof(W_LoadoutSlot_C_GetLoadoutWidget) == 0x000028, "Wrong size on W_LoadoutSlot_C_GetLoadoutWidget");
static_assert(offsetof(W_LoadoutSlot_C_GetLoadoutWidget, LoadoutWidget_0) == 0x000000, "Member 'W_LoadoutSlot_C_GetLoadoutWidget::LoadoutWidget_0' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetLoadoutWidget, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_LoadoutSlot_C_GetLoadoutWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetLoadoutWidget, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000010, "Member 'W_LoadoutSlot_C_GetLoadoutWidget::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetLoadoutWidget, CallFunc_Array_Get_Item) == 0x000020, "Member 'W_LoadoutSlot_C_GetLoadoutWidget::CallFunc_Array_Get_Item' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.HeaderSubpageNavigation
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_HeaderSubpageNavigation final
{
public:
	class FName                                   OptionNameID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_HeaderSubpageNavigation) == 0x000004, "Wrong alignment on W_LoadoutSlot_C_HeaderSubpageNavigation");
static_assert(sizeof(W_LoadoutSlot_C_HeaderSubpageNavigation) == 0x000008, "Wrong size on W_LoadoutSlot_C_HeaderSubpageNavigation");
static_assert(offsetof(W_LoadoutSlot_C_HeaderSubpageNavigation, OptionNameID) == 0x000000, "Member 'W_LoadoutSlot_C_HeaderSubpageNavigation::OptionNameID' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.Hide
// 0x0010 (0x0010 - 0x0000)
struct W_LoadoutSlot_C_Hide final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse_0;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_Hide) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_Hide");
static_assert(sizeof(W_LoadoutSlot_C_Hide) == 0x000010, "Wrong size on W_LoadoutSlot_C_Hide");
static_assert(offsetof(W_LoadoutSlot_C_Hide, Delay) == 0x000000, "Member 'W_LoadoutSlot_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Hide, Collapse_0) == 0x000008, "Member 'W_LoadoutSlot_C_Hide::Collapse_0' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.InitializeAmmoData
// 0x0020 (0x0020 - 0x0000)
struct W_LoadoutSlot_C_InitializeAmmoData final
{
public:
	bool                                          Primary;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AmmoType_0;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Weapon;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         AmmoCount;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_InitializeAmmoData) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_InitializeAmmoData");
static_assert(sizeof(W_LoadoutSlot_C_InitializeAmmoData) == 0x000020, "Wrong size on W_LoadoutSlot_C_InitializeAmmoData");
static_assert(offsetof(W_LoadoutSlot_C_InitializeAmmoData, Primary) == 0x000000, "Member 'W_LoadoutSlot_C_InitializeAmmoData::Primary' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_InitializeAmmoData, AmmoType_0) == 0x000004, "Member 'W_LoadoutSlot_C_InitializeAmmoData::AmmoType_0' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_InitializeAmmoData, Weapon) == 0x000010, "Member 'W_LoadoutSlot_C_InitializeAmmoData::Weapon' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_InitializeAmmoData, AmmoCount) == 0x000018, "Member 'W_LoadoutSlot_C_InitializeAmmoData::AmmoCount' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.InitializeArmourMaterialData
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_InitializeArmourMaterialData final
{
public:
	class UArmourMaterial*                        ArmourMaterial;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_InitializeArmourMaterialData) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_InitializeArmourMaterialData");
static_assert(sizeof(W_LoadoutSlot_C_InitializeArmourMaterialData) == 0x000008, "Wrong size on W_LoadoutSlot_C_InitializeArmourMaterialData");
static_assert(offsetof(W_LoadoutSlot_C_InitializeArmourMaterialData, ArmourMaterial) == 0x000000, "Member 'W_LoadoutSlot_C_InitializeArmourMaterialData::ArmourMaterial' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.InitializeItemData
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_InitializeItemData final
{
public:
	class UClass*                                 ItemData_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_InitializeItemData) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_InitializeItemData");
static_assert(sizeof(W_LoadoutSlot_C_InitializeItemData) == 0x000008, "Wrong size on W_LoadoutSlot_C_InitializeItemData");
static_assert(offsetof(W_LoadoutSlot_C_InitializeItemData, ItemData_0) == 0x000000, "Member 'W_LoadoutSlot_C_InitializeItemData::ItemData_0' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(W_LoadoutSlot_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on W_LoadoutSlot_C_OnAddedToFocusPath");
static_assert(sizeof(W_LoadoutSlot_C_OnAddedToFocusPath) == 0x000008, "Wrong size on W_LoadoutSlot_C_OnAddedToFocusPath");
static_assert(offsetof(W_LoadoutSlot_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'W_LoadoutSlot_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_OnListItemObjectSet");
static_assert(sizeof(W_LoadoutSlot_C_OnListItemObjectSet) == 0x000008, "Wrong size on W_LoadoutSlot_C_OnListItemObjectSet");
static_assert(offsetof(W_LoadoutSlot_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'W_LoadoutSlot_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(W_LoadoutSlot_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on W_LoadoutSlot_C_OnRemovedFromFocusPath");
static_assert(sizeof(W_LoadoutSlot_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on W_LoadoutSlot_C_OnRemovedFromFocusPath");
static_assert(offsetof(W_LoadoutSlot_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'W_LoadoutSlot_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_PreConstruct) == 0x000001, "Wrong alignment on W_LoadoutSlot_C_PreConstruct");
static_assert(sizeof(W_LoadoutSlot_C_PreConstruct) == 0x000001, "Wrong size on W_LoadoutSlot_C_PreConstruct");
static_assert(offsetof(W_LoadoutSlot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_LoadoutSlot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.RefreshAmmoInfo
// 0x0030 (0x0030 - 0x0000)
struct W_LoadoutSlot_C_RefreshAmmoInfo final
{
public:
	class FText                                   CallFunc_GetAmmoCategoryText_Text;                 // 0x0000(0x0018)()
	class UClass*                                 K2Node_ClassDynamicCast_AsBase_Magazine_Weapon;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_AmmoMax_ImplicitCast;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_RefreshAmmoInfo) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_RefreshAmmoInfo");
static_assert(sizeof(W_LoadoutSlot_C_RefreshAmmoInfo) == 0x000030, "Wrong size on W_LoadoutSlot_C_RefreshAmmoInfo");
static_assert(offsetof(W_LoadoutSlot_C_RefreshAmmoInfo, CallFunc_GetAmmoCategoryText_Text) == 0x000000, "Member 'W_LoadoutSlot_C_RefreshAmmoInfo::CallFunc_GetAmmoCategoryText_Text' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshAmmoInfo, K2Node_ClassDynamicCast_AsBase_Magazine_Weapon) == 0x000018, "Member 'W_LoadoutSlot_C_RefreshAmmoInfo::K2Node_ClassDynamicCast_AsBase_Magazine_Weapon' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshAmmoInfo, K2Node_ClassDynamicCast_bSuccess) == 0x000020, "Member 'W_LoadoutSlot_C_RefreshAmmoInfo::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshAmmoInfo, K2Node_VariableSet_AmmoMax_ImplicitCast) == 0x000028, "Member 'W_LoadoutSlot_C_RefreshAmmoInfo::K2Node_VariableSet_AmmoMax_ImplicitCast' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.RefreshItemInfo
// 0x0108 (0x0108 - 0x0000)
struct W_LoadoutSlot_C_RefreshItemInfo final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSuppressed_IsSuppressed;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsSWATArmour;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetItemClassText_Category_Text;           // 0x00A8(0x0018)()
	class FText                                   CallFunc_GetLoadoutCategoryText_Category_Text;     // 0x00C0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00D8(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x00F0(0x0018)()
};
static_assert(alignof(W_LoadoutSlot_C_RefreshItemInfo) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_RefreshItemInfo");
static_assert(sizeof(W_LoadoutSlot_C_RefreshItemInfo) == 0x000108, "Wrong size on W_LoadoutSlot_C_RefreshItemInfo");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, Temp_bool_Variable) == 0x000000, "Member 'W_LoadoutSlot_C_RefreshItemInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, Temp_bool_Variable_1) == 0x000001, "Member 'W_LoadoutSlot_C_RefreshItemInfo::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, CallFunc_GetIsSuppressed_IsSuppressed) == 0x000002, "Member 'W_LoadoutSlot_C_RefreshItemInfo::CallFunc_GetIsSuppressed_IsSuppressed' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, K2Node_ClassDynamicCast_AsSWATArmour) == 0x000008, "Member 'W_LoadoutSlot_C_RefreshItemInfo::K2Node_ClassDynamicCast_AsSWATArmour' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, K2Node_ClassDynamicCast_bSuccess) == 0x000010, "Member 'W_LoadoutSlot_C_RefreshItemInfo::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000018, "Member 'W_LoadoutSlot_C_RefreshItemInfo::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'W_LoadoutSlot_C_RefreshItemInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000070, "Member 'W_LoadoutSlot_C_RefreshItemInfo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, K2Node_MakeArray_Array) == 0x000078, "Member 'W_LoadoutSlot_C_RefreshItemInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, CallFunc_Format_ReturnValue) == 0x000088, "Member 'W_LoadoutSlot_C_RefreshItemInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, CallFunc_TextIsEmpty_ReturnValue) == 0x0000A0, "Member 'W_LoadoutSlot_C_RefreshItemInfo::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, CallFunc_Not_PreBool_ReturnValue) == 0x0000A1, "Member 'W_LoadoutSlot_C_RefreshItemInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, CallFunc_GetItemClassText_Category_Text) == 0x0000A8, "Member 'W_LoadoutSlot_C_RefreshItemInfo::CallFunc_GetItemClassText_Category_Text' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, CallFunc_GetLoadoutCategoryText_Category_Text) == 0x0000C0, "Member 'W_LoadoutSlot_C_RefreshItemInfo::CallFunc_GetLoadoutCategoryText_Category_Text' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, K2Node_Select_Default) == 0x0000D8, "Member 'W_LoadoutSlot_C_RefreshItemInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, K2Node_Select_Default_1) == 0x0000F0, "Member 'W_LoadoutSlot_C_RefreshItemInfo::K2Node_Select_Default_1' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.ReinitializeAmmoData
// 0x0020 (0x0020 - 0x0000)
struct W_LoadoutSlot_C_ReinitializeAmmoData final
{
public:
	bool                                          Primary;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AmmoType_0;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Weapon;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         AmmoCount;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_ReinitializeAmmoData) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_ReinitializeAmmoData");
static_assert(sizeof(W_LoadoutSlot_C_ReinitializeAmmoData) == 0x000020, "Wrong size on W_LoadoutSlot_C_ReinitializeAmmoData");
static_assert(offsetof(W_LoadoutSlot_C_ReinitializeAmmoData, Primary) == 0x000000, "Member 'W_LoadoutSlot_C_ReinitializeAmmoData::Primary' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ReinitializeAmmoData, AmmoType_0) == 0x000004, "Member 'W_LoadoutSlot_C_ReinitializeAmmoData::AmmoType_0' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ReinitializeAmmoData, Weapon) == 0x000010, "Member 'W_LoadoutSlot_C_ReinitializeAmmoData::Weapon' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ReinitializeAmmoData, AmmoCount) == 0x000018, "Member 'W_LoadoutSlot_C_ReinitializeAmmoData::AmmoCount' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.ReinitializeArmorMaterialData
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_ReinitializeArmorMaterialData final
{
public:
	class UArmourMaterial*                        ArmourMaterial;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_ReinitializeArmorMaterialData) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_ReinitializeArmorMaterialData");
static_assert(sizeof(W_LoadoutSlot_C_ReinitializeArmorMaterialData) == 0x000008, "Wrong size on W_LoadoutSlot_C_ReinitializeArmorMaterialData");
static_assert(offsetof(W_LoadoutSlot_C_ReinitializeArmorMaterialData, ArmourMaterial) == 0x000000, "Member 'W_LoadoutSlot_C_ReinitializeArmorMaterialData::ArmourMaterial' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.ReinitializeItemData
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_ReinitializeItemData final
{
public:
	class UClass*                                 ItemData_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_ReinitializeItemData) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_ReinitializeItemData");
static_assert(sizeof(W_LoadoutSlot_C_ReinitializeItemData) == 0x000008, "Wrong size on W_LoadoutSlot_C_ReinitializeItemData");
static_assert(offsetof(W_LoadoutSlot_C_ReinitializeItemData, ItemData_0) == 0x000000, "Member 'W_LoadoutSlot_C_ReinitializeItemData::ItemData_0' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.Reveal
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_Reveal final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_Reveal) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_Reveal");
static_assert(sizeof(W_LoadoutSlot_C_Reveal) == 0x000008, "Wrong size on W_LoadoutSlot_C_Reveal");
static_assert(offsetof(W_LoadoutSlot_C_Reveal, Delay) == 0x000000, "Member 'W_LoadoutSlot_C_Reveal::Delay' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.Set Active Old
// 0x02B8 (0x02B8 - 0x0000)
struct W_LoadoutSlot_C_Set_Active_Old final
{
public:
	bool                                          IsActive_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHoverState_ReturnValue;                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_2;                // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_3;                // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_Style_Text                         K2Node_Select_Default;                             // 0x0058(0x00C8)(HasGetValueTypeHash)
	struct FST_Style_Text                         K2Node_Select_Default_1;                           // 0x0120(0x00C8)(HasGetValueTypeHash)
	struct FST_Style_Text                         K2Node_Select_Default_2;                           // 0x01E8(0x00C8)(HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_Set_Active_Old) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_Set_Active_Old");
static_assert(sizeof(W_LoadoutSlot_C_Set_Active_Old) == 0x0002B8, "Wrong size on W_LoadoutSlot_C_Set_Active_Old");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, IsActive_0) == 0x000000, "Member 'W_LoadoutSlot_C_Set_Active_Old::IsActive_0' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, Temp_bool_Variable) == 0x000001, "Member 'W_LoadoutSlot_C_Set_Active_Old::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, Temp_bool_Variable_1) == 0x000002, "Member 'W_LoadoutSlot_C_Set_Active_Old::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, Temp_bool_Variable_2) == 0x000003, "Member 'W_LoadoutSlot_C_Set_Active_Old::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, CallFunc_SelectColor_ReturnValue) == 0x000004, "Member 'W_LoadoutSlot_C_Set_Active_Old::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, CallFunc_SelectColor_ReturnValue_1) == 0x000014, "Member 'W_LoadoutSlot_C_Set_Active_Old::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, CallFunc_GetHoverState_ReturnValue) == 0x000024, "Member 'W_LoadoutSlot_C_Set_Active_Old::CallFunc_GetHoverState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, CallFunc_SelectColor_ReturnValue_2) == 0x000028, "Member 'W_LoadoutSlot_C_Set_Active_Old::CallFunc_SelectColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'W_LoadoutSlot_C_Set_Active_Old::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, CallFunc_SelectFloat_ReturnValue_1) == 0x000040, "Member 'W_LoadoutSlot_C_Set_Active_Old::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, CallFunc_SelectColor_ReturnValue_3) == 0x000048, "Member 'W_LoadoutSlot_C_Set_Active_Old::CallFunc_SelectColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, K2Node_Select_Default) == 0x000058, "Member 'W_LoadoutSlot_C_Set_Active_Old::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, K2Node_Select_Default_1) == 0x000120, "Member 'W_LoadoutSlot_C_Set_Active_Old::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, K2Node_Select_Default_2) == 0x0001E8, "Member 'W_LoadoutSlot_C_Set_Active_Old::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x0002B0, "Member 'W_LoadoutSlot_C_Set_Active_Old::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.SetCompactLayout
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_C_SetCompactLayout final
{
public:
	bool                                          CompactLayout_0;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_SetCompactLayout) == 0x000001, "Wrong alignment on W_LoadoutSlot_C_SetCompactLayout");
static_assert(sizeof(W_LoadoutSlot_C_SetCompactLayout) == 0x000001, "Wrong size on W_LoadoutSlot_C_SetCompactLayout");
static_assert(offsetof(W_LoadoutSlot_C_SetCompactLayout, CompactLayout_0) == 0x000000, "Member 'W_LoadoutSlot_C_SetCompactLayout::CompactLayout_0' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.SetCountText
// 0x0020 (0x0020 - 0x0000)
struct W_LoadoutSlot_C_SetCountText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_SetCountText) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_SetCountText");
static_assert(sizeof(W_LoadoutSlot_C_SetCountText) == 0x000020, "Wrong size on W_LoadoutSlot_C_SetCountText");
static_assert(offsetof(W_LoadoutSlot_C_SetCountText, Text) == 0x000000, "Member 'W_LoadoutSlot_C_SetCountText::Text' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetCountText, Temp_bool_Variable) == 0x000018, "Member 'W_LoadoutSlot_C_SetCountText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetCountText, CallFunc_TextIsEmpty_ReturnValue) == 0x000019, "Member 'W_LoadoutSlot_C_SetCountText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetCountText, Temp_byte_Variable) == 0x00001A, "Member 'W_LoadoutSlot_C_SetCountText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetCountText, CallFunc_Not_PreBool_ReturnValue) == 0x00001B, "Member 'W_LoadoutSlot_C_SetCountText::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetCountText, Temp_byte_Variable_1) == 0x00001C, "Member 'W_LoadoutSlot_C_SetCountText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetCountText, K2Node_Select_Default) == 0x00001D, "Member 'W_LoadoutSlot_C_SetCountText::K2Node_Select_Default' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.SetEquipped
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_C_SetEquipped final
{
public:
	bool                                          Equipped_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_SetEquipped) == 0x000001, "Wrong alignment on W_LoadoutSlot_C_SetEquipped");
static_assert(sizeof(W_LoadoutSlot_C_SetEquipped) == 0x000001, "Wrong size on W_LoadoutSlot_C_SetEquipped");
static_assert(offsetof(W_LoadoutSlot_C_SetEquipped, Equipped_0) == 0x000000, "Member 'W_LoadoutSlot_C_SetEquipped::Equipped_0' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.SetExclusiveLock
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_C_SetExclusiveLock final
{
public:
	bool                                          CallFunc_IsDLCLocked_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_SetExclusiveLock) == 0x000001, "Wrong alignment on W_LoadoutSlot_C_SetExclusiveLock");
static_assert(sizeof(W_LoadoutSlot_C_SetExclusiveLock) == 0x000001, "Wrong size on W_LoadoutSlot_C_SetExclusiveLock");
static_assert(offsetof(W_LoadoutSlot_C_SetExclusiveLock, CallFunc_IsDLCLocked_ReturnValue) == 0x000000, "Member 'W_LoadoutSlot_C_SetExclusiveLock::CallFunc_IsDLCLocked_ReturnValue' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_C_SetInputMode final
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_SetInputMode) == 0x000001, "Wrong alignment on W_LoadoutSlot_C_SetInputMode");
static_assert(sizeof(W_LoadoutSlot_C_SetInputMode) == 0x000001, "Wrong size on W_LoadoutSlot_C_SetInputMode");
static_assert(offsetof(W_LoadoutSlot_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_LoadoutSlot_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.SetLayout
// 0x0048 (0x0048 - 0x0000)
struct W_LoadoutSlot_C_SetLayout final
{
public:
	bool                                          MinimalLayout_0;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_2;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_Select_Default_3;                           // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SetMaxDesiredHeight_InMaxDesiredHeight_ImplicitCast; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_SetLayout) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_SetLayout");
static_assert(sizeof(W_LoadoutSlot_C_SetLayout) == 0x000048, "Wrong size on W_LoadoutSlot_C_SetLayout");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, MinimalLayout_0) == 0x000000, "Member 'W_LoadoutSlot_C_SetLayout::MinimalLayout_0' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, Temp_bool_Variable) == 0x000001, "Member 'W_LoadoutSlot_C_SetLayout::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, Temp_bool_Variable_1) == 0x000002, "Member 'W_LoadoutSlot_C_SetLayout::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, Temp_byte_Variable) == 0x000003, "Member 'W_LoadoutSlot_C_SetLayout::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, Temp_byte_Variable_1) == 0x000004, "Member 'W_LoadoutSlot_C_SetLayout::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, Temp_bool_Variable_2) == 0x000005, "Member 'W_LoadoutSlot_C_SetLayout::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, Temp_bool_Variable_3) == 0x000006, "Member 'W_LoadoutSlot_C_SetLayout::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x000008, "Member 'W_LoadoutSlot_C_SetLayout::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, K2Node_Select_Default) == 0x000010, "Member 'W_LoadoutSlot_C_SetLayout::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, K2Node_Select_Default_1) == 0x000018, "Member 'W_LoadoutSlot_C_SetLayout::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, K2Node_Select_Default_2) == 0x000020, "Member 'W_LoadoutSlot_C_SetLayout::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, CallFunc_BooleanOR_ReturnValue) == 0x000028, "Member 'W_LoadoutSlot_C_SetLayout::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, CallFunc_SelectInt_ReturnValue) == 0x00002C, "Member 'W_LoadoutSlot_C_SetLayout::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, K2Node_Select_Default_3) == 0x000030, "Member 'W_LoadoutSlot_C_SetLayout::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, CallFunc_SetMaxDesiredHeight_InMaxDesiredHeight_ImplicitCast) == 0x000040, "Member 'W_LoadoutSlot_C_SetLayout::CallFunc_SetMaxDesiredHeight_InMaxDesiredHeight_ImplicitCast' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.SetLoadoutWidget
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_SetLoadoutWidget final
{
public:
	class UW_Loadout_C*                           LoadoutWidget_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_SetLoadoutWidget) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_SetLoadoutWidget");
static_assert(sizeof(W_LoadoutSlot_C_SetLoadoutWidget) == 0x000008, "Wrong size on W_LoadoutSlot_C_SetLoadoutWidget");
static_assert(offsetof(W_LoadoutSlot_C_SetLoadoutWidget, LoadoutWidget_0) == 0x000000, "Member 'W_LoadoutSlot_C_SetLoadoutWidget::LoadoutWidget_0' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_LoadoutSlot_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_Tick) == 0x000004, "Wrong alignment on W_LoadoutSlot_C_Tick");
static_assert(sizeof(W_LoadoutSlot_C_Tick) == 0x00003C, "Wrong size on W_LoadoutSlot_C_Tick");
static_assert(offsetof(W_LoadoutSlot_C_Tick, MyGeometry) == 0x000000, "Member 'W_LoadoutSlot_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Tick, InDeltaTime) == 0x000038, "Member 'W_LoadoutSlot_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.UpdateActiveLoadout
// 0x02E8 (0x02E8 - 0x0000)
struct W_LoadoutSlot_C_UpdateActiveLoadout final
{
public:
	struct FSavedLoadout                          ActiveLoadout;                                     // 0x0000(0x02E8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_LoadoutSlot_C_UpdateActiveLoadout) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_UpdateActiveLoadout");
static_assert(sizeof(W_LoadoutSlot_C_UpdateActiveLoadout) == 0x0002E8, "Wrong size on W_LoadoutSlot_C_UpdateActiveLoadout");
static_assert(offsetof(W_LoadoutSlot_C_UpdateActiveLoadout, ActiveLoadout) == 0x000000, "Member 'W_LoadoutSlot_C_UpdateActiveLoadout::ActiveLoadout' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.UpdateAmmoCount
// 0x0004 (0x0004 - 0x0000)
struct W_LoadoutSlot_C_UpdateAmmoCount final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_UpdateAmmoCount) == 0x000004, "Wrong alignment on W_LoadoutSlot_C_UpdateAmmoCount");
static_assert(sizeof(W_LoadoutSlot_C_UpdateAmmoCount) == 0x000004, "Wrong size on W_LoadoutSlot_C_UpdateAmmoCount");
static_assert(offsetof(W_LoadoutSlot_C_UpdateAmmoCount, Count) == 0x000000, "Member 'W_LoadoutSlot_C_UpdateAmmoCount::Count' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.UpdateAugment
// 0x0018 (0x0018 - 0x0000)
struct W_LoadoutSlot_C_UpdateAugment final
{
public:
	class FText                                   AugmentText;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_LoadoutSlot_C_UpdateAugment) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_UpdateAugment");
static_assert(sizeof(W_LoadoutSlot_C_UpdateAugment) == 0x000018, "Wrong size on W_LoadoutSlot_C_UpdateAugment");
static_assert(offsetof(W_LoadoutSlot_C_UpdateAugment, AugmentText) == 0x000000, "Member 'W_LoadoutSlot_C_UpdateAugment::AugmentText' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.UpdateCurrentItemMap
// 0x0050 (0x0050 - 0x0000)
struct W_LoadoutSlot_C_UpdateCurrentItemMap final
{
public:
	TMap<EItemCategory, class UClass*>            ItemCategory;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_LoadoutSlot_C_UpdateCurrentItemMap) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_UpdateCurrentItemMap");
static_assert(sizeof(W_LoadoutSlot_C_UpdateCurrentItemMap) == 0x000050, "Wrong size on W_LoadoutSlot_C_UpdateCurrentItemMap");
static_assert(offsetof(W_LoadoutSlot_C_UpdateCurrentItemMap, ItemCategory) == 0x000000, "Member 'W_LoadoutSlot_C_UpdateCurrentItemMap::ItemCategory' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.UpdateCurrentSlot
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_UpdateCurrentSlot final
{
public:
	class UW_LoadoutSlot_C*                       CurrentSlot;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_UpdateCurrentSlot) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_UpdateCurrentSlot");
static_assert(sizeof(W_LoadoutSlot_C_UpdateCurrentSlot) == 0x000008, "Wrong size on W_LoadoutSlot_C_UpdateCurrentSlot");
static_assert(offsetof(W_LoadoutSlot_C_UpdateCurrentSlot, CurrentSlot) == 0x000000, "Member 'W_LoadoutSlot_C_UpdateCurrentSlot::CurrentSlot' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_GetFocusTarget final
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_GetFocusTarget");
static_assert(sizeof(W_LoadoutSlot_C_GetFocusTarget) == 0x000008, "Wrong size on W_LoadoutSlot_C_GetFocusTarget");
static_assert(offsetof(W_LoadoutSlot_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_LoadoutSlot_C_GetFocusTarget::Focus' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.GetItemIcon
// 0x0070 (0x0070 - 0x0000)
struct W_LoadoutSlot_C_GetItemIcon final
{
public:
	TSoftObjectPtr<class UTexture2D>              Image;                                             // 0x0000(0x0028)(Parm, OutParm, UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              OutImage;                                          // 0x0028(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash)
	class UItemData*                              GameItemData;                                      // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          FoundItem;                                         // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FWeaponData>                    Weapons;                                           // 0x0060(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(W_LoadoutSlot_C_GetItemIcon) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_GetItemIcon");
static_assert(sizeof(W_LoadoutSlot_C_GetItemIcon) == 0x000070, "Wrong size on W_LoadoutSlot_C_GetItemIcon");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, Image) == 0x000000, "Member 'W_LoadoutSlot_C_GetItemIcon::Image' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, OutImage) == 0x000028, "Member 'W_LoadoutSlot_C_GetItemIcon::OutImage' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, GameItemData) == 0x000050, "Member 'W_LoadoutSlot_C_GetItemIcon::GameItemData' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, FoundItem) == 0x000058, "Member 'W_LoadoutSlot_C_GetItemIcon::FoundItem' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, Weapons) == 0x000060, "Member 'W_LoadoutSlot_C_GetItemIcon::Weapons' has a wrong offset!");

}

