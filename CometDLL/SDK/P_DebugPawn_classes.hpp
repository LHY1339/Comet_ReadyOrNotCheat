#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: P_DebugPawn

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CinematicCamera_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass P_DebugPawn.P_DebugPawn_C
// 0x07C8 (0x0A60 - 0x0298)
class AP_DebugPawn_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCineCameraComponent*                   CineCamera;                                        // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UW_Main_C*                              W_Main;                                            // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FPostProcessSettings                   StartupPostProcess;                                // 0x02B0(0x06E0)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          hasSetDefaultSettings;                             // 0x0990(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_991[0x3];                                      // 0x0991(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraLensSettings                    StartupLensSettings;                               // 0x0994(0x001C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FCameraFocusSettings                   StarupFocusSettings;                               // 0x09B0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AActor*                                 LastSelectedActor;                                 // 0x0A10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          isDoFFocusedActor;                                 // 0x0A18(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A19[0x7];                                      // 0x0A19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RollValue;                                         // 0x0A20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VerticalMovementDirection;                         // 0x0A28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        GamepadRollDirection;                              // 0x0A30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isAttached;                                        // 0x0A38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A39[0x7];                                      // 0x0A39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 AttachedPawnRef;                                   // 0x0A40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         CameraSpeedTarget;                                 // 0x0A48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveForwardK;                                      // 0x0A4C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveForwardC;                                      // 0x0A50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveRightK;                                        // 0x0A54(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveRightC;                                        // 0x0A58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveUp;                                            // 0x0A5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_P_DebugPawn(int32 EntryPoint);
	void InpActEvt_CameraMod_AddTeleportPoint_K2Node_InputActionEvent_21(const struct FKey& Key);
	void InpActEvt_CameraMod_LoadCameraSettings10_K2Node_InputActionEvent_11(const struct FKey& Key);
	void InpActEvt_CameraMod_LoadCameraSettings1_K2Node_InputActionEvent_20(const struct FKey& Key);
	void InpActEvt_CameraMod_LoadCameraSettings2_K2Node_InputActionEvent_19(const struct FKey& Key);
	void InpActEvt_CameraMod_LoadCameraSettings3_K2Node_InputActionEvent_18(const struct FKey& Key);
	void InpActEvt_CameraMod_LoadCameraSettings4_K2Node_InputActionEvent_17(const struct FKey& Key);
	void InpActEvt_CameraMod_LoadCameraSettings5_K2Node_InputActionEvent_16(const struct FKey& Key);
	void InpActEvt_CameraMod_LoadCameraSettings6_K2Node_InputActionEvent_15(const struct FKey& Key);
	void InpActEvt_CameraMod_LoadCameraSettings7_K2Node_InputActionEvent_14(const struct FKey& Key);
	void InpActEvt_CameraMod_LoadCameraSettings8_K2Node_InputActionEvent_13(const struct FKey& Key);
	void InpActEvt_CameraMod_LoadCameraSettings9_K2Node_InputActionEvent_12(const struct FKey& Key);
	void InpActEvt_CameraMod_ResetCameraSettings_K2Node_InputActionEvent_10(const struct FKey& Key);
	void InpActEvt_CameraMod_TeleportToPoint10_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_CameraMod_TeleportToPoint1_K2Node_InputActionEvent_9(const struct FKey& Key);
	void InpActEvt_CameraMod_TeleportToPoint2_K2Node_InputActionEvent_8(const struct FKey& Key);
	void InpActEvt_CameraMod_TeleportToPoint3_K2Node_InputActionEvent_7(const struct FKey& Key);
	void InpActEvt_CameraMod_TeleportToPoint4_K2Node_InputActionEvent_6(const struct FKey& Key);
	void InpActEvt_CameraMod_TeleportToPoint5_K2Node_InputActionEvent_5(const struct FKey& Key);
	void InpActEvt_CameraMod_TeleportToPoint6_K2Node_InputActionEvent_4(const struct FKey& Key);
	void InpActEvt_CameraMod_TeleportToPoint7_K2Node_InputActionEvent_3(const struct FKey& Key);
	void InpActEvt_CameraMod_TeleportToPoint8_K2Node_InputActionEvent_2(const struct FKey& Key);
	void InpActEvt_CameraMod_TeleportToPoint9_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpAxisEvt_CameraMod_CameraSpeed_K2Node_InputAxisEvent_12(float AxisValue);
	void InpAxisEvt_CameraMod_Lean_K2Node_InputAxisEvent_2(float AxisValue);
	void InpAxisEvt_CameraMod_LookRightC_K2Node_InputAxisEvent_20(float AxisValue);
	void InpAxisEvt_CameraMod_LookRightK_K2Node_InputAxisEvent_19(float AxisValue);
	void InpAxisEvt_CameraMod_LookUpC_K2Node_InputAxisEvent_17(float AxisValue);
	void InpAxisEvt_CameraMod_LookUpK_K2Node_InputAxisEvent_18(float AxisValue);
	void InpAxisEvt_CameraMod_MoveForwardC_K2Node_InputAxisEvent_14(float AxisValue);
	void InpAxisEvt_CameraMod_MoveForwardK_K2Node_InputAxisEvent_13(float AxisValue);
	void InpAxisEvt_CameraMod_MoveRightC_K2Node_InputAxisEvent_16(float AxisValue);
	void InpAxisEvt_CameraMod_MoveRightK_K2Node_InputAxisEvent_15(float AxisValue);
	void InpAxisEvt_CameraMod_MoveUp_K2Node_InputAxisEvent_11(float AxisValue);
	void MovementAxisFinterp(float Axis, float Variable, bool* NoStartInertia, double* fIntOut);
	void OnValueCommitted_Event(float InValue, ETextCommit CommitMethod);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ResetCameraValues();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"P_DebugPawn_C">();
	}
	static class AP_DebugPawn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AP_DebugPawn_C>();
	}
};
static_assert(alignof(AP_DebugPawn_C) == 0x000010, "Wrong alignment on AP_DebugPawn_C");
static_assert(sizeof(AP_DebugPawn_C) == 0x000A60, "Wrong size on AP_DebugPawn_C");
static_assert(offsetof(AP_DebugPawn_C, UberGraphFrame) == 0x000298, "Member 'AP_DebugPawn_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AP_DebugPawn_C, CineCamera) == 0x0002A0, "Member 'AP_DebugPawn_C::CineCamera' has a wrong offset!");
static_assert(offsetof(AP_DebugPawn_C, W_Main) == 0x0002A8, "Member 'AP_DebugPawn_C::W_Main' has a wrong offset!");
static_assert(offsetof(AP_DebugPawn_C, StartupPostProcess) == 0x0002B0, "Member 'AP_DebugPawn_C::StartupPostProcess' has a wrong offset!");
static_assert(offsetof(AP_DebugPawn_C, hasSetDefaultSettings) == 0x000990, "Member 'AP_DebugPawn_C::hasSetDefaultSettings' has a wrong offset!");
static_assert(offsetof(AP_DebugPawn_C, StartupLensSettings) == 0x000994, "Member 'AP_DebugPawn_C::StartupLensSettings' has a wrong offset!");
static_assert(offsetof(AP_DebugPawn_C, StarupFocusSettings) == 0x0009B0, "Member 'AP_DebugPawn_C::StarupFocusSettings' has a wrong offset!");
static_assert(offsetof(AP_DebugPawn_C, LastSelectedActor) == 0x000A10, "Member 'AP_DebugPawn_C::LastSelectedActor' has a wrong offset!");
static_assert(offsetof(AP_DebugPawn_C, isDoFFocusedActor) == 0x000A18, "Member 'AP_DebugPawn_C::isDoFFocusedActor' has a wrong offset!");
static_assert(offsetof(AP_DebugPawn_C, RollValue) == 0x000A20, "Member 'AP_DebugPawn_C::RollValue' has a wrong offset!");
static_assert(offsetof(AP_DebugPawn_C, VerticalMovementDirection) == 0x000A28, "Member 'AP_DebugPawn_C::VerticalMovementDirection' has a wrong offset!");
static_assert(offsetof(AP_DebugPawn_C, GamepadRollDirection) == 0x000A30, "Member 'AP_DebugPawn_C::GamepadRollDirection' has a wrong offset!");
static_assert(offsetof(AP_DebugPawn_C, isAttached) == 0x000A38, "Member 'AP_DebugPawn_C::isAttached' has a wrong offset!");
static_assert(offsetof(AP_DebugPawn_C, AttachedPawnRef) == 0x000A40, "Member 'AP_DebugPawn_C::AttachedPawnRef' has a wrong offset!");
static_assert(offsetof(AP_DebugPawn_C, CameraSpeedTarget) == 0x000A48, "Member 'AP_DebugPawn_C::CameraSpeedTarget' has a wrong offset!");
static_assert(offsetof(AP_DebugPawn_C, MoveForwardK) == 0x000A4C, "Member 'AP_DebugPawn_C::MoveForwardK' has a wrong offset!");
static_assert(offsetof(AP_DebugPawn_C, MoveForwardC) == 0x000A50, "Member 'AP_DebugPawn_C::MoveForwardC' has a wrong offset!");
static_assert(offsetof(AP_DebugPawn_C, MoveRightK) == 0x000A54, "Member 'AP_DebugPawn_C::MoveRightK' has a wrong offset!");
static_assert(offsetof(AP_DebugPawn_C, MoveRightC) == 0x000A58, "Member 'AP_DebugPawn_C::MoveRightC' has a wrong offset!");
static_assert(offsetof(AP_DebugPawn_C, MoveUp) == 0x000A5C, "Member 'AP_DebugPawn_C::MoveUp' has a wrong offset!");

}

