#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Primary_Trenchgun

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Primary_Trenchgun.Primary_Trenchgun_C
// 0x0020 (0x17D0 - 0x17B0)
class APrimary_Trenchgun_C final : public AShotgun
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x17B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   PointLight;                                        // 0x17B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    PointLight1;                                       // 0x17C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           LightToggle1P;                                     // 0x17C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Primary_Trenchgun(int32 EntryPoint);
	void Multicast_DisableLight();
	void Multicast_EnableLight();
	void OnAttachmentActivated_Event_0(EItemAttachment AttachmentChanged);
	void OnAttachmentDeactivated_Event_0(EItemAttachment AttachmentChanged);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void Server_DisableLight();
	void Server_EnableLight();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Primary_Trenchgun_C">();
	}
	static class APrimary_Trenchgun_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APrimary_Trenchgun_C>();
	}
};
static_assert(alignof(APrimary_Trenchgun_C) == 0x000010, "Wrong alignment on APrimary_Trenchgun_C");
static_assert(sizeof(APrimary_Trenchgun_C) == 0x0017D0, "Wrong size on APrimary_Trenchgun_C");
static_assert(offsetof(APrimary_Trenchgun_C, UberGraphFrame) == 0x0017B0, "Member 'APrimary_Trenchgun_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APrimary_Trenchgun_C, PointLight) == 0x0017B8, "Member 'APrimary_Trenchgun_C::PointLight' has a wrong offset!");
static_assert(offsetof(APrimary_Trenchgun_C, PointLight1) == 0x0017C0, "Member 'APrimary_Trenchgun_C::PointLight1' has a wrong offset!");
static_assert(offsetof(APrimary_Trenchgun_C, LightToggle1P) == 0x0017C8, "Member 'APrimary_Trenchgun_C::LightToggle1P' has a wrong offset!");

}

